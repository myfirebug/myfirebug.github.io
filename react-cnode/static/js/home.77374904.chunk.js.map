{"version":3,"sources":["service/config.js","service/fetch.js","service/index.js","../node_modules/_@babel_runtime@7.10.0@@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/_@babel_runtime@7.10.0@@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/_@babel_runtime@7.10.0@@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/_@babel_runtime@7.10.0@@babel/runtime/helpers/esm/nonIterableRest.js","components/footer/index.js","store/actions/topics.js","components/header/index.js","hook/useScollLoad.js","page/home/index.js"],"names":["development","api","production","getService","serviceUrl","axios","defaults","baseURL","config","get","url","params","header","Promise","resolve","reject","then","res","catch","err","post","data","qs","Qs","stringify","headers","timeout","interceptors","request","use","loading","error","response","hide","status","getTopics","getDetails","id","login","user","username","collect","de_collect","myCollect","messages","markOne","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","unsupportedIterableToArray","TypeError","Footer","memo","hash","useState","icon","name","path","navList","className","map","item","index","indexOf","join","key","to","pathname","dangerouslySetInnerHTML","__html","topics","payload","type","types","isScroll","flag","Header","tabChangeHandler","tab","tabs","onClick","useScollLoad","setFlag","scrollTop","setScrollTop","getScrollTop","document","documentElement","body","scrollHandler","clientHeight","Math","min","max","scrollHeight","useEffect","window","addEventListener","removeEventListener","connect","state","datas","getAllTopics","dispatch","getState","page","Ajax","getTopicsParams","topicsParams","isScrollLoad","timmer","clearTimeout","setTimeout","scrollTo","useCallback","TopicsList"],"mappings":"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","file":"static/js/home.77374904.chunk.js","sourcesContent":["/*\r\n * @Author: hejp\r\n * @Date:   16:26\r\n * @Last Modified by:   hejp\r\n * @Last Modified time: 16:26\r\n */\r\nexport default {\r\n    development: {\r\n        api: 'https://cnodejs.org/api/v1'\r\n    },\r\n    production: {\r\n        api: 'https://cnodejs.org/api/v1'\r\n    }\r\n}\r\n","/*\r\n * @Author: hejp\r\n * @Date:   10:39\r\n * @Last Modified by:   hejp\r\n * @Last Modified time: 10:39\r\n */\r\nimport axios from 'axios'\r\nimport config from './config'\r\nimport Qs from 'qs'\r\nimport { Toast } from 'antd-mobile'\r\nconst ENV = process.env.NODE_ENV;\r\n\r\nconst getService = (serviceUrl) => {\r\n    // 环境切换(开发，正式环境)\r\n    if (ENV === 'development') {\r\n        axios.defaults.baseURL = config.development[serviceUrl]\r\n    } else if (ENV === 'production') {\r\n        // production, online\r\n        axios.defaults.baseURL = config.production[serviceUrl]\r\n    }\r\n}\r\n// 请求超时\r\naxios.defaults.timeout = 60000\r\n\r\n// post 请求头的设置\r\naxios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded;charset=UTF-8'\r\n\r\n// 请求拦截器\r\naxios.interceptors.request.use(\r\n    config => {\r\n        Toast.loading('loading...', 0)\r\n        // document.getElementById('js_loading').style.display = 'block';\r\n        return config\r\n    },\r\n    error => {\r\n        return Promise.error(error)\r\n    }\r\n)\r\n\r\n// 响应拦截器\r\naxios.interceptors.response.use(\r\n    response => {\r\n        // document.getElementById('js_loading').style.display = 'none'\r\n        Toast.hide()\r\n        if (response.status === 200) {\r\n            return Promise.resolve(response.data)\r\n        } else {\r\n            return Promise.reject(response)\r\n        }\r\n    },\r\n    error => {\r\n        // document.getElementById('js_loading').style.display = 'none'\r\n        Toast.hide()\r\n        let response = error.response\r\n        if (!response) {\r\n            return Promise.reject(error)\r\n        }\r\n        let code = response.status\r\n        if (code) {\r\n            switch (code) {\r\n                case 401:\r\n                    break\r\n                // token过期\r\n                case 403:\r\n                    break\r\n                // 404请求不存在\r\n                case 404:\r\n                    break\r\n                case 500:\r\n                    break\r\n                default:\r\n                    break\r\n            }\r\n        }\r\n        return Promise.reject(error)\r\n    }\r\n)\r\n\r\n/**\r\n * get方法\r\n * @param url [请求的url地址]\r\n * @param params [请求的参数]\r\n * @returns {Promise<any>}\r\n */\r\nexport function get (url, params, serviceUrl, header) {\r\n    if (serviceUrl) {\r\n        getService(serviceUrl)\r\n    }\r\n    return new Promise((resolve, reject) => {\r\n        axios.get(url, {\r\n            params: params,\r\n            header: header\r\n        }).then(res => {\r\n            resolve(res)\r\n        }).catch(err => {\r\n            reject(err)\r\n        })\r\n    })\r\n}\r\n/**\r\n * post方法\r\n * @param url [请求的url地址]\r\n * @param params [请求的参数]\r\n * @returns {Promise<any>}\r\n */\r\nexport function post (url, params, serviceUrl, header, data, qs = true) {\r\n    if (serviceUrl) {\r\n        getService(serviceUrl)\r\n    }\r\n    return new Promise((resolve, reject) => {\r\n        axios.post(url,\r\n            qs ? Qs.stringify(params) : params,\r\n            {\r\n                headers: header ? header : {\r\n                    'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'\r\n                }\r\n            },\r\n            data\r\n            ).then(res => {\r\n            resolve(res)\r\n        }).catch(err => {\r\n            reject(err)\r\n        })\r\n    })\r\n}\r\n","/*\r\n * @Author: hejp\r\n * @Date:   16:43\r\n * @Last Modified by:   hejp\r\n * @Last Modified time: 16:43\r\n */\r\nimport {\r\n    get,\r\n    post\r\n} from './fetch'\r\n\r\nexport default {\r\n    getTopics(params) {\r\n        return get('/topics', params, 'api')\r\n    },\r\n    getDetails(id) {\r\n        return get(`/topic/${id}`, {},'api')\r\n    },\r\n    login(params) {\r\n        return post('/accesstoken', params,'api')\r\n    },\r\n    user(username) {\r\n        return get(`/user/${username}`, '','api')\r\n    },\r\n    collect(params) {\r\n        return post('/topic_collect/collect', params,'api')\r\n    },\r\n    de_collect(params) {\r\n        return post('/topic_collect/de_collect ', params,'api')\r\n    },\r\n    myCollect(username) {\r\n        return get(`/topic_collect/${username}`, '','api')\r\n    },\r\n    messages(params) {\r\n        return get('messages', params,'api')\r\n    },\r\n    markOne(id, params) {\r\n        return post(`/message/mark_one/${id}`, params,'api')\r\n    }\r\n}\r\n","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","/*\r\n * @Author: hejp\r\n * @Date:   14:10\r\n * @Last Modified by:   hejp\r\n * @Last Modified time: 14:10\r\n */\r\nimport React, {\r\n    useState,\r\n    memo\r\n} from 'react'\r\nimport {\r\n    Link\r\n} from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport './index.scss'\r\n\r\nconst Footer = memo(({ hash }) => {\r\n    const [navList] = useState([\r\n        {\r\n            icon: '&#xe729;',\r\n            name: '首页',\r\n            path: '/home'\r\n        },\r\n        {\r\n            icon: '&#xe68a;',\r\n            name: '消息',\r\n            path: '/message'\r\n        },\r\n        {\r\n            icon: '&#xe6a1;',\r\n            name: '我的',\r\n            path: '/my'\r\n        }\r\n    ])\r\n    return (\r\n        <div className=\"cn-footer\">\r\n            <ul className=\"cn-nav\">\r\n                {\r\n                    navList.map((item, index) => (\r\n                        <li className={['cn-nav__item', hash.indexOf(item.path) !== -1 ? 'is-active' : ''].join(' ')}\r\n                            key={index}>\r\n                            <Link\r\n                                to={{\r\n                                    pathname: item.path\r\n                                }}\r\n                            >\r\n                                    <span\r\n                                        dangerouslySetInnerHTML={{__html: `${item.icon}`}}\r\n                                        className=\"ued-mobile\"></span>\r\n                                <span className=\"text\">{item.name}</span>\r\n                            </Link>\r\n                        </li>\r\n                    ))\r\n                }\r\n            </ul>\r\n        </div>\r\n    )\r\n})\r\n\r\nFooter.propTypes = {\r\n    hash: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Footer\r\n","/*\r\n * @Author: hejp\r\n * @Date:   16:17\r\n * @Last Modified by:   hejp\r\n * @Last Modified time: 16:17\r\n */\r\nimport * as types from '../actionType'\r\nimport Ajax from '../../service'\r\n\r\nconst topics = payload => ({\r\n    type: types.TOPICS,\r\n    payload\r\n})\r\n\r\nconst isScroll = flag => ({\r\n    type: types.IS_SCROLL,\r\n    flag: flag\r\n})\r\n\r\nconst topicsParams = params => ({\r\n    type: types.TOPICS_PARAMS,\r\n    params: params\r\n})\r\n\r\nconst scrollTop = value => ({\r\n    type: types.SCROLLTOP,\r\n    value\r\n})\r\n\r\n\r\n\r\nexport const  getAllTopics = () => (dispatch, getState) => {\r\n    const state = getState();\r\n    const params = state.topics.params;\r\n    const length = state.topics.datas.length\r\n    const flag = state.topics.flag\r\n    if (length && params.page === 1) {\r\n        dispatch(topics({\r\n            topics: [],\r\n            flag: true,\r\n            params\r\n        }))\r\n    }\r\n    if (flag) {\r\n        dispatch(isScroll(false))\r\n        Ajax.getTopics(params)\r\n            .then(res => {\r\n                dispatch(isScroll(true))\r\n                dispatch(topics({\r\n                    topics: res.data,\r\n                    flag: params.page === 1 ? true : false\r\n                }))\r\n            }).catch(() => {\r\n            dispatch(isScroll(true))\r\n        })\r\n    }\r\n}\r\n\r\nexport const getTopicsParams = params => dispatch => {\r\n    dispatch(topicsParams(params))\r\n}\r\n\r\nexport const setScrollTop = value => dispatch => {\r\n    dispatch(scrollTop(value))\r\n}\r\n","/*\r\n * @Author: hejp\r\n * @Date:   17:39\r\n * @Last Modified by:   hejp\r\n * @Last Modified time: 17:39\r\n */\r\nimport React, {\r\n    useState,\r\n    memo\r\n} from 'react'\r\nimport './index.scss'\r\n\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Header = memo(({ tabChangeHandler, tab }) => {\r\n    const [tabs] = useState([{\r\n        name: '全部',\r\n        value: ''\r\n    },{\r\n        name: '精华',\r\n        value: 'good'\r\n    },{\r\n        name: '分享',\r\n        value: 'share'\r\n    },{\r\n        name: '问答',\r\n        value: 'ask'\r\n    },{\r\n        name: '招聘',\r\n        value: 'job'\r\n    },{\r\n        name: '客户端',\r\n        value: 'dev'\r\n    }])\r\n    return (\r\n        <header className=\"cn-header\">\r\n            <ul className=\"cn-tabs__list\">\r\n                {\r\n                    tabs.map((item, index) => (\r\n                        <li\r\n                            onClick={() => tabChangeHandler(item.value)}\r\n                            className={['cn-tabs__item', tab === item.value ? 'is-active' : ''].join(' ')}\r\n                            key={index}>\r\n                            { item.name }\r\n                        </li>\r\n                    ))\r\n                }\r\n            </ul>\r\n        </header>\r\n    )\r\n})\r\nHeader.propTypes = {\r\n    tabChangeHandler: PropTypes.func.isRequired,\r\n    tab: PropTypes.string.isRequired\r\n}\r\nexport default Header\r\n","/*\r\n * @Author: hejp\r\n * @Date:   11:12\r\n * @Last Modified by:   hejp\r\n * @Last Modified time: 11:12\r\n */\r\nimport {\r\n    useState,\r\n    useEffect\r\n} from 'react'\r\n\r\nconst useScollLoad = () => {\r\n    const [flag, setFlag] = useState(false)\r\n    const [scrollTop, setScrollTop] = useState(0)\r\n\r\n    /**\r\n     * [获取滚动条当前的位置]\r\n     * @return {[Number]} [scrollTop]\r\n     */\r\n    const getScrollTop = () => {\r\n        let scrollTop = 0\r\n        if (document.documentElement && document.documentElement.scrollTop) {\r\n            scrollTop = document.documentElement.scrollTop\r\n        } else if (document.body) {\r\n            scrollTop = document.body.scrollTop\r\n        }\r\n        return scrollTop\r\n    }\r\n    /**\r\n     * [获取当前可视范围的高度]\r\n     * @return {[Number]} [clientHeight]\r\n     */\r\n    const getClientHeight = () => {\r\n        let clientHeight = 0\r\n        if (document.body.clientHeight && document.documentElement.clientHeight) {\r\n            clientHeight = Math.min(document.body.clientHeight, document.documentElement.clientHeight)\r\n        } else {\r\n            clientHeight = Math.max(document.body.clientHeight, document.documentElement.clientHeight)\r\n        }\r\n        return clientHeight\r\n    }\r\n\r\n    /**\r\n     * [获取当前可视范围的高度]\r\n     * @return {[Number]} [clientHeight]\r\n     */\r\n    const getScrollHeight = () => {\r\n        return Math.max(document.body.scrollHeight, document.documentElement.scrollHeight)\r\n    }\r\n    /**\r\n     * 判断是否可滚动加载\r\n     */\r\n    const scrollHandler = () => {\r\n        setScrollTop(getScrollTop())\r\n        if (getScrollTop() + getClientHeight() + 50 > getScrollHeight()) {\r\n            setFlag(true)\r\n        } else {\r\n            setFlag(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('scroll', scrollHandler)\r\n        return () => {\r\n            window.removeEventListener('scroll', scrollHandler)\r\n        }\r\n    }, [])\r\n\r\n    return {\r\n        flag: flag,\r\n        scrollTop: scrollTop\r\n    }\r\n}\r\n\r\nexport default useScollLoad\r\n","/*\r\n * @Author: hejp\r\n * @Date:   11:21\r\n * @Last Modified by:   hejp\r\n * @Last Modified time: 11:21\r\n */\r\nimport React, {\r\n    useEffect,\r\n    useCallback\r\n} from 'react'\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    getAllTopics,\r\n    getTopicsParams,\r\n    setScrollTop\r\n} from '../../store/actions/topics'\r\n// 头部\r\nimport Header from '../../components/header'\r\n// 列表\r\nimport TopicsList from '../../components/topics/TopicsList'\r\n// 是否可滚动加载\r\nimport useScollLoad from '../../hook/useScollLoad'\r\nimport PropTypes from 'prop-types'\r\nimport Footer from '../../components/footer'\r\n\r\nconst Home = ({ topics, getAllTopics, flag, getTopicsParams, params, scrollTop, setScrollTop }) => {\r\n\r\n    const isScrollLoad = useScollLoad();\r\n\r\n    // 判断是否滚动加载\r\n    useEffect(() => {\r\n        if (isScrollLoad.flag && flag) {\r\n            getTopicsParams({\r\n                ...params,\r\n                page: params.page + 1\r\n            })\r\n        }\r\n    }, [isScrollLoad.flag])\r\n\r\n    // 记录scrollTop的值\r\n    useEffect(() => {\r\n        let timmer = null\r\n        if (timmer) {\r\n            clearTimeout(timmer)\r\n        }\r\n        timmer = setTimeout(() => {\r\n            setScrollTop(isScrollLoad.scrollTop)\r\n        }, 200)\r\n        return () => {\r\n            if (timmer) {\r\n                clearTimeout(timmer)\r\n            }\r\n        }\r\n    }, [isScrollLoad.scrollTop, setScrollTop])\r\n\r\n    // 请求数据\r\n    useEffect(() => {\r\n        if (params.page === 1) {\r\n            window.scrollTo(0, 0)\r\n        }\r\n        if (isScrollLoad.flag || params.page === 1) {\r\n            getAllTopics(params)\r\n        }\r\n    }, [params])\r\n\r\n    useEffect(() => {\r\n        if (params.page !== 1) {\r\n            window.scrollTo(0, scrollTop)\r\n        }\r\n    }, [])\r\n\r\n    const tabChangeHandler = useCallback((value) => {\r\n        getTopicsParams({\r\n            ...params,\r\n            page: 1,\r\n            tab: value\r\n        })\r\n    }, [params])\r\n\r\n    return (\r\n        <>\r\n            <Header tabChangeHandler={tabChangeHandler} tab={params.tab}></Header>\r\n            <TopicsList topics={topics} />\r\n            <Footer hash='/home' />\r\n        </>\r\n    )\r\n}\r\n\r\nHome.propTypes = {\r\n    topics: PropTypes.array.isRequired,\r\n    getAllTopics: PropTypes.func.isRequired,\r\n    flag: PropTypes.bool.isRequired,\r\n    getTopicsParams: PropTypes.func.isRequired,\r\n    scrollTop: PropTypes.number.isRequired,\r\n    setScrollTop: PropTypes.func.isRequired,\r\n    params: PropTypes.shape({\r\n        page: PropTypes.number.isRequired,\r\n        tab: PropTypes.string.isRequired,\r\n        limit: PropTypes.number.isRequired\r\n    }).isRequired\r\n\r\n}\r\n\r\nconst topics = state => ({\r\n    topics: state.topics.datas,\r\n    flag: state.topics.flag,\r\n    params: state.topics.params,\r\n    scrollTop: state.topics.scrollTop\r\n})\r\n\r\nexport default connect(\r\n    topics,\r\n    {\r\n        getAllTopics,\r\n        getTopicsParams,\r\n        setScrollTop\r\n    }\r\n)(Home)\r\n"],"sourceRoot":""}