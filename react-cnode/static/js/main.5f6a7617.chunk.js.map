{"version":3,"sources":["store/reducers/topics.js","store/reducers/index.js","store/reducers/details.js","store/reducers/userInfo.js","store/reducers/my.js","store/reducers/collect.js","store/reducers/message.js","store/index.js","components/errorBoundary/index.js","components/PrivateRoute/index.js","router/index.js","components/loading/index.js","App.js","index.js","store/actionType.js"],"names":["initialState","datas","flag","params","page","tab","limit","scrollTop","combineReducers","topics","state","action","type","TOPICS","payload","IS_SCROLL","TOPICS_PARAMS","SCROLLTOP","value","details","comments","replies","DETAILS","data","COMMENT_LIKE","replayIndex","findIndex","item","id","replayId","comment","ups","index","userId","success","splice","push","COMMENT_DELETE","deleteIndex","SET_COLLECT","is_collect","userInfo","USERINFO","user","USER_CENTER","collects","COLLECT_LIST","messages","MESSAGES","hasnot_read_messages","has_read_messages","MARK_ONE","has_read","middleware","thunk","persistConfig","key","storage","whitelist","persistedReducer","persistReducer","reducers","createStore","applyMiddleware","ErrorBoundary","this","props","children","error","Component","PrivateRoute","isLogin","component","rest","render","to","pathname","from","location","connect","token","routerList","private","lazy","Routers","fallback","map","router","path","Loading","memo","style","className","App","persistor","persistStore","store","ReactDOM","loading","document","getElementById"],"mappings":"uRAaMA,EAAe,CAEjBC,MAAO,GAEPC,MAAM,EACNC,OAAQ,CACJC,KAAM,EACNC,IAAK,GACLC,MAAO,IAEXC,UAAW,G,yBCTAC,cAAgB,CAC3BC,ODWkB,WAAmC,IAAlCC,EAAiC,uDAAzBV,EAAcW,EAAW,uCACpD,OAAQA,EAAOC,MACX,KAAKC,IAED,OAAIF,EAAOG,QAAQZ,KACR,2BACAQ,GADP,IAEIT,MAAOU,EAAOG,QAAQL,SAGvB,2BACAC,GADP,IAEIT,MAAM,GAAD,mBACES,EAAMT,OADR,YAEEU,EAAOG,QAAQL,WAG9B,KAAKM,IACD,OAAO,2BACAL,GADP,IAEIR,KAAMS,EAAOT,OAErB,KAAKc,IACD,OAAO,2BACAN,GADP,IAEIP,OAAQQ,EAAOR,SAEvB,KAAKc,IACD,OAAO,2BACAP,GADP,IAEIH,UAAWI,EAAOO,QAE1B,QACI,OAAOR,IC3CfS,QCCmB,WAAyB,IAAxBT,EAAuB,uDAAf,GAAIC,EAAW,uCAErCS,EAAWV,EAAMW,QACvB,OAAQV,EAAOC,MACX,KAAKU,IACD,OAAOX,EAAOY,KAClB,KAAKC,IAED,IAAMC,EAAcL,EAASM,WAAU,SAAAC,GACnC,OAAOA,EAAKC,KAAOjB,EAAOG,QAAQe,YAGtC,GAAIJ,GAAe,EAAG,CAClB,IAAMK,EAAUV,EAASK,GACnBM,EAAMD,EAAQC,IACdC,EAAQD,EAAIL,WAAU,SAAAC,GACxB,OAAOA,IAAShB,EAAOG,QAAQmB,UAG/BD,GAAS,GACT,IAAME,QAAQ,uCAAU,KACxBH,EAAII,OAAOH,EAAO,KAElB,IAAME,QAAQ,2BAAQ,KACtBH,EAAIK,KAAKzB,EAAOG,QAAQmB,SAGhC,OAAO,2BACAvB,GADP,IAEIW,QAAQ,YACDD,KAGf,KAAKiB,IAED,IAAMC,EAAclB,EAASM,WAAU,SAAAC,GACnC,OAAOA,EAAKC,KAAOjB,EAAOG,QAAQe,YAMtC,OAJIS,GAAe,IACflB,EAASe,OAAOG,EAAa,GAC7B,IAAMJ,QAAQ,2BAAQ,MAEnB,2BACAxB,GADP,IAEIW,QAAQ,YACDD,KAGf,KAAKmB,IACD,OAAO,2BACA7B,GADP,IAEI8B,WAAY7B,EAAOT,OAE3B,QACI,OAAOQ,IDtDf+B,SEPoB,WAAyB,IAAxB/B,EAAuB,uDAAf,GAAIC,EAAW,uCAC5C,OAAQA,EAAOC,MACX,KAAK8B,IACD,OAAO/B,EAAOY,KAClB,QACI,OAAOb,IFGfiC,KGRgB,WAAyB,IAAxBjC,EAAuB,uDAAf,GAAIC,EAAW,uCACxC,OAAQA,EAAOC,MACX,KAAKgC,IACD,OAAOjC,EAAOY,KAClB,QACI,OAAOb,IHIfmC,SIToB,WAAyB,IAAxBnC,EAAuB,uDAAf,GAAIC,EAAW,uCAC5C,OAAQA,EAAOC,MACX,KAAKkC,IACD,OAAOnC,EAAOY,KAClB,QACI,OAAOb,IJKfqC,SKToB,WAAyB,IAAxBrC,EAAuB,uDAAf,GAAIC,EAAW,uCAC5C,OAAQA,EAAOC,MACX,KAAKoC,IACD,MAAM,GAAN,mBACOrC,EAAOY,KAAK0B,sBADnB,YAEOtC,EAAOY,KAAK2B,oBAEvB,KAAKC,IACD,IAAMnB,EAAQtB,EAAMgB,WAAU,SAACC,GAC3B,OAAOA,EAAKC,KAAOjB,EAAOiB,MAK9B,OAHII,GAAS,IACTtB,EAAMsB,GAAOoB,UAAW,GAErB,YACA1C,GAEX,QACI,OAAOA,MCZb2C,EAAa,CAACC,KAOpB,IAAMC,EAAgB,CAElBC,IAAK,OAELC,QAASA,IAITC,UAAW,CAAC,WAAY,WAGtBC,EAAmBC,YAAeL,EAAeM,GAExCC,cAAYH,EAAkBI,IAAe,WAAf,EAAmBV,I,uDCbjDW,E,4MAfXtD,MAAQ,CACJR,MAAM,G,uDAON,OAAI+D,KAAKvD,MAAMR,KACJ,qDAEJ+D,KAAKC,MAAMC,Y,gDARUC,GAC5B,MAAO,CAAElE,MAAM,O,GALKmE,a,QCGtBC,E,uKACQ,IAAD,SAC8CL,KAAKC,MAAhDK,EADH,EACGA,QAAoBF,EADvB,EACYG,UAAyBC,EADrC,uCAEL,OACI,kBAAC,IAAD,iBACQA,EADR,CAEIC,OAAQ,SAAAR,GAAK,OACTK,EACI,kBAACF,EAAcI,GAEf,kBAAC,IAAD,CACIE,GAAI,CACAC,SAAU,SACVlE,MAAO,CAAEmE,KAAM,EAAKX,MAAMY,SAASF,qB,GAbxCP,aA2BZU,eAJE,SAAArE,GAAK,MAAK,CACvB6D,UAAW7D,EAAM+B,SAASuC,SAGfD,CAEbT,GCrBIW,EAAa,CACf,CACIC,SAAS,EACTV,UAAWW,gBAAK,kBAAM,8DACtBP,SAAU,SAEd,CACIM,SAAS,EACTV,UAAWW,gBAAK,kBAAM,uDACtBP,SAAU,YAEd,CACIM,SAAS,EACTV,UAAWW,gBAAK,kBAAM,uDACtBP,SAAU,OAEd,CACIM,SAAS,EACTV,UAAWW,gBAAK,kBAAM,uDACtBP,SAAU,UAEd,CACIM,SAAS,EACTV,UAAWW,gBAAK,kBAAM,uDACtBP,SAAU,YAEd,CACIM,SAAS,EACTV,UAAWW,gBAAK,kBAAM,8DACtBP,SAAU,YAEd,CACIM,SAAS,EACTV,UAAWW,gBAAK,kBAAM,uDACtBP,SAAU,aAiCHQ,EA9BC,WACZ,OACI,kBAAC,IAAD,KACI,kBAAC,EAAD,KACI,kBAAC,WAAD,CAAUC,SAAU,+BAChB,kBAAC,IAAD,KAEQJ,EAAWK,KAAI,SAACC,EAAQvD,GACpB,OAAIuD,EAAOL,QACA,kBAAC,EAAD,CACH1B,IAAKxB,EACLwD,KAAOD,EAAOX,SACdJ,UAAYe,EAAOf,YAGhB,kBAAC,IAAD,CACHhB,IAAKxB,EACLwD,KAAOD,EAAOX,SACdJ,UAAYe,EAAOf,eAInC,kBAAC,IAAD,CAAUG,GAAG,eCtCtBc,G,OA5BCC,gBAAK,YAAkB,IAAdC,EAAa,EAAbA,MACrB,OACI,yBAAK/D,GAAG,aAAagE,UAAU,aAAaD,MAAOA,GAC/C,yBAAKC,UAAU,uBACX,yBAAKA,UAAU,QACX,0BAAMA,UAAU,YAChB,0BAAMA,UAAU,YAChB,0BAAMA,UAAU,YAChB,0BAAMA,UAAU,YAChB,0BAAMA,UAAU,YAChB,0BAAMA,UAAU,YAChB,0BAAMA,UAAU,YAChB,0BAAMA,UAAU,YAChB,0BAAMA,UAAU,YAChB,0BAAMA,UAAU,aAChB,0BAAMA,UAAU,aAChB,0BAAMA,UAAU,cAEpB,yBAAKA,UAAU,QAAf,oB,OChBDC,MATf,WACE,OACI,yBAAKD,UAAU,OACX,kBAAC,EAAD,MACA,kBAAC,EAAD,QCDJE,EAAYC,YAAaC,GAE/BC,IAASvB,OACL,kBAAC,IAAD,CAAUsB,MAAOA,GACb,kBAAC,IAAD,CAAaE,QAAS,KAAMJ,UAAWA,GACnC,kBAAC,EAAD,QAGVK,SAASC,eAAe,U,+BChB1B,0bAOO,IAAMvF,EAAS,SAETE,EAAY,YAEZC,EAAgB,gBAEhBC,EAAY,YAGZK,EAAU,UAEVe,EAAiB,iBAIjBb,EAAe,eAMfkB,EAAW,WAGXE,EAAc,cAGdL,EAAc,cAEdO,EAAe,eAGfE,EAAW,WAEXG,EAAW,Y","file":"static/js/main.5f6a7617.chunk.js","sourcesContent":["/*\r\n * @Author: hejp\r\n * @Date:   16:30\r\n * @Last Modified by:   hejp\r\n * @Last Modified time: 16:30\r\n */\r\nimport {\r\n    TOPICS,\r\n    IS_SCROLL,\r\n    TOPICS_PARAMS,\r\n    SCROLLTOP\r\n} from '../actionType'\r\n\r\nconst initialState = {\r\n    // 列表数据\r\n    datas: [],\r\n    // 是否请求接口\r\n    flag: true,\r\n    params: {\r\n        page: 1,\r\n        tab: '',\r\n        limit: 10\r\n    },\r\n    scrollTop: 0\r\n}\r\n\r\nexport const topics = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case TOPICS:\r\n            // 如果flag为真，意思就是currentPage=1\r\n            if (action.payload.flag) {\r\n                return {\r\n                    ...state,\r\n                    datas: action.payload.topics\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                datas: [\r\n                    ...state.datas,\r\n                    ...action.payload.topics\r\n                ]\r\n            }\r\n        case IS_SCROLL:\r\n            return {\r\n                ...state,\r\n                flag: action.flag\r\n            }\r\n        case TOPICS_PARAMS:\r\n            return {\r\n                ...state,\r\n                params: action.params\r\n            }\r\n        case SCROLLTOP:\r\n            return {\r\n                ...state,\r\n                scrollTop: action.value\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","/*\r\n * @Author: hejp\r\n * @Date:   16:40\r\n * @Last Modified by:   hejp\r\n * @Last Modified time: 16:40\r\n */\r\nimport { combineReducers } from 'redux'\r\nimport { topics } from './topics'\r\nimport { details } from './details';\r\nimport { userInfo } from './userInfo';\r\nimport { user } from './my';\r\nimport { collects } from './collect';\r\nimport { messages } from './message';\r\n\r\nexport default combineReducers({\r\n    topics,\r\n    details,\r\n    userInfo,\r\n    user,\r\n    collects,\r\n    messages\r\n})\r\n","/*\r\n * @Author: hejp\r\n * @Date:   15:24\r\n * @Last Modified by:   hejp\r\n * @Last Modified time: 15:24\r\n */\r\nimport {\r\n    DETAILS,\r\n    COMMENT_LIKE,\r\n    COMMENT_DELETE,\r\n    SET_COLLECT\r\n} from '../actionType'\r\n\r\nimport {\r\n    Toast\r\n} from 'antd-mobile'\r\n\r\nexport const details = (state = {}, action) => {\r\n    // 获取评论列表\r\n    const comments = state.replies\r\n    switch (action.type) {\r\n        case DETAILS:\r\n            return action.data\r\n        case COMMENT_LIKE:\r\n            // 找到需要点赞或者取消点赞的评论下标\r\n            const replayIndex = comments.findIndex(item => {\r\n                return item.id === action.payload.replayId\r\n            })\r\n            // 判断传入的id是否存在\r\n            if (replayIndex >= 0) {\r\n                const comment = comments[replayIndex]\r\n                const ups = comment.ups\r\n                const index = ups.findIndex(item => {\r\n                    return item === action.payload.userId\r\n                })\r\n                // 如果找到index则是取消点赞，否则就是点赞\r\n                if (index >= 0) {\r\n                    Toast.success('取消点赞成功', 1.5)\r\n                    ups.splice(index, 1)\r\n                } else {\r\n                    Toast.success('点赞成功', 1.5)\r\n                    ups.push(action.payload.userId)\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                replies: [\r\n                    ...comments\r\n                ]\r\n            }\r\n        case COMMENT_DELETE:\r\n            // 找到需要删除ID的下标\r\n            const deleteIndex = comments.findIndex(item => {\r\n                return item.id === action.payload.replayId\r\n            })\r\n            if (deleteIndex >= 0) {\r\n                comments.splice(deleteIndex, 1)\r\n                Toast.success('删除成功', 1.5)\r\n            }\r\n            return {\r\n                ...state,\r\n                replies: [\r\n                    ...comments\r\n                ]\r\n            }\r\n        case SET_COLLECT:\r\n            return {\r\n                ...state,\r\n                is_collect: action.flag\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","/*\r\n * @Author: hejp\r\n * @Date:   15:24\r\n * @Last Modified by:   hejp\r\n * @Last Modified time: 15:24\r\n */\r\nimport {\r\n    USERINFO\r\n} from '../actionType'\r\n\r\nexport const userInfo = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USERINFO:\r\n            return action.data\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","/*\r\n * @Author: hejp\r\n * @Date:   13:51\r\n * @Last Modified by:   hejp\r\n * @Last Modified time: 13:51\r\n */\r\nimport {\r\n    USER_CENTER\r\n} from '../actionType'\r\n\r\nexport const user = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_CENTER:\r\n            return action.data\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n","/*\r\n * @Author: hejp\r\n * @Date:   13:51\r\n * @Last Modified by:   hejp\r\n * @Last Modified time: 13:51\r\n */\r\nimport {\r\n    COLLECT_LIST\r\n} from '../actionType'\r\n\r\nexport const collects = (state = [], action) => {\r\n    switch (action.type) {\r\n        case COLLECT_LIST:\r\n            return action.data\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n","/*\r\n * @Author: hejp\r\n * @Date:   16:44\r\n * @Last Modified by:   hejp\r\n * @Last Modified time: 16:44\r\n */\r\nimport {\r\n    MESSAGES,\r\n    MARK_ONE\r\n} from '../actionType'\r\n\r\nexport const messages = (state = [], action) => {\r\n    switch (action.type) {\r\n        case MESSAGES:\r\n            return [\r\n                ...action.data.hasnot_read_messages,\r\n                ...action.data.has_read_messages\r\n            ]\r\n        case MARK_ONE:\r\n            const index = state.findIndex((item) => {\r\n                return item.id === action.id\r\n            })\r\n            if (index >= 0) {\r\n                state[index].has_read = true\r\n            }\r\n            return [\r\n                ...state\r\n            ]\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n","/*\r\n * @Author: hejp\r\n * @Date:   15:53\r\n * @Last Modified by:   hejp\r\n * @Last Modified time: 15:53\r\n */\r\nimport {\r\n    createStore,\r\n    applyMiddleware\r\n} from 'redux'\r\n// 数据持久化工具\r\nimport {persistReducer} from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage/session'\r\nimport logger from 'redux-logger'\r\nimport thunk from 'redux-thunk'\r\nimport reducers from './reducers'\r\n\r\nconst middleware = [thunk]\r\n\r\n// 判断是否是正式环境\r\nif (process.env.NODE_ENV === 'development') {\r\n    middleware.push(logger)\r\n}\r\n\r\nconst persistConfig = {\r\n    // 存储的名称\r\n    key: 'root',\r\n    // 存储方式\r\n    storage: storage,\r\n    // 某个reducer,不持久化\r\n    // blacklist: ['counter'],\r\n    // 需要持久化的模块\r\n    whitelist: ['userInfo', 'topics']\r\n}\r\n\r\nconst persistedReducer = persistReducer(persistConfig, reducers);\r\n\r\nexport default createStore(persistedReducer, applyMiddleware(...middleware));\r\n","/*\r\n * @Author: hejp\r\n * @Date:   11:49\r\n * @Last Modified by:   hejp\r\n * @Last Modified time: 11:49\r\n */\r\nimport React, {Component} from 'react';\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        flag: false\r\n    }\r\n    static getDerivedStateFromError(error) {\r\n        return { flag: true }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.flag) {\r\n            return <h1>Something went wrong.</h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","/*\r\n * @description: 模块描述\r\n * @Author: yany\r\n * @Date: 2019-09-04 10:38:11\r\n * @LastEditors: yany\r\n * @LastEditTime: 2019-09-04 10:38:11\r\n */\r\nimport React, { Component } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nclass PrivateRoute extends Component {\r\n    render() {\r\n        const { isLogin, component: Component, ...rest } = this.props;\r\n        return (\r\n            <Route\r\n                {...rest}\r\n                render={props =>\r\n                    isLogin ? (\r\n                        <Component {...rest} />\r\n                    ) : (\r\n                        <Redirect\r\n                            to={{\r\n                                pathname: '/login',\r\n                                state: { from: this.props.location.pathname }\r\n                            }}\r\n                        />\r\n                    )\r\n                }\r\n            ></Route>\r\n        );\r\n    }\r\n}\r\n\r\nconst userInfo = state => ({\r\n    isLogin: !!state.userInfo.token\r\n})\r\n\r\nexport default connect(\r\n    userInfo\r\n)(PrivateRoute)\r\n","/*\r\n * @Author: hejp\r\n * @Date:   11:00\r\n * @Last Modified by:   hejp\r\n * @Last Modified time: 11:00\r\n */\r\nimport React, {\r\n    lazy,\r\n    Suspense\r\n} from 'react'\r\nimport {\r\n    HashRouter,\r\n    Route,\r\n    Switch,\r\n    Redirect\r\n} from 'react-router-dom'\r\nimport ErrorBoundary from '../components/errorBoundary'\r\nimport PrivateRoute from '../components/PrivateRoute'\r\n\r\nconst routerList = [\r\n    {\r\n        private: false,\r\n        component: lazy(() => import(/*webpackChunkName:\"home\"*/'../page/home')),\r\n        pathname: '/home'\r\n    },\r\n    {\r\n        private: false,\r\n        component: lazy(() => import(/*webpackChunkName:\"details\"*/'../page/details')),\r\n        pathname: '/details'\r\n    },\r\n    {\r\n        private: false,\r\n        component: lazy(() => import(/*webpackChunkName:\"my\"*/'../page/my')),\r\n        pathname: '/my'\r\n    },\r\n    {\r\n        private: false,\r\n        component: lazy(() => import(/*webpackChunkName:\"my\"*/'../page/login')),\r\n        pathname: '/login'\r\n    },\r\n    {\r\n        private: false,\r\n        component: lazy(() => import(/*webpackChunkName:\"myList\"*/'../page/my-list')),\r\n        pathname: '/my-list'\r\n    },\r\n    {\r\n        private: false,\r\n        component: lazy(() => import(/*webpackChunkName:\"collect\"*/'../page/collect')),\r\n        pathname: '/collect'\r\n    },\r\n    {\r\n        private: true,\r\n        component: lazy(() => import(/*webpackChunkName:\"message\"*/'../page/message')),\r\n        pathname: '/message'\r\n    }\r\n]\r\nconst Routers = () => {\r\n    return (\r\n        <HashRouter>\r\n            <ErrorBoundary>\r\n                <Suspense fallback={<div></div>}>\r\n                    <Switch>\r\n                        {\r\n                            routerList.map((router, index) => {\r\n                                if (router.private) {\r\n                                    return <PrivateRoute\r\n                                        key={index}\r\n                                        path={ router.pathname }\r\n                                        component={ router.component }\r\n                                    />\r\n                                } else {\r\n                                    return <Route\r\n                                        key={index}\r\n                                        path={ router.pathname }\r\n                                        component={ router.component } />\r\n                                }\r\n                            })\r\n                        }\r\n                        <Redirect to='/home' />\r\n                    </Switch>\r\n                </Suspense>\r\n            </ErrorBoundary>\r\n        </HashRouter>\r\n    )\r\n}\r\n\r\nexport default Routers\r\n","/*\r\n * @Author: hejp\r\n * @Date:   17:03\r\n * @Last Modified by:   hejp\r\n * @Last Modified time: 17:03\r\n */\r\nimport React, {\r\n    memo\r\n} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './index.scss'\r\n\r\nconst Loading = memo(( { style } ) => {\r\n    return (\r\n        <div id=\"js_loading\" className=\"cn-loading\" style={style}>\r\n            <div className=\"cn-loading__content\">\r\n                <div className=\"icon\">\r\n                    <span className=\"circle1\"></span>\r\n                    <span className=\"circle2\"></span>\r\n                    <span className=\"circle3\"></span>\r\n                    <span className=\"circle4\"></span>\r\n                    <span className=\"circle5\"></span>\r\n                    <span className=\"circle6\"></span>\r\n                    <span className=\"circle7\"></span>\r\n                    <span className=\"circle8\"></span>\r\n                    <span className=\"circle9\"></span>\r\n                    <span className=\"circle10\"></span>\r\n                    <span className=\"circle11\"></span>\r\n                    <span className=\"circle12\"></span>\r\n                </div>\r\n                <div className=\"text\">loading...</div>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nLoading.propTypes = {\r\n    style: PropTypes.object\r\n}\r\n\r\nexport default Loading\r\n","import React from 'react';\nimport Routers from './router'\nimport Loading from './components/loading'\nimport './assets/scss/base/layout.scss'\n\nfunction App() {\n  return (\n      <div className=\"app\">\n          <Routers />\n          <Loading />\n      </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { persistStore } from 'redux-persist'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport store from './store/index'\nimport {Provider} from 'react-redux'\nimport App from './App';\n\nconst persistor = persistStore(store)\n\nReactDOM.render(\n    <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n            <App />\n        </PersistGate>\n    </Provider>,\n  document.getElementById('root')\n);\n","/*\r\n * @Author: hejp\r\n * @Date:   15:49\r\n * @Last Modified by:   hejp\r\n * @Last Modified time: 15:49\r\n */\r\n// 主题列表\r\nexport const TOPICS = 'TOPICS'\r\n// 是否请求接口\r\nexport const IS_SCROLL = 'IS_SCROLL'\r\n// 请求参数\r\nexport const TOPICS_PARAMS = 'TOPICS_PARAMS'\r\n// 滚动位置\r\nexport const SCROLLTOP = 'SCROLLTOP'\r\n\r\n// 主题详情\r\nexport const DETAILS = 'DETAILS'\r\n// 删除\r\nexport const COMMENT_DELETE = 'COMMENT_DELETE'\r\n// 编辑\r\nexport const COMMENT_EDIT = 'COMMENT_EDIT'\r\n// 点赞\r\nexport const COMMENT_LIKE = 'COMMENT_LIKE'\r\n// 回复\r\nexport const COMMENT_REPLAY = 'COMMENT_REPLAY'\r\n\r\n\r\n// 获取用户信息\r\nexport const USERINFO = 'USERINFO'\r\n\r\n// 我的\r\nexport const USER_CENTER = 'USER_CENTER'\r\n\r\n// 收藏\r\nexport const SET_COLLECT = 'SET_COLLECT'\r\n// 收藏列表\r\nexport const COLLECT_LIST = 'COLLECT_LIST'\r\n\r\n// 我的消息\r\nexport const MESSAGES = 'MESSAGES'\r\n// 标记单个消息为已读\r\nexport const MARK_ONE = 'MARK_ONE'\r\n"],"sourceRoot":""}