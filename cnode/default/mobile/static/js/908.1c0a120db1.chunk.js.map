{"version":3,"file":"static/js/908.1c0a120db1.chunk.js","mappings":"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","sources":["webpack://cli/./src/template/default/mobile/home/components/tab/index.tsx","webpack://cli/./src/mobileComponents/infiniteScroll/index.tsx","webpack://cli/./src/mobileComponents/pullToRefresh/index.tsx","webpack://cli/./src/template/default/mobile/home/index.tsx"],"sourcesContent":["import React, { FC, useState } from \"react\";\r\nimport \"./index.scss\";\r\nimport { ITab } from \"@src/service\";\r\nimport { ITopicsParams } from \"@src/core/hook\";\r\ninterface ITabs {\r\n  params: ITopicsParams;\r\n  setParams: React.Dispatch<React.SetStateAction<ITopicsParams>>;\r\n}\r\n\r\nconst Tabs: FC<ITabs> = ({ params, setParams }) => {\r\n  const [tabs] = useState([\r\n    {\r\n      name: \"全部\",\r\n      value: \"\",\r\n    },\r\n    {\r\n      name: \"精华\",\r\n      value: \"good\",\r\n    },\r\n    {\r\n      name: \"分享\",\r\n      value: \"share\",\r\n    },\r\n    {\r\n      name: \"问答\",\r\n      value: \"ask\",\r\n    },\r\n    {\r\n      name: \"招聘\",\r\n      value: \"job\",\r\n    },\r\n    {\r\n      name: \"客户端测试\",\r\n      value: \"dev\",\r\n    },\r\n  ]);\r\n  return (\r\n    <div className=\"cms-tab\">\r\n      {tabs.map((item) => (\r\n        <span\r\n          className={`cms-tab__item ${\r\n            params.tab === item.value ? \"is-active\" : \"\"\r\n          }`}\r\n          onClick={() =>\r\n            setParams((state) => ({\r\n              ...state,\r\n              page: 1,\r\n              tab: item.value as ITab,\r\n              update: new Date().getTime(),\r\n            }))\r\n          }\r\n          key={item.value}\r\n        >\r\n          {item.name}\r\n        </span>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tabs;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { FC, ReactNode, useCallback, useEffect, useRef } from \"react\";\r\nimport { domUtil } from \"@src/utils\";\r\nimport \"./index.scss\";\r\n\r\ninterface IInfiniteScrollProps {\r\n  loadMore: () => Promise<void>;\r\n  threshold?: number;\r\n  isMore: boolean;\r\n  loadingText?: ReactNode | string;\r\n  noMoreText?: ReactNode | string;\r\n  update?: number | string;\r\n  visible: boolean;\r\n}\r\n\r\nconst InfiniteScroll: FC<IInfiniteScrollProps> = ({\r\n  loadMore,\r\n  threshold = 100,\r\n  isMore,\r\n  loadingText = \"加载中...\",\r\n  noMoreText = \"——到底了——\",\r\n  update,\r\n  visible = true,\r\n}) => {\r\n  // 锁定请求~~\r\n  const lock = useRef(false);\r\n\r\n  async function doLoadMore() {\r\n    if (lock.current) return;\r\n    lock.current = true;\r\n    try {\r\n      const ret = await loadMore();\r\n      lock.current = false;\r\n      return ret;\r\n    } catch (e) {\r\n      lock.current = false;\r\n      throw e;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 判断是否可滚动加载\r\n   */\r\n  const scrollHandler = useCallback(() => {\r\n    if (\r\n      domUtil.getScrollTop() + domUtil.getClientHeight() + threshold >\r\n        domUtil.getScrollHeight() &&\r\n      isMore\r\n    ) {\r\n      doLoadMore();\r\n    }\r\n  }, [threshold, doLoadMore, isMore]);\r\n\r\n  useEffect(() => {\r\n    doLoadMore();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [update]);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", scrollHandler);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", scrollHandler);\r\n    };\r\n  }, [scrollHandler]);\r\n  return (\r\n    <div className=\"cms-infinite-scroll\">\r\n      {visible ? (\r\n        isMore ? (\r\n          <div className=\"cms-infinite-scroll__loading\">\r\n            <span className=\"loading\"></span>\r\n            <span className=\"text\">{loadingText}</span>\r\n          </div>\r\n        ) : (\r\n          <div className=\"cms-infinite-scroll__nomore\">{noMoreText}</div>\r\n        )\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InfiniteScroll;\r\n","import React, { FC, ReactNode, useRef, useState, useEffect } from \"react\";\r\nimport { domUtil } from \"@src/utils\";\r\nimport \"./index.scss\";\r\n\r\ninterface IPullToRefreshProps {\r\n  pullingText?: ReactNode;\r\n  canReleaseText?: ReactNode;\r\n  refreshingText?: ReactNode;\r\n  completeText?: ReactNode;\r\n  children?: ReactNode;\r\n  threshold?: number;\r\n  infinite?: number;\r\n  callBack?: () => void;\r\n}\r\n\r\ntype statusType = \"pulling\" | \"canRelease\" | \"refreshing\" | \"complete\" | \"\";\r\n\r\nconst PullToRefresh: FC<IPullToRefreshProps> = ({\r\n  pullingText = \"下拉刷新\",\r\n  canReleaseText = \"松开刷新\",\r\n  refreshingText = \"加载中…\",\r\n  completeText = \"刷新成功\",\r\n  threshold = 45,\r\n  infinite = 1000,\r\n  callBack,\r\n  children,\r\n}) => {\r\n  // 获取的dom\r\n  const pullTorefresh = useRef<HTMLDivElement>(null);\r\n  // Y值\r\n  const startTop = useRef(0);\r\n  // 滚动的值\r\n  const transitionValue = useRef(0);\r\n  // 状态\r\n  const status = useRef<statusType>(\"\");\r\n  // 显示的文本\r\n  const [text, setText] = useState<any>(\"\");\r\n  // 定时器\r\n  const timer = useRef<any>();\r\n\r\n  // 关闭时清除定时器\r\n  useEffect(() => {\r\n    return () => {\r\n      if (timer.current) {\r\n        clearTimeout(timer.current);\r\n      }\r\n    };\r\n  }, [timer]);\r\n\r\n  /**\r\n   * 设置样式\r\n   * @param y 距离\r\n   * @param durutiion 时间s\r\n   */\r\n  const setTranslate = (y = 0, durutiion = 0) => {\r\n    if (pullTorefresh.current !== null) {\r\n      pullTorefresh.current.style.transitionDuration = `${durutiion}s`;\r\n      pullTorefresh.current.style.transform = `translate(0px, ${y}px) translateZ(0px)`;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * 移动时\r\n   * @param e\r\n   */\r\n  const touchmoveEvent = (e: any) => {\r\n    const startY = e.touches ? e.touches[0].pageY : e.clientX;\r\n    let transition = startY - startTop.current - domUtil.getScrollTop();\r\n    if (transition > 0) {\r\n      if (transition > threshold) {\r\n        transition = threshold;\r\n      }\r\n      setTranslate(transition, 0);\r\n      setText(pullingText);\r\n      status.current = \"pulling\";\r\n      if (transition >= threshold - 10) {\r\n        setText(canReleaseText);\r\n        status.current = \"canRelease\";\r\n      }\r\n    }\r\n    transitionValue.current = transition;\r\n  };\r\n\r\n  /**\r\n   * 移出时\r\n   */\r\n  const touchendEvent = () => {\r\n    document.removeEventListener(\"touchmove\", touchmoveEvent, false);\r\n    document.removeEventListener(\"touchend\", touchendEvent, false);\r\n    if (\r\n      status.current === \"canRelease\" &&\r\n      transitionValue.current >= threshold - 10\r\n    ) {\r\n      setText(refreshingText);\r\n      status.current = \"refreshing\";\r\n      typeof callBack === \"function\" && callBack();\r\n      if (timer.current) {\r\n        clearTimeout(timer.current);\r\n      }\r\n      timer.current = setTimeout(() => {\r\n        setText(completeText);\r\n        status.current = \"complete\";\r\n        setTranslate(0, 0.5);\r\n      }, infinite);\r\n    } else {\r\n      setTranslate(0, 0.5);\r\n      status.current = \"\";\r\n    }\r\n  };\r\n  /**\r\n   * 开始时\r\n   * @param e\r\n   */\r\n  const touchstartEvent = (e: any) => {\r\n    // 判断当scrollTop小于某个数时去绑定touchmove,touchend事件，主要是防止有下拉加载更多的时候\r\n    if (domUtil.getScrollTop() <= 0) {\r\n      document.addEventListener(\"touchmove\", touchmoveEvent, false);\r\n      document.addEventListener(\"touchend\", touchendEvent, false);\r\n    }\r\n    // startY用来计算距离\r\n    const startY = e.touches ? e.touches[0].pageY : e.clientY;\r\n    startTop.current = startY;\r\n    if (status.current === \"pulling\") {\r\n      setTranslate(0, 0);\r\n    }\r\n    if (status.current === \"complete\") {\r\n      status.current = \"\";\r\n    }\r\n    transitionValue.current = 0;\r\n  };\r\n\r\n  return (\r\n    <div\r\n      ref={pullTorefresh}\r\n      className=\"cms-pull-to-refresh\"\r\n      onTouchStart={touchstartEvent}\r\n    >\r\n      <div className=\"cms-pull-to-refresh__wrapper\">{text}</div>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PullToRefresh;\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport \"./index.scss\";\r\nimport { ITopicsParams, useTopic } from \"@src/core/hook\";\r\n// 选项卡\r\nimport Tabs from \"./components/tab\";\r\n// 列表\r\nimport Topics from \"./components/topics\";\r\n\r\nimport InfiniteScroll from \"@src/mobileComponents/infiniteScroll\";\r\n\r\nimport PullToRefresh from \"@src/mobileComponents/pullToRefresh\";\r\n\r\nconst Home = () => {\r\n  const [params, setParams] = useState<ITopicsParams>({\r\n    page: 1,\r\n    limit: 20,\r\n    tab: \"\",\r\n    update: 0,\r\n  });\r\n  const { getTopics, topics, topicsLoading, isMore } = useTopic();\r\n\r\n  const loadMore = useCallback(async () => {\r\n    if (topicsLoading || !isMore) return;\r\n    await getTopics(params);\r\n    setParams((state) => ({\r\n      ...state,\r\n      page: state.page + 1,\r\n    }));\r\n  }, [getTopics, isMore, params, topicsLoading]);\r\n\r\n  const pullToRefreshHandler = useCallback(() => {\r\n    setParams((state) => ({\r\n      ...state,\r\n      page: 1,\r\n      update: new Date().getTime(),\r\n    }));\r\n  }, [setParams]);\r\n\r\n  useEffect(() => {\r\n    if (params.page === 1) {\r\n      window.scrollTo(0, 0);\r\n    }\r\n  }, [params.page]);\r\n\r\n  return (\r\n    <div className=\"cms-home\">\r\n      <Tabs params={params} setParams={setParams} />\r\n      <PullToRefresh callBack={pullToRefreshHandler} infinite={2000}>\r\n        <Topics topics={topics} topicsLoading={topicsLoading} />\r\n        <InfiniteScroll\r\n          loadMore={loadMore}\r\n          isMore={isMore}\r\n          visible={params.page !== 1}\r\n          update={params.update}\r\n        />\r\n      </PullToRefresh>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"names":["_ref","params","setParams","tabs","useState","name","value","React","className","map","item","tab","onClick","state","page","update","Date","getTime","key","loadMore","threshold","isMore","loadingText","noMoreText","visible","lock","useRef","async","doLoadMore","current","ret","e","scrollHandler","useCallback","domUtil","getScrollTop","getClientHeight","getScrollHeight","useEffect","window","addEventListener","removeEventListener","pullingText","canReleaseText","refreshingText","completeText","infinite","callBack","children","pullTorefresh","startTop","transitionValue","status","text","setText","timer","clearTimeout","setTranslate","y","arguments","length","undefined","durutiion","style","transitionDuration","transform","touchmoveEvent","transition","touches","pageY","clientX","touchendEvent","document","setTimeout","ref","onTouchStart","startY","clientY","Home","limit","getTopics","topics","topicsLoading","useTopic","pullToRefreshHandler","scrollTo","Tabs","PullToRefresh","Topics","InfiniteScroll"],"sourceRoot":""}