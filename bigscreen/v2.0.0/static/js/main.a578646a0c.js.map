{"version":3,"file":"static/js/main.a578646a0c.js","mappings":"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","sources":["webpack://cli/./src/service/api/login.api.ts","webpack://cli/./src/service/api/user.api.ts","webpack://cli/./src/service/fetch.ts","webpack://cli/./src/service/module/index.ts","webpack://cli/./src/service/module/login.service.ts","webpack://cli/./src/service/module/user.service.ts","webpack://cli/./src/core/hook/login.hook.tsx","webpack://cli/./src/core/hook/userInfo.hook.tsx","webpack://cli/./src/router/routes.ts","webpack://cli/./src/components/layout/layout.tsx","webpack://cli/./src/components/lazyLoad/lazyLoad.tsx","webpack://cli/./src/utils/recursion.util.ts","webpack://cli/./src/components/header/header.tsx","webpack://cli/./src/store/actions/userInfo.ts","webpack://cli/./src/core/theme/theme01_light.ts","webpack://cli/./src/core/theme/theme01_dark.ts","webpack://cli/./src/core/theme/theme02_light.ts","webpack://cli/./src/core/theme/theme02_dark.ts","webpack://cli/./src/core/theme/themes.ts","webpack://cli/./src/core/theme/index.ts","webpack://cli/./src/store/actions/theme.ts","webpack://cli/./src/components/theme/theme.tsx","webpack://cli/./src/components/sidder/sidder.tsx","webpack://cli/./src/router/index.tsx","webpack://cli/./src/App.tsx","webpack://cli/./src/store/reducers/counter.ts","webpack://cli/./src/store/reducers/userInfo.ts","webpack://cli/./src/store/reducers/index.ts","webpack://cli/./src/store/reducers/theme.ts","webpack://cli/./src/store/reducers/token.ts","webpack://cli/./src/store/index.ts","webpack://cli/./src/mock/login.mock.ts","webpack://cli/./src/mock/userInfo.mock.ts","webpack://cli/./src/mock/index.ts","webpack://cli/./src/main.tsx","webpack://cli/./src/store/actionType.ts","webpack://cli/./src/store/actions/token.ts","webpack://cli/./src/pages/ lazy ^\\.\\/.*$ namespace object"],"sourcesContent":["export const login = {\r\n  // 登录接口\r\n  login: \"/login\",\r\n};\r\n","export const user = {\r\n  // 登录接口\r\n  userInfo: \"/user-info\",\r\n};\r\n","import axios, { AxiosResponse, CancelTokenSource } from \"axios\";\r\nimport Qs from \"qs\";\r\n\r\nconst NODE_ENV = process.env.NODE_ENV;\r\n\r\nexport interface IBaseReponse<T> {\r\n  // 状态码\r\n  success: boolean;\r\n  // 接口数据\r\n  data: T;\r\n}\r\n\r\nconsole.log(NODE_ENV);\r\n\r\naxios.defaults.baseURL =\r\n  NODE_ENV === \"development\"\r\n    ? \"http://192.168.101.79:3000\"\r\n    : \"https://myfirebug.github.io\";\r\n\r\n// 正在进行中的请求列表\r\nconst requestList: string[] = [];\r\n/**\r\n * 阻止重复请求\r\n * @param url -当前请求url地址\r\n * @param cancel -请求中断函数\r\n */\r\nconst stopRepeatRequest = function (\r\n  url: string,\r\n  source: CancelTokenSource\r\n): void {\r\n  for (let i = 0, len = requestList.length; i < len; i++) {\r\n    if (requestList[i] === url) {\r\n      source.cancel();\r\n      return;\r\n    }\r\n  }\r\n  requestList.push(url);\r\n};\r\n\r\n/**\r\n * 允许某个请求可以继续进行\r\n * @param url -请求url地址\r\n */\r\nconst allowRequest = function (url: string): void {\r\n  for (let i = 0, len = requestList.length; i < len; i++) {\r\n    if (requestList[i] === url) {\r\n      requestList.splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n};\r\n\r\n// 添加请求拦截器\r\naxios.interceptors.request.use(\r\n  (config) => {\r\n    const CancelToken = axios.CancelToken;\r\n    const source = CancelToken.source();\r\n    // 设置token参数\r\n    if (typeof config.headers === \"object\") {\r\n      config.headers.Authorization = `Bearer ${123}`;\r\n    }\r\n    // 取消请求\r\n    config.cancelToken = source.token;\r\n\r\n    stopRepeatRequest(\r\n      `${config.url}?${Qs.stringify(config.params)}&method=${config.method}`,\r\n      source\r\n    );\r\n\r\n    return config;\r\n  },\r\n  (error) => {\r\n    // 对请求错误做些什么\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// 添加响应拦截器\r\naxios.interceptors.response.use(\r\n  (response: AxiosResponse<any, any>) => {\r\n    // 2xx 范围内的状态码都会触发该函数。\r\n    // 对响应数据做点什么\r\n    const { config, status } = response;\r\n    if (config) {\r\n      allowRequest(\r\n        `${config.url}?${Qs.stringify(config.params)}&method=${config.method}`\r\n      );\r\n    }\r\n    if (status !== 200) {\r\n      throw new Error(\"请求出现异常, HTTP 状态码不为 200\");\r\n    }\r\n\r\n    return response.data;\r\n  },\r\n  (error) => {\r\n    const { config } = error;\r\n    if (config) {\r\n      allowRequest(\r\n        `${config.url}?${Qs.stringify(config.params)}&method=${config.method}`\r\n      );\r\n    }\r\n    // 超出 2xx 范围的状态码都会触发该函数。\r\n    // 对响应错误做点什么\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default axios;\r\n","import loginService from \"./login.service\";\r\nimport userService from \"./user.service\";\r\n\r\nexport const API = { loginService, userService };\r\n","import { login } from \"../api\";\r\nimport { ILoginForm, ILoginResult } from \"../interface\";\r\nimport axios from \"../fetch\";\r\n\r\nconst loginService = {\r\n  // 登录\r\n  login(params: ILoginForm) {\r\n    return axios.post<ILoginForm, ILoginResult>(login.login, params);\r\n  },\r\n};\r\n\r\nexport default loginService;\r\n","import { user } from \"../api\";\r\nimport { IuserInfo, IUserInfoResult } from \"../interface\";\r\nimport axios from \"../fetch\";\r\n\r\nconst userService = {\r\n  // 用户信息\r\n  userInfo() {\r\n    return axios.get<IuserInfo, IUserInfoResult>(user.userInfo);\r\n  },\r\n};\r\n\r\nexport default userService;\r\n","import { useState, useCallback } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { API } from \"@service/index\";\r\nexport function useLogin() {\r\n  // 是否处理loading状态\r\n  const [loginLoading, setLoginLoading] = useState<boolean>(false);\r\n  const navigate = useNavigate();\r\n  const login = useCallback(\r\n    (params: any, callback: (data: string) => void) => {\r\n      setLoginLoading(true);\r\n      API.loginService\r\n        .login(params)\r\n        .then((data) => {\r\n          setLoginLoading(false);\r\n          navigate(\"/home\");\r\n          callback && callback(data.data);\r\n        })\r\n        .catch(() => {\r\n          setLoginLoading(false);\r\n        });\r\n    },\r\n    [navigate]\r\n  );\r\n\r\n  return {\r\n    loginLoading,\r\n    login,\r\n  };\r\n}\r\n","import { useState, useCallback } from \"react\";\r\nimport { API } from \"@service/index\";\r\nexport function useInfo() {\r\n  // 是否处理loading状态\r\n  const [userInfoLoading, setUserInfoLoading] = useState<boolean>(false);\r\n  const getUserInfo = useCallback((callback: (data: any) => void) => {\r\n    setUserInfoLoading(true);\r\n    API.userService\r\n      .userInfo()\r\n      .then((res) => {\r\n        setUserInfoLoading(false);\r\n        callback && callback(res.data);\r\n      })\r\n      .catch(() => {\r\n        setUserInfoLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  return {\r\n    userInfoLoading,\r\n    getUserInfo,\r\n  };\r\n}\r\n","import { NonIndexRouteObject } from \"react-router-dom\";\r\n\r\nexport interface IMeta {\r\n  // 是否需要token\r\n  auth: boolean;\r\n  // 是否全屏\r\n  fullScreen?: boolean;\r\n  // 是否是菜单\r\n  menu?: boolean;\r\n}\r\n\r\nexport interface IRoute extends NonIndexRouteObject {\r\n  // 页面标题\r\n  title: string;\r\n  // 模块路径在template模块下的路径\r\n  modulePath: string;\r\n  meta: IMeta;\r\n  // 子路由\r\n  children?: IRoute[];\r\n  // 访问的兄弟路由不存在时，重定向到该路由\r\n  redirect?: string;\r\n  state?: any;\r\n  icon?: string;\r\n}\r\n\r\nconst routerDatas: IRoute[] = [\r\n  {\r\n    path: \"/\",\r\n    title: \"\",\r\n    modulePath: \"layout\",\r\n    meta: {\r\n      auth: false,\r\n    },\r\n    children: [\r\n      {\r\n        path: \"/login\",\r\n        title: \"登录\",\r\n        redirect: \"/login\",\r\n        modulePath: \"login\",\r\n        meta: {\r\n          auth: false,\r\n          fullScreen: true,\r\n          menu: false,\r\n        },\r\n      },\r\n      {\r\n        path: \"/home\",\r\n        title: \"首页\",\r\n        modulePath: \"home\",\r\n        icon: \"&#xe8b9;\",\r\n        meta: {\r\n          auth: true,\r\n          menu: true,\r\n        },\r\n      },\r\n      {\r\n        path: \"/components\",\r\n        title: \"组件\",\r\n        modulePath: \"home\",\r\n        icon: \"&#xe640;\",\r\n        meta: {\r\n          auth: true,\r\n          menu: true,\r\n        },\r\n      },\r\n      {\r\n        path: \"/web\",\r\n        title: \"电脑端\",\r\n        icon: \"&#xe61f;\",\r\n        modulePath: \"\",\r\n        meta: {\r\n          auth: true,\r\n          menu: true,\r\n        },\r\n        children: [\r\n          {\r\n            path: \"/web/project-list\",\r\n            title: \"项目\",\r\n            modulePath: \"home\",\r\n            meta: {\r\n              auth: true,\r\n              menu: true,\r\n            },\r\n          },\r\n          {\r\n            path: \"/web/widget-list\",\r\n            title: \"微件模版\",\r\n            modulePath: \"home\",\r\n            meta: {\r\n              auth: true,\r\n              menu: true,\r\n            },\r\n          },\r\n          {\r\n            path: \"/web/page-list\",\r\n            title: \"页面模版\",\r\n            modulePath: \"home\",\r\n            meta: {\r\n              auth: true,\r\n              menu: true,\r\n            },\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        path: \"/mobile\",\r\n        title: \"移动端\",\r\n        icon: \"&#xe6b2;\",\r\n        modulePath: \"\",\r\n        meta: {\r\n          auth: true,\r\n          menu: true,\r\n        },\r\n        children: [\r\n          {\r\n            path: \"/mobile/project-list\",\r\n            title: \"项目\",\r\n            modulePath: \"home\",\r\n            meta: {\r\n              auth: true,\r\n              menu: true,\r\n            },\r\n          },\r\n          {\r\n            path: \"/mobile/widget-list\",\r\n            title: \"微件模版\",\r\n            modulePath: \"home\",\r\n            meta: {\r\n              auth: true,\r\n              menu: true,\r\n            },\r\n          },\r\n          {\r\n            path: \"/mobile/page-list\",\r\n            title: \"页面模版\",\r\n            modulePath: \"home\",\r\n            meta: {\r\n              auth: true,\r\n              menu: true,\r\n            },\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        path: \"/404\",\r\n        title: \"404\",\r\n        modulePath: \"notFound\",\r\n        meta: {\r\n          auth: false,\r\n          menu: false,\r\n        },\r\n      },\r\n      {\r\n        path: \"*\",\r\n        title: \"404\",\r\n        modulePath: \"\",\r\n        meta: {\r\n          auth: false,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nexport default routerDatas;\r\n","import React, { FC, HtmlHTMLAttributes, ReactNode } from \"react\";\r\nimport \"./index.scss\";\r\ninterface ILayout extends HtmlHTMLAttributes<HTMLDivElement> {\r\n  Header?: ReactNode;\r\n  Footer?: ReactNode;\r\n  Sidder?: ReactNode;\r\n  children: ReactNode;\r\n}\r\n\r\nconst Layout: FC<ILayout> = ({\r\n  Header,\r\n  Footer,\r\n  Sidder,\r\n  className,\r\n  children,\r\n  style,\r\n}) => {\r\n  return (\r\n    <div className={`cms-layout ${className || \"\"}`}>\r\n      {Header}\r\n      <div className=\"cms-layout__main\" style={style}>\r\n        {Sidder}\r\n        {children}\r\n      </div>\r\n      {Footer}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React, { lazy } from \"react\";\r\n\r\n/**\r\n * 组件或者路由懒加载\r\n * @param path 路径\r\n * @returns\r\n */\r\nconst lazyLoad = function (path: string) {\r\n  const Module = lazy(() => import(`@src/pages/${path}`));\r\n  return <Module />;\r\n};\r\n\r\nexport default lazyLoad;\r\n","import { IRoute } from \"@src/router/routes\";\r\n\r\n/**\r\n * 根据当前节点id返回当前节点数据\r\n * @param datas 数据\r\n * @param value 字段值\r\n * @param field 字段名\r\n */\r\nexport function getGroupById(\r\n  datas: IRoute[],\r\n  value: number | string,\r\n  field: keyof IRoute\r\n) {\r\n  let hasFound = false; // 表示是否有找到id值\r\n  let result: any;\r\n  let fn = function (datas: IRoute[]) {\r\n    if (Array.isArray(datas) && !hasFound) {\r\n      // 判断是否是数组并且没有的情况下，\r\n      for (let i = 0; i < datas.length; i++) {\r\n        if (datas[i][field] === value) {\r\n          result = datas[i];\r\n          hasFound = true;\r\n          break;\r\n        } else if (datas[i].children) {\r\n          fn(datas[i].children as IRoute[]);\r\n        }\r\n      }\r\n    }\r\n  };\r\n  fn(datas);\r\n  return result;\r\n}\r\n\r\n/**\r\n * 根据id返回所有的父级\r\n * @param data\r\n * @param id\r\n */\r\nexport function getParentsById(data: IRoute[], id: string): any {\r\n  for (const i in data) {\r\n    if (data[i].children) {\r\n      let ro = getParentsById(data[i].children as IRoute[], id);\r\n      if (ro !== undefined) {\r\n        // 寻找当前前subResource是否有菜单\r\n        const index = (data[i].children as IRoute[]).findIndex(\r\n          (item: any) => item.meta.menu\r\n        );\r\n        // 如果有菜单就找到当前菜单的地址\r\n        if (index !== -1) {\r\n          return ro.concat({\r\n            path: (data[i].children as IRoute[])[index].path,\r\n            name: data[i].title,\r\n          });\r\n        }\r\n        // 否则就不把path置空\r\n        return ro.concat({\r\n          path: data[i].path,\r\n          name: data[i].title,\r\n        });\r\n      }\r\n    }\r\n    // 匹配的最后一级没有必要使用path了\r\n    if (data[i].path === id) {\r\n      return [\r\n        {\r\n          path: \"\",\r\n          name: data[i].title,\r\n        },\r\n      ];\r\n    }\r\n  }\r\n}\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { FC, useEffect, useState } from \"react\";\r\nimport {\r\n  MenuFoldOutlined,\r\n  MenuUnfoldOutlined,\r\n  LoginOutlined,\r\n  DownOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Theme } from \"@src/components\";\r\nimport { Breadcrumb, MenuProps } from \"antd\";\r\nimport { Dropdown } from \"antd\";\r\nimport { clearToken } from \"@src/store/actions/token\";\r\nimport { setUserInfo } from \"@src/store/actions/userInfo\";\r\nimport \"./index.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { ALL_STATE } from \"@src/store/actionType\";\r\nimport { IuserInfo } from \"@src/service\";\r\nimport { useInfo } from \"@src/core/hook\";\r\nimport { useLocation, Link } from \"react-router-dom\";\r\nimport { getParentsById } from \"@src/utils\";\r\nimport routerDatas, { IRoute } from \"@src/router/routes\";\r\n\r\ninterface IHeader {\r\n  clearToken: () => void;\r\n  collapsed: boolean;\r\n  setCollapsed: React.Dispatch<React.SetStateAction<boolean>>;\r\n  setUserInfo: (data: IuserInfo) => void;\r\n  userInfo: IuserInfo;\r\n}\r\n\r\nconst Header: FC<IHeader> = ({\r\n  collapsed,\r\n  setCollapsed,\r\n  clearToken,\r\n  setUserInfo,\r\n  userInfo,\r\n}) => {\r\n  const { pathname } = useLocation();\r\n  const { getUserInfo } = useInfo();\r\n\r\n  const [breadcrumb, setBreadcrumb] = useState<any[]>([]);\r\n\r\n  useEffect(() => {\r\n    setBreadcrumb(\r\n      getParentsById(routerDatas[0].children as IRoute[], pathname).reverse()\r\n    );\r\n  }, [pathname]);\r\n\r\n  useEffect(() => {\r\n    getUserInfo(setUserInfo);\r\n  }, [getUserInfo, setUserInfo]);\r\n\r\n  const items: MenuProps[\"items\"] = [\r\n    {\r\n      key: \"1\",\r\n      label: (\r\n        <div onClick={clearToken}>\r\n          <LoginOutlined />\r\n          退出登录\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n  return (\r\n    <div className=\"cms-header\">\r\n      <div className=\"cms-header__left\">\r\n        <div className=\"cms-icon\">&#xe605;</div>\r\n        <h1 className=\"title\">大屏管理系统</h1>\r\n      </div>\r\n      <div className=\"cms-header__right\">\r\n        <div className=\"cms-header__right--left\">\r\n          <span onClick={() => setCollapsed(!collapsed)}>\r\n            {collapsed ? <MenuUnfoldOutlined /> : <MenuFoldOutlined />}\r\n          </span>\r\n\r\n          {breadcrumb && breadcrumb.length ? (\r\n            <Breadcrumb\r\n              items={breadcrumb.map((item: any) => ({\r\n                title: item.path ? (\r\n                  <Link to={item.path}>{item.name}</Link>\r\n                ) : (\r\n                  item.name\r\n                ),\r\n              }))}\r\n            ></Breadcrumb>\r\n          ) : null}\r\n        </div>\r\n        <div className=\"cms-header__right--right\">\r\n          <Theme />\r\n          <Dropdown menu={{ items }}>\r\n            <div className=\"user\">\r\n              <div className=\"cms-avatar\">\r\n                <img src={userInfo.avatar} alt=\"\" />\r\n              </div>\r\n              <span className=\"user-name\">欢迎{userInfo.username}</span>\r\n              <DownOutlined />\r\n            </div>\r\n          </Dropdown>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: ALL_STATE) => ({\r\n  userInfo: state.userInfo,\r\n});\r\n\r\n// 将 对应action 插入到组件的 props 中\r\nconst mapDispatchToProps = {\r\n  clearToken: clearToken,\r\n  setUserInfo: setUserInfo,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","import {\r\n  USERINFO,\r\n  USERINFO_TYPE,\r\n  CLEARUSERINFO,\r\n  CLEARUSERINFO_TYPE,\r\n} from \"../actionType\";\r\nimport { Dispatch } from \"redux\";\r\nimport { IuserInfo } from \"@src/service\";\r\n\r\n// 增加的接口类型\r\nexport interface IUserInfoAction {\r\n  type: USERINFO_TYPE;\r\n  data: IuserInfo;\r\n}\r\n\r\nexport interface IClearUserInfoAction {\r\n  type: CLEARUSERINFO_TYPE;\r\n}\r\n\r\nexport type ModifyAction = IUserInfoAction | IClearUserInfoAction;\r\n\r\nconst actionUserInfo = (data: IuserInfo): IUserInfoAction => ({\r\n  type: USERINFO,\r\n  data,\r\n});\r\n\r\nconst actionClearUserInfo = (): IClearUserInfoAction => ({\r\n  type: CLEARUSERINFO,\r\n});\r\n\r\nexport const setUserInfo = (data: IuserInfo) => (dispatch: Dispatch) => {\r\n  dispatch(actionUserInfo(data));\r\n};\r\n\r\nexport const clearUserInfo = () => (dispatch: Dispatch) => {\r\n  dispatch(actionClearUserInfo());\r\n};\r\n","// 主题01\r\nexport const theme01_light = {\r\n  /* ------------------切换白天夜间模式不变的变量start------------------ */\r\n  // 主色\r\n  \"--primary-color\": \"#1677ff\",\r\n  // 主要用于主色背景上的字体颜色\r\n  \"--white\": \"#fff\",\r\n  /* ------------------切换白天夜间模式不变的变量end------------------ */\r\n\r\n  /* ------------------切换白天夜间模式变化的变量start------------------ */\r\n\r\n  // html背景颜色\r\n  \"--html-background-color\": \"#eee\",\r\n  // html字体颜色\r\n  \"--html-font-color\": \"#262626\",\r\n  // 浅色字体颜色\r\n  \"--light-font-color\": \"#999\",\r\n  // 变色主色\r\n  \"--change-primary-color\": \"#1677ff\",\r\n  // 浅色模块背景\r\n  \"--module-background-color\": \"#fff\",\r\n  // 深色模块背景\r\n  \"--module-dark-background-color\": \"#ccc\",\r\n  // 模块阴影\r\n  \"--module-box-shadow-color\": \"rgba(0,0,0,.05)\",\r\n  // 边框颜色\r\n  \"--border-color\": \"#ddd\",\r\n  /* ------------------切换白天夜间模式变化的变量end------------------ */\r\n};\r\n","// 主题01\r\nexport const theme01_dark = {\r\n  /* ------------------切换白天夜间模式不变的变量start------------------ */\r\n  // 主色\r\n  \"--primary-color\": \"#1677ff\",\r\n  // 主要用于主色背景上的字体颜色\r\n  \"--white\": \"#fff\",\r\n  /* ------------------切换白天夜间模式不变的变量end------------------ */\r\n\r\n  /* ------------------切换白天夜间模式变化的变量start------------------ */\r\n  // html背景颜色\r\n  \"--html-background-color\": \"#222\",\r\n  // html字体颜色\r\n  \"--html-font-color\": \"#fff\",\r\n  // 变色主色\r\n  \"--change-primary-color\": \"#001529\",\r\n  // 浅色字体颜色\r\n  \"--light-font-color\": \"#999\",\r\n  // 浅色模块背景\r\n  \"--module-background-color\": \"#001529\",\r\n  // 深色模块背景\r\n  \"--module-dark-background-color\": \"#333\",\r\n  // 模块阴影\r\n  \"--module-box-shadow-color\": \"rgba(0,0,0,.1)\",\r\n  // 边框颜色\r\n  \"--border-color\": \"#333\",\r\n  /* ------------------切换白天夜间模式变化的变量end------------------ */\r\n};\r\n","// 主题01\r\nexport const theme02_light = {\r\n  /* ------------------切换白天夜间模式不变的变量start------------------ */\r\n  // 主色\r\n  \"--primary-color\": \"#00b96b\",\r\n  // 主要用于主色背景上的字体颜色\r\n  \"--white\": \"#fff\",\r\n  /* ------------------切换白天夜间模式不变的变量end------------------ */\r\n\r\n  /* ------------------切换白天夜间模式变化的变量start------------------ */\r\n\r\n  // html背景颜色\r\n  \"--html-background-color\": \"#eee\",\r\n  // html字体颜色\r\n  \"--html-font-color\": \"#262626\",\r\n  // 浅色字体颜色\r\n  \"--light-font-color\": \"#999\",\r\n  // 变色主色\r\n  \"--change-primary-color\": \"#00b96b\",\r\n  // 浅色模块背景\r\n  \"--module-background-color\": \"#fff\",\r\n  // 深色模块背景\r\n  \"--module-dark-background-color\": \"#ccc\",\r\n  // 模块阴影\r\n  \"--module-box-shadow-color\": \"rgba(0,0,0,.05)\",\r\n  // 边框颜色\r\n  \"--border-color\": \"#ddd\",\r\n  /* ------------------切换白天夜间模式变化的变量end------------------ */\r\n};\r\n","// 主题01\r\nexport const theme02_dark = {\r\n  /* ------------------切换白天夜间模式不变的变量start------------------ */\r\n  // 主色\r\n  \"--primary-color\": \"#00b96b\",\r\n  // 主要用于主色背景上的字体颜色\r\n  \"--white\": \"#fff\",\r\n  /* ------------------切换白天夜间模式不变的变量end------------------ */\r\n\r\n  /* ------------------切换白天夜间模式变化的变量start------------------ */\r\n  // html背景颜色\r\n  \"--html-background-color\": \"#222\",\r\n  // html字体颜色\r\n  \"--html-font-color\": \"#fff\",\r\n  // 变色主色\r\n  \"--change-primary-color\": \"#001529\",\r\n  // 浅色字体颜色\r\n  \"--light-font-color\": \"#999\",\r\n  // 浅色模块背景\r\n  \"--module-background-color\": \"#001529\",\r\n  // 深色模块背景\r\n  \"--module-dark-background-color\": \"#333\",\r\n  // 模块阴影\r\n  \"--module-box-shadow-color\": \"rgba(0,0,0,.1)\",\r\n  // 边框颜色\r\n  \"--border-color\": \"#333\",\r\n  /* ------------------切换白天夜间模式变化的变量end------------------ */\r\n};\r\n","import { theme01_light } from \"./theme01_light\";\r\nimport { theme01_dark } from \"./theme01_dark\";\r\nimport { theme02_light } from \"./theme02_light\";\r\nimport { theme02_dark } from \"./theme02_dark\";\r\n\r\ntype IThemes = {\r\n  [propName in IThemeName]: {\r\n    [propName: string]: any;\r\n  };\r\n};\r\n\r\nexport type IThemeName =\r\n  | \"theme01_light\"\r\n  | \"theme01_dark\"\r\n  | \"theme02_light\"\r\n  | \"theme02_dark\";\r\n\r\nexport interface IThemeItem {\r\n  name: IThemeName;\r\n  color: string;\r\n}\r\n\r\nexport const themeList: IThemeItem[] = [\r\n  {\r\n    name: \"theme01_light\",\r\n    color: theme01_light[\"--primary-color\"],\r\n  },\r\n  {\r\n    name: \"theme01_dark\",\r\n    color: theme01_dark[\"--primary-color\"],\r\n  },\r\n  {\r\n    name: \"theme02_light\",\r\n    color: theme02_light[\"--primary-color\"],\r\n  },\r\n  {\r\n    name: \"theme02_dark\",\r\n    color: theme02_dark[\"--primary-color\"],\r\n  },\r\n];\r\n\r\nexport const themes: IThemes = {\r\n  theme01_light,\r\n  theme01_dark,\r\n  theme02_light,\r\n  theme02_dark,\r\n};\r\n","import { themes, IThemeName, themeList } from \"./themes\";\r\nimport cssVars from \"css-vars-ponyfill\";\r\nexport * from \"./themes\";\r\n// 判断浏览器是否支持cssVar\r\nconst isSupportCssVar =\r\n  window.CSS && window.CSS.supports && window.CSS.supports(\"(--a: 0)\");\r\n/**\r\n * cssVar格式话\r\n * @param themeJson 换肤JSON\r\n * @param isJoin 是否转化成JSON\r\n * @returns\r\n */\r\nconst formatCssVar = (\r\n  themeJson: Record<string, string> = {},\r\n  isJoin = true\r\n) => {\r\n  const cssvar = Object.keys(themeJson)\r\n    .map((item) => `${item}:${themeJson[item]};\\n`)\r\n    .join(\"\");\r\n  return isJoin ? `:root{\\n${cssvar}}` : cssvar;\r\n};\r\n/**\r\n *\r\n * @param variable 换肤JSON\r\n * @param selector 换肤style标签\r\n * @returns\r\n */\r\nconst cssRootVar = (\r\n  themeJson: Record<string, string> = {},\r\n  selector = \"style[data-theme='theme']\"\r\n) => {\r\n  const root = selector\r\n    ? document.querySelector(selector) || document.createElement(\"style\")\r\n    : document.createElement(\"style\");\r\n  console.log(root, \"root\");\r\n  root.innerHTML = formatCssVar(themeJson);\r\n  if (!root.getAttribute(\"data-theme\")) {\r\n    root.setAttribute(\"data-theme\", \"theme\");\r\n    const header = document.head || document.getElementsByName(\"head\")[0];\r\n    if (!header) return;\r\n    header.appendChild(root);\r\n  }\r\n};\r\n/**\r\n * 设置换肤\r\n * @param theme 换肤名称\r\n */\r\nexport function setTheme(theme: IThemeName) {\r\n  if (isSupportCssVar) {\r\n    cssRootVar(themes[theme]);\r\n  } else {\r\n    document.documentElement.setAttribute(\"data-theme\", theme);\r\n    cssVars({\r\n      watch: true,\r\n      variables: themes[theme],\r\n      onlyLegacy: false,\r\n    });\r\n  }\r\n}\r\n\r\n// 通过主题获取主color\r\nexport function getCurrentPrimaryColor(theme: IThemeName) {\r\n  return themeList.find((item) => item.name === theme)?.color;\r\n}\r\n","import { THEME, THEME_TYPE } from \"../actionType\";\r\nimport { Dispatch } from \"redux\";\r\nimport { IThemeName, setTheme } from \"@core/theme\";\r\n\r\n// 增加的接口类型\r\nexport interface IThemeAction {\r\n  type: THEME_TYPE;\r\n  data: IThemeName;\r\n}\r\n\r\nexport type ModifyAction = IThemeAction;\r\n\r\n// 增加 state 次数据的方法\r\nconst actionTheme = (data: IThemeName): IThemeAction => ({\r\n  type: THEME,\r\n  data,\r\n});\r\n\r\nexport const setCurrentTheme = (data: IThemeName) => (dispatch: Dispatch) => {\r\n  dispatch(actionTheme(data));\r\n  setTheme(data);\r\n};\r\n","import React, { FC } from \"react\";\r\nimport \"./index.scss\";\r\nimport { themeList, IThemeName, getCurrentPrimaryColor } from \"@core/theme\";\r\nimport { ALL_STATE } from \"@src/store/actionType\";\r\nimport { setCurrentTheme } from \"@src/store/actions/theme\";\r\nimport { connect } from \"react-redux\";\r\ninterface ITheme {\r\n  currentTheme: IThemeName;\r\n  setCurrentTheme: (data: IThemeName) => void;\r\n}\r\n\r\nconst Theme: FC<ITheme> = ({ currentTheme, setCurrentTheme }) => {\r\n  const modeHandler = () => {\r\n    let isMoon = currentTheme.includes(\"_dark\");\r\n    let currentThemeName = (\r\n      isMoon\r\n        ? `${currentTheme.split(\"_\")[0]}_light`\r\n        : `${currentTheme.split(\"_\")[0]}_dark`\r\n    ) as IThemeName;\r\n    setCurrentTheme(currentThemeName);\r\n  };\r\n  return (\r\n    <div className=\"cms-theme\">\r\n      <div className=\"cms-theme__select\">\r\n        <div\r\n          className=\"hd\"\r\n          style={{ background: getCurrentPrimaryColor(currentTheme) }}\r\n        ></div>\r\n        <div className=\"bd\">\r\n          {themeList\r\n            .filter((item) => !item.name.includes(\"_dark\"))\r\n            .map((item) => (\r\n              <div\r\n                title={item.name}\r\n                className=\"option\"\r\n                key={item.name}\r\n                onClick={() =>\r\n                  setCurrentTheme(\r\n                    (currentTheme.includes(\"_dark\")\r\n                      ? `${item.name.split(\"_\")[0]}_dark`\r\n                      : `${item.name.split(\"_\")[0]}_light`) as IThemeName\r\n                  )\r\n                }\r\n                style={{ background: item.color }}\r\n              ></div>\r\n            ))}\r\n        </div>\r\n      </div>\r\n      <div\r\n        title=\"切换模式\"\r\n        className={`cms-theme__mode ${\r\n          currentTheme.includes(\"_dark\") ? \"is-moon\" : \"\"\r\n        }`}\r\n        onClick={modeHandler}\r\n      ></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: ALL_STATE) => ({\r\n  currentTheme: state.currentTheme,\r\n});\r\n\r\n// 将 对应action 插入到组件的 props 中\r\nconst mapDispatchToProps = {\r\n  setCurrentTheme,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Theme);\r\n","import React, { FC, useEffect, useState } from \"react\";\r\nimport { Menu, MenuProps } from \"antd\";\r\nimport \"./index.scss\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { ALL_STATE } from \"@src/store/actionType\";\r\nimport { IThemeName } from \"@src/core/theme\";\r\nimport routerDatas, { IRoute } from \"@src/router/routes\";\r\n\r\ninterface ISidder {\r\n  collapsed: boolean;\r\n  currentTheme: IThemeName;\r\n}\r\n\r\ntype MenuItem = Required<MenuProps>[\"items\"][number];\r\n\r\nconst Sidder: FC<ISidder> = ({ collapsed, currentTheme }) => {\r\n  const { pathname } = useLocation();\r\n  const navigate = useNavigate();\r\n\r\n  const [selectedKeys, setSelectedKeys] = useState<string[]>([]);\r\n  const [openKeys, setOpenKeys] = useState<string[]>([]);\r\n\r\n  useEffect(() => {\r\n    if (pathname !== \"/404\") {\r\n      setSelectedKeys([pathname]);\r\n      const arr = pathname.split(\"/\");\r\n      if (arr.length > 2) {\r\n        let keys = [];\r\n        for (let i = 2; i < arr.length; i++) {\r\n          keys.push(arr.slice(0, i).join(\"/\"));\r\n        }\r\n        setOpenKeys(keys);\r\n      }\r\n    }\r\n  }, [pathname]);\r\n\r\n  const recursionTree = (tree: IRoute[]): any => {\r\n    return tree\r\n      .filter((item) => item.meta.menu)\r\n      .map((item) => ({\r\n        key: item.path,\r\n        label: item.title,\r\n        icon: (\r\n          <span\r\n            className=\"cms-icon\"\r\n            style={{ fontSize: \"18px\" }}\r\n            dangerouslySetInnerHTML={{\r\n              __html: item.icon as string,\r\n            }}\r\n          ></span>\r\n        ),\r\n        children: Array.isArray(item.children)\r\n          ? recursionTree(item.children)\r\n          : null,\r\n      }));\r\n  };\r\n\r\n  const items: MenuItem[] = recursionTree(routerDatas[0].children as IRoute[]);\r\n\r\n  // 选中菜单\r\n  const onSelect = (item: any) => {\r\n    navigate(item.key);\r\n  };\r\n\r\n  // 菜单展开\r\n  const onOpenChange = (openKeys: string[]) => {\r\n    setOpenKeys(openKeys.slice(openKeys.length - 1));\r\n  };\r\n\r\n  return (\r\n    <div className=\"cms-sidder\">\r\n      <Menu\r\n        className=\"cms-menu\"\r\n        selectedKeys={selectedKeys}\r\n        openKeys={openKeys}\r\n        mode=\"inline\"\r\n        theme={currentTheme.includes(\"_dark\") ? \"dark\" : \"light\"}\r\n        inlineCollapsed={collapsed}\r\n        items={items}\r\n        onSelect={onSelect}\r\n        onOpenChange={onOpenChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: ALL_STATE) => ({\r\n  currentTheme: state.currentTheme,\r\n});\r\n\r\n// 将 对应action 插入到组件的 props 中\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Sidder);\r\n","import React, { Suspense, FC, memo } from \"react\";\r\nimport { Routes, Route, Navigate } from \"react-router-dom\";\r\nimport routes, { IRoute, IMeta } from \"./routes\";\r\nimport { lazyLoad } from \"@src/components\";\r\nimport { connect } from \"react-redux\";\r\nimport { ALL_STATE } from \"@src/store/actionType\";\r\n\r\ninterface IPrivateRoute {\r\n  children: JSX.Element | null;\r\n  meta: IMeta;\r\n  title: string;\r\n  token: string;\r\n}\r\n\r\nconst PrivateRoute: FC<IPrivateRoute> = ({ children, meta, title, token }) => {\r\n  if (title) {\r\n    document.title = `${window.CONFIG.title}-${title}`;\r\n  }\r\n  // 处理未登录情况时跳首页\r\n  if (meta.auth && !token) {\r\n    return <Navigate to=\"/login\" />;\r\n  }\r\n  return children;\r\n};\r\n\r\nconst mapStateToProps = (state: ALL_STATE) => ({\r\n  token: state.token,\r\n});\r\n\r\n// 将 对应action 插入到组件的 props 中\r\nconst mapDispatchToProps = {};\r\n\r\nconst NewPrivateRoute = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PrivateRoute);\r\n\r\n/**\r\n * 递归路由\r\n * @param datas 路由数据\r\n * @returns\r\n */\r\nconst routeTree = (datas: IRoute[]) => {\r\n  return datas.map(({ path, children, modulePath, title, meta, redirect }) => {\r\n    return children && children.length ? (\r\n      <Route\r\n        path={path}\r\n        element={\r\n          modulePath ? (\r\n            <NewPrivateRoute title={title} meta={meta}>\r\n              {lazyLoad(modulePath)}\r\n            </NewPrivateRoute>\r\n          ) : null\r\n        }\r\n        key={modulePath}\r\n      >\r\n        {routeTree(children)}\r\n        {redirect ? (\r\n          <Route path={path} element={<Navigate to={redirect} />}></Route>\r\n        ) : (\r\n          <Route\r\n            path={path}\r\n            element={<Navigate to={children[0].path as string} />}\r\n          ></Route>\r\n        )}\r\n      </Route>\r\n    ) : (\r\n      <Route\r\n        path={path}\r\n        element={\r\n          (path as string) === \"*\" ? (\r\n            <Navigate to=\"/404\" replace />\r\n          ) : modulePath ? (\r\n            <NewPrivateRoute title={title} meta={meta}>\r\n              {lazyLoad(modulePath)}\r\n            </NewPrivateRoute>\r\n          ) : null\r\n        }\r\n        key={modulePath}\r\n      ></Route>\r\n    );\r\n  });\r\n};\r\n\r\nconst RoutesView = memo(\r\n  () => {\r\n    return (\r\n      <Suspense>\r\n        <Routes>{routeTree(routes)}</Routes>\r\n      </Suspense>\r\n    );\r\n  },\r\n  (a, b) => {\r\n    return true;\r\n  }\r\n);\r\n\r\nexport default RoutesView;\r\n","import React, { useState, FC, useEffect } from \"react\";\r\nimport { ConfigProvider, theme } from \"antd\";\r\nimport Routes from \"./router\";\r\nimport { Layout } from \"@src/components\";\r\nimport { useLocation } from \"react-router-dom\";\r\n// 由于 antd 组件的默认文案是英文，所以需要修改为中文\r\nimport dayjs from \"dayjs\";\r\nimport \"dayjs/locale/zh-cn\";\r\nimport \"@src/assets/scss/base/normalize.css\";\r\nimport zhCN from \"antd/locale/zh_CN\";\r\nimport { Header, Sidder } from \"./components\";\r\nimport { connect } from \"react-redux\";\r\nimport { ALL_STATE } from \"./store/actionType\";\r\nimport { IThemeName, setTheme, getCurrentPrimaryColor } from \"@core/theme\";\r\nimport { getGroupById } from \"@src/utils\";\r\nimport routerDatas, { IRoute } from \"./router/routes\";\r\n\r\ndayjs.locale(\"zh-cn\");\r\n\r\ninterface IApp {\r\n  currentTheme: IThemeName;\r\n}\r\n\r\nconst App: FC<IApp> = ({ currentTheme }) => {\r\n  const [collapsed, setCollapsed] = useState(false);\r\n  const { pathname } = useLocation();\r\n  console.log(pathname, \"location1\");\r\n\r\n  const currentRoute: IRoute = getGroupById(routerDatas, pathname, \"path\");\r\n\r\n  useEffect(() => {\r\n    setTheme(currentTheme);\r\n  }, [currentTheme]);\r\n\r\n  return (\r\n    <ConfigProvider\r\n      locale={zhCN}\r\n      theme={{\r\n        token: {\r\n          colorPrimary: getCurrentPrimaryColor(currentTheme),\r\n        },\r\n        // 1. 单独使用暗色算法\r\n        algorithm: currentTheme.includes(\"_dark\")\r\n          ? theme.darkAlgorithm\r\n          : theme.defaultAlgorithm,\r\n\r\n        // 2. 组合使用暗色算法与紧凑算法\r\n        // algorithm: [theme.darkAlgorithm, theme.compactAlgorithm],\r\n      }}\r\n    >\r\n      <Layout\r\n        className={collapsed ? \"is-collapsed\" : \"\"}\r\n        Header={\r\n          !currentRoute?.meta?.fullScreen ? (\r\n            <Header collapsed={collapsed} setCollapsed={setCollapsed} />\r\n          ) : null\r\n        }\r\n        Sidder={\r\n          !currentRoute?.meta?.fullScreen ? (\r\n            <Sidder collapsed={collapsed} />\r\n          ) : null\r\n        }\r\n        style={{\r\n          paddingTop: currentRoute?.meta?.fullScreen ? \"0px\" : \"55px\",\r\n          paddingLeft: currentRoute?.meta?.fullScreen\r\n            ? \"0px\"\r\n            : collapsed\r\n            ? \"80px\"\r\n            : \"200px\",\r\n        }}\r\n      >\r\n        <Routes />\r\n      </Layout>\r\n    </ConfigProvider>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: ALL_STATE) => ({\r\n  currentTheme: state.currentTheme,\r\n});\r\n\r\n// 将 对应action 插入到组件的 props 中\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import { ModifyAction } from \"../actions/counter\";\r\nimport { DECREMENT, INCREMENT, COUNTER_STATE } from \"../actionType\";\r\n\r\n// 处理并返回 state\r\n\r\nexport const counter = (\r\n  state: COUNTER_STATE = 4,\r\n  action: ModifyAction\r\n): number => {\r\n  switch (action.type) {\r\n    case DECREMENT:\r\n      return state - 1;\r\n    case INCREMENT:\r\n      return state + 1;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { IuserInfo } from \"@src/service\";\r\nimport { ModifyAction } from \"../actions/userInfo\";\r\nimport { USERINFO, CLEARUSERINFO } from \"../actionType\";\r\n\r\nconst initialState = {\r\n  username: \"\",\r\n  email: \"\",\r\n  age: 0,\r\n  avatar: \"\",\r\n};\r\n\r\n// 处理并返回 state\r\nexport const userInfo = (\r\n  state: IuserInfo = initialState,\r\n  action: ModifyAction\r\n): IuserInfo => {\r\n  switch (action.type) {\r\n    case USERINFO:\r\n      return action.data;\r\n    case CLEARUSERINFO:\r\n      return initialState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { counter } from \"./counter\";\r\nimport { currentTheme } from \"./theme\";\r\nimport { token } from \"./token\";\r\nimport { userInfo } from \"./userInfo\";\r\nexport default combineReducers({\r\n  counter,\r\n  currentTheme,\r\n  token,\r\n  userInfo,\r\n});\r\n","import { ModifyAction } from \"../actions/theme\";\r\nimport { THEME } from \"../actionType\";\r\nimport { IThemeName } from \"@core/theme\";\r\n\r\n// 处理并返回 state\r\n\r\nexport const currentTheme = (\r\n  state: IThemeName = \"theme01_light\",\r\n  action: ModifyAction\r\n): IThemeName => {\r\n  switch (action.type) {\r\n    case THEME:\r\n      return action.data;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { ModifyAction } from \"../actions/token\";\r\nimport { SETTOKEN, CLEARTOKEN } from \"../actionType\";\r\n\r\n// 处理并返回 state\r\n\r\nexport const token = (state: string = \"\", action: ModifyAction): string => {\r\n  switch (action.type) {\r\n    case SETTOKEN:\r\n      return action.data;\r\n    case CLEARTOKEN:\r\n      return \"\";\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore, applyMiddleware } from \"redux\";\r\n// 数据持久化工具\r\nimport { persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage/session\";\r\nimport logger from \"redux-logger\";\r\nimport thunk from \"redux-thunk\";\r\nimport reducers from \"./reducers\";\r\n\r\nconst middleware: any[] = [thunk];\r\n\r\n// 判断是否是正式环境\r\nif (process.env.NODE_ENV === \"development\") {\r\n  middleware.push(logger);\r\n}\r\n\r\nconst persistConfig = {\r\n  // 存储的名称\r\n  key: \"BASE_ROOT\",\r\n  // 存储方式\r\n  storage: storage,\r\n  // 某个reducer,不持久化\r\n  // blacklist: ['development'],\r\n  // 需要持久化的模块\r\n  whitelist: [\"counter\", \"currentTheme\", \"token\", \"userInfo\"],\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, reducers);\r\n\r\nexport default createStore(persistedReducer, applyMiddleware(...middleware));\r\n","import Mock from \"mockjs\";\r\n\r\nexport const login = {\r\n  url: \"/login\",\r\n  method: \"post\",\r\n  data: {\r\n    result: true,\r\n    data: Mock.mock(\"@guid\"),\r\n    message: \"登录成功\",\r\n  },\r\n};\r\n","import Mock from \"mockjs\";\r\nexport const userInfo = {\r\n  url: \"/user-info\",\r\n  method: \"get\",\r\n  data: {\r\n    result: true,\r\n    data: Mock.mock({\r\n      email: \"@email()\",\r\n      \"age|20-80\": 10,\r\n      username: \"admin\",\r\n      avatar: \"@image(40x40)\",\r\n    }),\r\n    message: \"登录成功\",\r\n  },\r\n};\r\n","import Mock from \"mockjs\";\r\n// 登录模块\r\nimport * as login from \"./login.mock\";\r\n// 用户模块\r\nimport * as userInfo from \"./userInfo.mock\";\r\n\r\ncreate(login);\r\ncreate(userInfo);\r\n/**\r\n * 根据模块创建接口\r\n * @param mod m模块\r\n */\r\nfunction create(mod: any) {\r\n  for (let key in mod) {\r\n    Mock.mock(RegExp(mod[key].url + \"*\"), mod[key].method, (options) => {\r\n      const body = JSON.parse(options.body);\r\n      const { url, data } = mod[key];\r\n      // 这里判断登录是username:admin,password:123456,才可以判断\r\n      if (\r\n        url === \"/login\" &&\r\n        (body.username !== \"admin\" || body.password !== \"123456\")\r\n      ) {\r\n        return {\r\n          result: false,\r\n          data: null,\r\n          message: \"用户名或密码错误\",\r\n        };\r\n      }\r\n      return data;\r\n    });\r\n  }\r\n}\r\n\r\nexport default Mock;\r\n","import React from \"react\";\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport ReactDom from \"react-dom/client\";\r\nimport { persistStore } from \"redux-persist\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\nimport { Provider } from \"react-redux\";\r\nimport App from \"./App\";\r\nimport store from \"./store/index\";\r\nimport \"./mock\";\r\n\r\nconst persistor = persistStore(store);\r\n\r\nconst root = ReactDom.createRoot(\r\n  document.getElementById(\"root\") as HTMLElement\r\n);\r\nroot.render(\r\n  <Provider store={store}>\r\n    <PersistGate loading={null} persistor={persistor}>\r\n      <HashRouter>\r\n        <App />\r\n      </HashRouter>\r\n    </PersistGate>\r\n  </Provider>\r\n);\r\n","import { IThemeName } from \"@core/theme\";\r\nimport { IuserInfo } from \"@src/service\";\r\n\r\n// counter state数据类型\r\nexport type COUNTER_STATE = number;\r\n// 定义增加 state 类型常量\r\nexport const INCREMENT = \"INCREMENT\";\r\nexport type INCREMENT_TYPE = typeof INCREMENT;\r\n\r\n// 定义减少 state 类型常量\r\nexport const DECREMENT = \"DECREMENT\";\r\nexport type DECREMENT_TYPE = typeof DECREMENT;\r\n\r\n// 定义 theme 类型常量\r\nexport const THEME = \"THEME\";\r\nexport type THEME_TYPE = typeof THEME;\r\n\r\n// 定义 settoken 类型常量\r\nexport const SETTOKEN = \"SETTOKEN\";\r\nexport type SETTOKEN_TYPE = typeof SETTOKEN;\r\n\r\n// 定义 cleartoken 类型常量\r\nexport const CLEARTOKEN = \"CLEARTOKEN\";\r\nexport type CLEARTOKEN_TYPE = typeof CLEARTOKEN;\r\n\r\n// 定义 userInfo 类型常量\r\nexport const USERINFO = \"USERINFO\";\r\nexport type USERINFO_TYPE = typeof USERINFO;\r\n// 定义 clearUserInfo 类型常量\r\nexport const CLEARUSERINFO = \"CLEARUSERINFO\";\r\nexport type CLEARUSERINFO_TYPE = typeof CLEARUSERINFO;\r\n\r\n// 所有的数据的数据类型, 注意这里每加一个state模块都必须在这里进行申明\r\nexport type ALL_STATE = {\r\n  counter: COUNTER_STATE;\r\n  currentTheme: IThemeName;\r\n  token: string;\r\n  userInfo: IuserInfo;\r\n};\r\n","import {\r\n  SETTOKEN,\r\n  SETTOKEN_TYPE,\r\n  CLEARTOKEN,\r\n  CLEARTOKEN_TYPE,\r\n  CLEARUSERINFO,\r\n} from \"../actionType\";\r\nimport { Dispatch } from \"redux\";\r\n\r\nexport interface ISetTokenAction {\r\n  type: SETTOKEN_TYPE;\r\n  data: string;\r\n}\r\n\r\nexport interface IClearTokenAction {\r\n  type: CLEARTOKEN_TYPE;\r\n}\r\n\r\nexport type ModifyAction = ISetTokenAction | IClearTokenAction;\r\n\r\nconst actionSetTheme = (data: string): ISetTokenAction => ({\r\n  type: SETTOKEN,\r\n  data,\r\n});\r\n\r\nconst actionClearTheme = (): IClearTokenAction => ({\r\n  type: CLEARTOKEN,\r\n});\r\n\r\nexport const setToken = (data: string) => (dispatch: Dispatch) => {\r\n  dispatch(actionSetTheme(data));\r\n};\r\n\r\nexport const clearToken = () => (dispatch: Dispatch) => {\r\n  dispatch(actionClearTheme());\r\n  dispatch({\r\n    type: CLEARUSERINFO,\r\n  });\r\n};\r\n","var map = {\n\t\"./home\": [\n\t\t8788,\n\t\t9,\n\t\t788\n\t],\n\t\"./home/\": [\n\t\t8788,\n\t\t9,\n\t\t788\n\t],\n\t\"./home/index\": [\n\t\t8788,\n\t\t9,\n\t\t788\n\t],\n\t\"./home/index.scss\": [\n\t\t1407,\n\t\t9,\n\t\t407\n\t],\n\t\"./home/index.tsx\": [\n\t\t8788,\n\t\t9,\n\t\t788\n\t],\n\t\"./layout\": [\n\t\t9598,\n\t\t9,\n\t\t598\n\t],\n\t\"./layout/\": [\n\t\t9598,\n\t\t9,\n\t\t598\n\t],\n\t\"./layout/index\": [\n\t\t9598,\n\t\t9,\n\t\t598\n\t],\n\t\"./layout/index.tsx\": [\n\t\t9598,\n\t\t9,\n\t\t598\n\t],\n\t\"./login\": [\n\t\t6221,\n\t\t9,\n\t\t676,\n\t\t334,\n\t\t771\n\t],\n\t\"./login/\": [\n\t\t6221,\n\t\t9,\n\t\t676,\n\t\t334,\n\t\t771\n\t],\n\t\"./login/assets/bg01.png\": [\n\t\t9839,\n\t\t1,\n\t\t839\n\t],\n\t\"./login/assets/bg02.png\": [\n\t\t8244,\n\t\t1,\n\t\t244\n\t],\n\t\"./login/assets/bg03.png\": [\n\t\t460,\n\t\t1,\n\t\t460\n\t],\n\t\"./login/index\": [\n\t\t6221,\n\t\t9,\n\t\t676,\n\t\t334,\n\t\t771\n\t],\n\t\"./login/index.scss\": [\n\t\t3242,\n\t\t9,\n\t\t242\n\t],\n\t\"./login/index.tsx\": [\n\t\t6221,\n\t\t9,\n\t\t676,\n\t\t334,\n\t\t771\n\t],\n\t\"./notFound\": [\n\t\t8204,\n\t\t9,\n\t\t676,\n\t\t922\n\t],\n\t\"./notFound/\": [\n\t\t8204,\n\t\t9,\n\t\t676,\n\t\t922\n\t],\n\t\"./notFound/index\": [\n\t\t8204,\n\t\t9,\n\t\t676,\n\t\t922\n\t],\n\t\"./notFound/index.scss\": [\n\t\t1229,\n\t\t9,\n\t\t229\n\t],\n\t\"./notFound/index.tsx\": [\n\t\t8204,\n\t\t9,\n\t\t676,\n\t\t922\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(2).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__.t(id, ids[1] | 16)\n\t});\n}\nwebpackAsyncContext.keys = function() { return Object.keys(map); };\nwebpackAsyncContext.id = 717;\nmodule.exports = webpackAsyncContext;"],"names":["login","user","NODE_ENV","process","console","log","axios","defaults","baseURL","requestList","allowRequest","url","i","len","length","splice","interceptors","request","use","config","source","CancelToken","headers","Authorization","cancelToken","token","cancel","push","stopRepeatRequest","Qs","params","method","error","Promise","reject","response","status","Error","data","API","loginService","post","userService","userInfo","get","useLogin","loginLoading","setLoginLoading","useState","navigate","useNavigate","useCallback","callback","then","catch","useInfo","userInfoLoading","setUserInfoLoading","getUserInfo","res","path","title","modulePath","meta","auth","children","redirect","fullScreen","menu","icon","_ref","Header","Footer","Sidder","className","style","React","Module","lazy","getParentsById","id","ro","undefined","index","findIndex","item","concat","name","mapDispatchToProps","clearToken","setUserInfo","dispatch","type","USERINFO","actionUserInfo","connect","state","collapsed","setCollapsed","pathname","useLocation","breadcrumb","setBreadcrumb","useEffect","routerDatas","reverse","items","key","label","onClick","LoginOutlined","MenuUnfoldOutlined","MenuFoldOutlined","Breadcrumb","map","Link","to","Theme","Dropdown","src","avatar","alt","username","DownOutlined","theme01_light","theme01_dark","theme02_light","theme02_dark","themeList","color","themes","isSupportCssVar","window","CSS","supports","cssRootVar","themeJson","arguments","selector","root","document","querySelector","createElement","innerHTML","isJoin","cssvar","Object","keys","join","formatCssVar","getAttribute","setAttribute","header","head","getElementsByName","appendChild","setTheme","theme","documentElement","cssVars","watch","variables","onlyLegacy","getCurrentPrimaryColor","_themeList$find","find","setCurrentTheme","THEME","actionTheme","currentTheme","background","filter","includes","split","modeHandler","currentThemeName","selectedKeys","setSelectedKeys","openKeys","setOpenKeys","arr","slice","recursionTree","tree","fontSize","dangerouslySetInnerHTML","__html","Array","isArray","Menu","mode","inlineCollapsed","onSelect","onOpenChange","NewPrivateRoute","CONFIG","Navigate","routeTree","datas","_ref2","Route","element","lazyLoad","replace","memo","Suspense","Routes","routes","a","b","dayjs","_currentRoute$meta","_currentRoute$meta2","_currentRoute$meta3","_currentRoute$meta4","currentRoute","value","field","result","hasFound","fn","getGroupById","ConfigProvider","locale","zhCN","colorPrimary","algorithm","darkAlgorithm","defaultAlgorithm","Layout","paddingTop","paddingLeft","initialState","email","age","combineReducers","counter","DECREMENT","INCREMENT","action","SETTOKEN","CLEARTOKEN","CLEARUSERINFO","middleware","thunk","persistConfig","storage","whitelist","persistedReducer","persistReducer","reducers","createStore","applyMiddleware","Mock","message","create","mod","RegExp","options","body","JSON","parse","password","persistor","persistStore","store","ReactDom","getElementById","render","Provider","PersistGate","loading","HashRouter","App","setToken","actionSetTheme","webpackAsyncContext","req","__webpack_require__","o","resolve","e","code","ids","all","t","module","exports"],"sourceRoot":""}