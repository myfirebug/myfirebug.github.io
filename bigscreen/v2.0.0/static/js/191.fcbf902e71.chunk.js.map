{"version":3,"file":"static/js/191.fcbf902e71.chunk.js","mappings":"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","sources":["webpack://large-screen-configuration/./src/compoents/dragdrop/drag.ts","webpack://large-screen-configuration/./src/compoents/dragdrop/moveMask/index.tsx","webpack://large-screen-configuration/./src/compoents/dragdrop/previewItem/index.tsx","webpack://large-screen-configuration/./src/compoents/dragdrop/dragContent/index.tsx","webpack://large-screen-configuration/./src/layout/configLayout/components/header/components/modifyNameDialog/index.tsx","webpack://large-screen-configuration/./src/layout/configLayout/components/header/index.tsx","webpack://large-screen-configuration/./src/layout/configLayout/components/main/components/rule/index.tsx","webpack://large-screen-configuration/./src/layout/configLayout/components/main/index.tsx","webpack://large-screen-configuration/./src/layout/configLayout/components/box/index.tsx","webpack://large-screen-configuration/./src/layout/configLayout/components/leftAside/index.tsx","webpack://large-screen-configuration/./src/compoents/dragdrop/dragItem/index.tsx","webpack://large-screen-configuration/./src/layout/configLayout/components/leftAside/components/elements/index.tsx","webpack://large-screen-configuration/./src/layout/configLayout/components/rightAside/index.tsx","webpack://large-screen-configuration/./src/layout/configLayout/components/rightAside/components/layer/index.tsx","webpack://large-screen-configuration/./src/compoents/jsonEditor/index.tsx","webpack://large-screen-configuration/./src/layout/configLayout/components/rightAside/components/baseForm/index.tsx","webpack://large-screen-configuration/./src/layout/configLayout/components/rightAside/components/dynamicForm/index.tsx","webpack://large-screen-configuration/./src/layout/configLayout/components/rightAside/components/widget/index.tsx","webpack://large-screen-configuration/./src/core/config/classification/text/base.ts","webpack://large-screen-configuration/./src/core/config/classification/text/message.ts","webpack://large-screen-configuration/./src/core/config/classification/text/date.ts","webpack://large-screen-configuration/./src/core/config/classification/index.ts","webpack://large-screen-configuration/./src/core/config/classification/line/index.ts","webpack://large-screen-configuration/./src/core/config/classification/bar/index.ts","webpack://large-screen-configuration/./src/core/config/classification/text/countUp.ts","webpack://large-screen-configuration/./src/core/config/classification/pie/index.ts","webpack://large-screen-configuration/./src/core/config/classification/image/base.ts","webpack://large-screen-configuration/./src/core/config/classification/image/banner.ts","webpack://large-screen-configuration/./src/core/config/classification/table/index.ts","webpack://large-screen-configuration/./src/layout/configLayout/components/rightAside/components/element/index.tsx","webpack://large-screen-configuration/./src/layout/configLayout/components/rightAside/components/data/index.tsx","webpack://large-screen-configuration/./src/pages/widgets/edit/index.tsx"],"sourcesContent":["class DragStore<T extends IAnyObject> {\r\n  moveItem = new Map<string, T>();\r\n\r\n  set(key: string, data: T) {\r\n    this.moveItem.set(key, data);\r\n  }\r\n\r\n  remove(key: string) {\r\n    this.moveItem.delete(key);\r\n  }\r\n\r\n  get(key: string): undefined | T {\r\n    return this.moveItem.get(key);\r\n  }\r\n}\r\n\r\n/**\r\n * 拖拽临时数据\r\n */\r\nexport const dragStore = new DragStore<IAnyObject>();\r\n\r\n/**\r\n * 判断是否在当前四边形内\r\n * @param {*} p1 父容器\r\n * @param {*} p2\r\n * @returns\r\n *  对应是 左上角坐标 和 右下角坐标\r\n *  [0,0,1,1]  => 左上角坐标 0,0  右下角 1,1\r\n */\r\nexport const booleanWithin = (\r\n  p1: [number, number, number, number],\r\n  p2: [number, number, number, number]\r\n) => {\r\n  return p1[0] <= p2[0] && p1[1] <= p2[1] && p1[2] >= p2[2] && p1[3] >= p2[3];\r\n};\r\n\r\n/**\r\n * 判断是两四边形是否相交\r\n * @param {*} p1 父容器\r\n * @param {*} p2\r\n * @returns\r\n *  对应是 左上角坐标 和 右下角坐标\r\n *  [0,0,1,1]  => 左上角坐标 0,0  右下角 1,1\r\n */\r\nexport const booleanIntersects = (\r\n  p1: [number, number, number, number],\r\n  p2: [number, number, number, number]\r\n) => {\r\n  return !(\r\n    p1[2] <= p2[0] || // p1 在 p2 左边\r\n    p2[2] <= p1[0] || // p1 在 p2 右边\r\n    p1[3] <= p2[1] || // p1 在 p2 上边\r\n    // p1 在 p2 下边\r\n    p2[3] <= p1[1]\r\n  );\r\n};\r\n\r\n/**\r\n * 获取元素位置信息\r\n * @param {*} width 格子宽\r\n * @param {*} height 格子高\r\n * @param {*} x x 坐标\r\n * @param {*} y y 坐标\r\n * @param {*} gap 间隔\r\n * @param {*} column 元素占列数\r\n * @param {*} row 元素占行数\r\n * @returns\r\n */\r\nexport const getItemSizeStyle = (\r\n  width: number,\r\n  height: number,\r\n  x: number,\r\n  y: number,\r\n  gap: number,\r\n  column: number,\r\n  row: number\r\n) => {\r\n  return {\r\n    width: `${width * column + (column - 1) * gap}px`,\r\n    height: `${height * row + (row - 1) * gap}px`,\r\n    transform: `translate(${(width + gap) * (x - 1)}px,${\r\n      (height + gap) * (y - 1)\r\n    }px)`,\r\n  };\r\n};\r\n","import React, { FC, HtmlHTMLAttributes, ReactNode, useMemo } from \"react\";\r\nimport { getItemSizeStyle } from \"../drag\";\r\nimport \"./index.scss\";\r\n\r\ninterface IMoveMask extends HtmlHTMLAttributes<HTMLDivElement> {\r\n  /** 容器格子宽 */\r\n  width: number;\r\n  /** 容器格子高 */\r\n  height: number;\r\n  /** 格子间隔 */\r\n  gap: number;\r\n  /** 拖拽元素列数 */\r\n  column: number;\r\n  /** 拖拽元素行数 */\r\n  row: number;\r\n  /** 拖拽元素 x 坐标 */\r\n  x: number;\r\n  /** 拖拽元素 y 坐标 */\r\n  y: number;\r\n  children: ReactNode;\r\n}\r\n\r\nconst MoveMask: FC<IMoveMask> = ({\r\n  width = 0,\r\n  height = 0,\r\n  gap = 0,\r\n  column = 0,\r\n  row = 0,\r\n  x = 0,\r\n  y = 0,\r\n  style,\r\n  children,\r\n}) => {\r\n  // 获取遮罩层样式\r\n  const maskStyle = useMemo(() => {\r\n    return getItemSizeStyle(width, height, x, y, gap, column, row);\r\n  }, [column, gap, height, row, width, x, y]);\r\n  return (\r\n    <div className=\"cms-drag__moveMask\" style={{ ...maskStyle, ...style }}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MoveMask;\r\n","import React, {\r\n  HtmlHTMLAttributes,\r\n  useCallback,\r\n  useMemo,\r\n  useState,\r\n  memo,\r\n  ReactNode,\r\n} from \"react\";\r\nimport \"./index.scss\";\r\nimport { dragStore } from \"../drag\";\r\ninterface IPreviewItem extends HtmlHTMLAttributes<HTMLDivElement> {\r\n  data: IAnyObject;\r\n  onResizeStart?: () => void;\r\n  onResizeing?: (e: React.DragEvent<HTMLDivElement>) => void;\r\n  onResizeEnd?: () => void;\r\n  groupName?: string;\r\n  /**\r\n   * @param id 刪除的数据ID\r\n   * @returns\r\n   */\r\n  onCloseHander?: (id: string) => void;\r\n  children: ReactNode;\r\n  isShowCloseBtn?: boolean;\r\n}\r\n\r\nconst PreviewItem = memo((props: IPreviewItem) => {\r\n  const {\r\n    data,\r\n    style,\r\n    groupName,\r\n    onResizeStart,\r\n    onResizeing,\r\n    onResizeEnd,\r\n    onCloseHander,\r\n    children,\r\n    isShowCloseBtn,\r\n  } = props;\r\n  const [moveing, setMoveing] = useState(false);\r\n  const [resizeing, setResizeing] = useState(false);\r\n  const previewStyles = useMemo(() => {\r\n    return {\r\n      gridArea: `${data.y} / ${data.x} / ${data.y + data.row}/ ${\r\n        data.x + data.column\r\n      }`,\r\n      ...(moveing\r\n        ? {\r\n            opacity: 0,\r\n            // 将当前元素移出容器外,将元素占位空置出来\r\n            transform: `translate(-999999999px, -9999999999px)`,\r\n          }\r\n        : {}),\r\n      ...(resizeing ? { opacity: 0.5 } : {}),\r\n    };\r\n  }, [data.column, data.row, data.x, data.y, moveing, resizeing]);\r\n  // 移动开始\r\n  const onDragStart = useCallback(\r\n    (e: React.DragEvent<HTMLDivElement>) => {\r\n      dragStore.set(groupName as string, {\r\n        ...data,\r\n        pageX: e.pageX,\r\n        pageY: e.pageY,\r\n      });\r\n      setTimeout(() => {\r\n        setMoveing(true);\r\n      }, 0);\r\n      setResizeing(false);\r\n    },\r\n    [data, groupName]\r\n  );\r\n  // 移动结束\r\n  const onDragEnd = useCallback(\r\n    (e: React.DragEvent<HTMLDivElement>) => {\r\n      setMoveing(false);\r\n      dragStore.remove(groupName as string);\r\n    },\r\n    [groupName]\r\n  );\r\n\r\n  const onMouseDown = useCallback(\r\n    (e: React.DragEvent<HTMLDivElement>) => {\r\n      dragStore.set(groupName as string, data);\r\n      setResizeing(true);\r\n      onResizeStart?.();\r\n    },\r\n    [data, groupName, onResizeStart]\r\n  );\r\n\r\n  const onMouseMove = useCallback(\r\n    (e: React.DragEvent<HTMLDivElement>) => {\r\n      e.preventDefault();\r\n      onResizeing?.(e);\r\n    },\r\n    [onResizeing]\r\n  );\r\n\r\n  const onMouseUp = useCallback(\r\n    (e: any) => {\r\n      onResizeEnd?.();\r\n      e.target.style.width = \"100%\";\r\n      e.target.style.height = \"100%\";\r\n      setResizeing(false);\r\n    },\r\n    [onResizeEnd]\r\n  );\r\n  return (\r\n    <div\r\n      className=\"cms-drag__preview--item\"\r\n      style={{ ...previewStyles, ...style }}\r\n      onDragStart={onDragStart}\r\n      draggable\r\n      onDragEnd={onDragEnd}\r\n      onMouseDown={onMouseDown}\r\n      onMouseMove={onMouseMove}\r\n      onMouseUp={onMouseUp}\r\n    >\r\n      {children}\r\n      {isShowCloseBtn ? (\r\n        <div\r\n          className=\"close\"\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            onCloseHander?.(data.elementId);\r\n          }}\r\n        ></div>\r\n      ) : (\r\n        \"none\"\r\n      )}\r\n      {/* <div className=\"resize\"></div> */}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default PreviewItem;\r\n","import React, {\r\n  memo,\r\n  ReactNode,\r\n  useCallback,\r\n  useEffect,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport \"./index.scss\";\r\nimport { booleanIntersects, booleanWithin, dragStore } from \"../drag\";\r\nimport MoveMask from \"../moveMask\";\r\nimport { guid } from \"@src/utils\";\r\nimport PreviewItem from \"../previewItem\";\r\n\r\ninterface IDragContent {\r\n  // 辅助线配置\r\n  auxiliaryLineConfig?: IAnyObject;\r\n  datas: IAnyObject[];\r\n  /** 拖拽分组标识 */\r\n  groupName?: string;\r\n  /** 容器需要分隔列数 */\r\n  column: number;\r\n  /** 容器需要分隔行数 */\r\n  row: number;\r\n  /** 容器格子间隔 */\r\n  gap: number;\r\n  /** 是否显示拖拽预占位层 */\r\n  mask?: boolean;\r\n  /** drop时对比的id字段 */\r\n  field?: string;\r\n  /**\r\n   * @param isAdd 是否新增\r\n   * @param data 数据\r\n   * @returns\r\n   */\r\n  onDropHandler?: (isAdd: boolean, data: IAnyObject) => void;\r\n  /**\r\n   * @param data 改变的数据\r\n   * @returns\r\n   */\r\n  onResizeEndHandler?: (data: IAnyObject) => void;\r\n  /**\r\n   * @param id 刪除的数据ID\r\n   * @returns\r\n   */\r\n  onCloseHander?: (id: string) => void;\r\n\r\n  renderPreview?: (data: IAnyObject) => ReactNode;\r\n}\r\n\r\nconst DragContent = memo((props: IDragContent) => {\r\n  const {\r\n    groupName,\r\n    column,\r\n    row,\r\n    gap,\r\n    mask = true,\r\n    field = \"id\",\r\n    onDropHandler,\r\n    datas,\r\n    onResizeEndHandler,\r\n    onCloseHander,\r\n    renderPreview,\r\n    auxiliaryLineConfig,\r\n  } = props;\r\n  // 目标元素\r\n  const target = useRef<HTMLDivElement>(null);\r\n  // 宽高\r\n  const [clientRect, setClientRect] = useState({\r\n    width: 0,\r\n    height: 0,\r\n    x: 0,\r\n    y: 0,\r\n  });\r\n  const [resizeEnd, setResizeEnd] = useState(false);\r\n  // 拖拽中的元素\r\n  const [current, setCuurent] = useState<IAnyObject>({});\r\n  // 动态计算目标元素的宽高\r\n  const getClientRect = useCallback(() => {\r\n    if (!target.current) return;\r\n    const { width, height, x, y } = (\r\n      target.current as HTMLDivElement\r\n    )?.getBoundingClientRect();\r\n    setClientRect({\r\n      width: (width - (column - 1) * gap) / column,\r\n      height: (height - (row - 1) * gap) / row,\r\n      x: x,\r\n      y: y,\r\n    });\r\n  }, [column, gap, row]);\r\n  useEffect(() => {\r\n    getClientRect();\r\n    const resizeObserver = new ResizeObserver((entries) => {\r\n      if (!Array.isArray(entries) || !entries.length) {\r\n        return;\r\n      }\r\n      getClientRect();\r\n    });\r\n\r\n    resizeObserver.observe(target.current as HTMLDivElement);\r\n    return () => {\r\n      resizeObserver.disconnect();\r\n    };\r\n  }, [getClientRect]);\r\n  // 判断是否可放置\r\n  const isPutDown = useMemo(() => {\r\n    const currentXy: [number, number, number, number] = [\r\n      current.x,\r\n      current.y,\r\n      current.x + current.column - 1,\r\n      current.y + current.row - 1,\r\n    ];\r\n    return (\r\n      booleanWithin([0, 0, column, row], currentXy) &&\r\n      datas.every(\r\n        (item) =>\r\n          item[field] === current[field] ||\r\n          !booleanIntersects(\r\n            [item.x - 1, item.y - 1, item.x + item.column, item.y + item.row],\r\n            currentXy\r\n          )\r\n      )\r\n    );\r\n  }, [column, current, datas, field, row]);\r\n\r\n  // 计算 x 坐标\r\n  const getX = useCallback(\r\n    (num: number) =>\r\n      parseInt(String((num - clientRect.x) / (clientRect.width + gap))) + 1,\r\n    [clientRect.width, clientRect.x, gap]\r\n  );\r\n  // 计算 y 坐标\r\n  const getY = useCallback(\r\n    (num: number) =>\r\n      parseInt(String((num - clientRect.y) / (clientRect.height + gap))) + 1,\r\n    [clientRect.height, clientRect.y, gap]\r\n  );\r\n  // 计算列数\r\n  const getColumn = useCallback(\r\n    (num: number) => Math.max(1, Math.ceil(num / (clientRect.width + gap))),\r\n    [clientRect.width, gap]\r\n  );\r\n  // 计算行数\r\n  const getRow = useCallback(\r\n    (num: number) => Math.max(1, Math.ceil(num / (clientRect.height + gap))),\r\n    [clientRect.height, gap]\r\n  );\r\n  // 进入放置目标\r\n  const onDragEnter = useCallback(\r\n    (e: React.DragEvent<HTMLDivElement>) => {\r\n      e.preventDefault();\r\n      const dragData = dragStore.get(groupName as string);\r\n      if (dragData) {\r\n        setCuurent((state) => ({\r\n          ...state,\r\n          ...dragData,\r\n          x: getX(e.pageX),\r\n          y: getY(e.pageY),\r\n          show: true,\r\n        }));\r\n      }\r\n      console.log(\"onDragEnter\");\r\n    },\r\n    [getX, getY, groupName]\r\n  );\r\n  // 在目标中移动\r\n  const onDragOver = useCallback(\r\n    (e: React.DragEvent<HTMLDivElement>) => {\r\n      e.preventDefault();\r\n      const dragData = dragStore.get(groupName as string);\r\n      if (dragData) {\r\n        setCuurent((state) => ({\r\n          ...state,\r\n          ...dragData,\r\n          x: getX(e.pageX),\r\n          y: getY(e.pageY),\r\n          show: true,\r\n        }));\r\n      }\r\n      console.log(\"onDragOver\");\r\n    },\r\n    [getX, getY, groupName]\r\n  );\r\n  // 离开目标\r\n  const onDragLeave = useCallback(\r\n    (e: React.DragEvent<HTMLDivElement>) => {\r\n      e.preventDefault();\r\n      setCuurent((state) => ({\r\n        ...state,\r\n        show: false,\r\n        [field]: undefined,\r\n      }));\r\n      console.log(\"onDragLeave\");\r\n    },\r\n    [field]\r\n  );\r\n  // 放置在目标上\r\n  const onDrop = useCallback(\r\n    (e: React.DragEvent<HTMLDivElement>) => {\r\n      const dragData = dragStore.get(groupName as string);\r\n      e.preventDefault();\r\n      setCuurent((state) => ({\r\n        ...state,\r\n        show: false,\r\n      }));\r\n      if (isPutDown) {\r\n        onDropHandler &&\r\n          onDropHandler(!Boolean(dragData && dragData[field]), {\r\n            ...dragData,\r\n            ...current,\r\n            [field]: dragData && dragData[field] ? dragData[field] : guid(),\r\n          });\r\n      }\r\n      console.log(\"onDrop\");\r\n    },\r\n    [current, field, groupName, isPutDown, onDropHandler]\r\n  );\r\n  // 调整大小开始\r\n  const onResizeStart = useCallback(() => {\r\n    const dragData = dragStore.get(groupName as string);\r\n    if (dragData) {\r\n      setResizeEnd(false);\r\n      setCuurent((state) => ({\r\n        ...state,\r\n        ...dragData,\r\n        show: true,\r\n      }));\r\n    }\r\n  }, [groupName]);\r\n  // 调正大小时\r\n  const onResizeing = useCallback(\r\n    (e: any) => {\r\n      setResizeEnd(false);\r\n      setCuurent((state) => ({\r\n        ...state,\r\n        column: getColumn(e.target.offsetWidth),\r\n        row: getRow(e.target.offsetHeight),\r\n      }));\r\n    },\r\n    [getColumn, getRow]\r\n  );\r\n  // 调整大小结束\r\n  const onResizeEnd = useCallback(() => {\r\n    setResizeEnd(true);\r\n    setCuurent((state) => ({\r\n      ...state,\r\n      show: false,\r\n    }));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const dragData = dragStore.get(groupName as string);\r\n    if (resizeEnd && isPutDown) {\r\n      if (\r\n        dragData?.column !== current.column ||\r\n        dragData?.row !== current.row\r\n      ) {\r\n        console.log(dragData, current, groupName, \"update onResizeEndHandler\");\r\n        onResizeEndHandler?.(current);\r\n        setResizeEnd(false);\r\n      }\r\n    }\r\n  }, [onResizeEndHandler, current, groupName, resizeEnd, isPutDown]);\r\n\r\n  return (\r\n    <div\r\n      ref={target}\r\n      className=\"cms-drag__content\"\r\n      onDragEnter={onDragEnter}\r\n      onDragOver={onDragOver}\r\n      onDragLeave={onDragLeave}\r\n      onDrop={onDrop}\r\n    >\r\n      <div\r\n        className=\"cms-drag__content--container\"\r\n        style={{\r\n          display: auxiliaryLineConfig?.show ? \"grid\" : \"none\",\r\n          gap: `${gap}px`,\r\n          gridTemplateColumns: `repeat(${column}, ${clientRect.width}px)`,\r\n          gridTemplateRows: `repeat(${row},  ${clientRect.height}px)`,\r\n          width: \"100%\",\r\n          height: \"100%\",\r\n        }}\r\n      >\r\n        {new Array(column * row).fill(null).map((_, index) => (\r\n          <div\r\n            key={index}\r\n            style={{\r\n              borderColor:\r\n                auxiliaryLineConfig?.borderColor || \"rgba(255, 255, 255, 0.2)\",\r\n            }}\r\n          ></div>\r\n        ))}\r\n      </div>\r\n      <div\r\n        className=\"cms-drag__preview\"\r\n        style={{\r\n          display: \"grid\",\r\n          gap: `${gap}px`,\r\n          gridTemplateColumns: `repeat(${column}, ${clientRect.width}px)`,\r\n          gridTemplateRows: `repeat(${row},  ${clientRect.height}px)`,\r\n          width: \"100%\",\r\n          height: \"100%\",\r\n        }}\r\n      >\r\n        {datas.map((item) => (\r\n          <PreviewItem\r\n            key={item[field]}\r\n            data={item}\r\n            groupName={groupName}\r\n            style={{\r\n              pointerEvents:\r\n                current.show && item[field] !== current[field] ? \"none\" : \"all\",\r\n              resize: auxiliaryLineConfig?.show ? \"both\" : \"none\",\r\n            }}\r\n            onResizeStart={onResizeStart}\r\n            onResizeing={onResizeing}\r\n            onResizeEnd={onResizeEnd}\r\n            onCloseHander={onCloseHander}\r\n            isShowCloseBtn={auxiliaryLineConfig?.show}\r\n          >\r\n            {renderPreview?.(item)}\r\n          </PreviewItem>\r\n        ))}\r\n\r\n        {mask ? (\r\n          <MoveMask\r\n            style={{\r\n              display: current?.show ? \"flex\" : \"none\",\r\n              background: isPutDown\r\n                ? \"var(--cms-divider-color)\"\r\n                : \"var(--cms-color-help)\",\r\n            }}\r\n            width={clientRect.width}\r\n            height={clientRect.height}\r\n            gap={gap}\r\n            column={current?.column}\r\n            row={current?.row}\r\n            x={current?.x}\r\n            y={current?.y}\r\n          >\r\n            {isPutDown ? \"可放置\" : \"不可放置\"}\r\n          </MoveMask>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default DragContent;\r\n","import React, { FC } from \"react\";\r\nimport {\r\n  Modal,\r\n  ModalProps,\r\n  Form,\r\n  type FormProps,\r\n  Input,\r\n  Button,\r\n  message,\r\n} from \"antd\";\r\nimport { PAGETYPENAME } from \"@src/core/enums/access.enums\";\r\n\r\ninterface ImodifyNameDialog extends ModalProps {\r\n  onClose: () => void;\r\n  // 名称\r\n  name: string;\r\n  // 类型\r\n  pageType: PageType;\r\n  // 修改名称成功函数\r\n  modifyNameSuccessHander?: (name: string) => void;\r\n}\r\n\r\ntype FieldType = {\r\n  name: string;\r\n};\r\n\r\nconst modifyNameDialog: FC<ImodifyNameDialog> = ({\r\n  name,\r\n  open,\r\n  onClose,\r\n  pageType,\r\n  modifyNameSuccessHander,\r\n}) => {\r\n  const onFinish: FormProps<FieldType>[\"onFinish\"] = (values) => {\r\n    modifyNameSuccessHander?.(values.name);\r\n    message.success(\"修改成功\");\r\n    onClose();\r\n  };\r\n  return (\r\n    <Modal\r\n      open={open}\r\n      onClose={onClose}\r\n      onCancel={onClose}\r\n      footer={null}\r\n      title={`修改${PAGETYPENAME[pageType]}名称`}\r\n      destroyOnClose\r\n    >\r\n      <Form\r\n        onFinish={onFinish}\r\n        initialValues={{ name: name || \"\" }}\r\n        autoComplete=\"off\"\r\n      >\r\n        <Form.Item<FieldType>\r\n          name=\"name\"\r\n          rules={[\r\n            { required: true, message: `请输入${PAGETYPENAME[pageType]}名称` },\r\n          ]}\r\n        >\r\n          <Input placeholder={`请输入${PAGETYPENAME[pageType]}名称`} />\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\" block>\r\n            保存\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default modifyNameDialog;\r\n","import React, { FC, useState } from \"react\";\r\nimport \"./index.scss\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport ModifyNameDialog from \"./components/modifyNameDialog\";\r\n\r\ninterface IConfigLayoutHeader {\r\n  // 类型\r\n  pageType: PageType;\r\n  // 名称\r\n  name?: string;\r\n  // 页面logo\r\n  logo?: string;\r\n  // 预览函数\r\n  previewHandler?: () => void;\r\n  // 发布函数\r\n  publishHandler?: () => void;\r\n  // 修改名称成功函数\r\n  modifyNameSuccessHander?: (name: string) => void;\r\n}\r\n\r\nexport const ConfigLayoutHeader: FC<IConfigLayoutHeader> = ({\r\n  name,\r\n  logo,\r\n  pageType,\r\n  modifyNameSuccessHander,\r\n  previewHandler,\r\n  publishHandler,\r\n}) => {\r\n  const navigate = useNavigate();\r\n  const [isModalNameOpen, setIsModalNameOpen] = useState(false);\r\n  return (\r\n    <>\r\n      <div className=\"cms-config-layout__header\">\r\n        <div className=\"cms-config-layout__header--left\">\r\n          <span\r\n            className=\"cms-icon logo\"\r\n            dangerouslySetInnerHTML={{ __html: logo || \"&#xe625;\" }}\r\n          ></span>\r\n          <h1 className=\"name\">{name}</h1>\r\n          <span\r\n            className=\"cms-icon edit\"\r\n            onClick={() => setIsModalNameOpen(true)}\r\n          >\r\n            &#xec88;\r\n          </span>\r\n        </div>\r\n        <div className=\"cms-config-layout__header--right\">\r\n          <div className=\"preview\" onClick={previewHandler}>\r\n            <i className=\"cms-icon\">&#xe668;</i>预览\r\n          </div>\r\n          <div className=\"publish\" onClick={publishHandler}>\r\n            <i className=\"cms-icon\">&#xe620;</i>发布\r\n          </div>\r\n          <div className=\"preview\" onClick={() => navigate(-1)}>\r\n            <i className=\"cms-icon\">&#xe720;</i>返回\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <ModifyNameDialog\r\n        name={name || \"\"}\r\n        pageType={pageType}\r\n        open={isModalNameOpen}\r\n        onClose={() => setIsModalNameOpen(false)}\r\n        modifyNameSuccessHander={modifyNameSuccessHander}\r\n      ></ModifyNameDialog>\r\n    </>\r\n  );\r\n};\r\n","import React, { FC } from \"react\";\r\nimport \"./index.scss\";\r\n\r\ninterface IRulerProps {}\r\n\r\nconst Ruler: FC<IRulerProps> = () => {\r\n  const arr = Array.from(new Array(100).keys());\r\n\r\n  return (\r\n    <div className=\"cms-config-layout__ruler\">\r\n      <div className=\"cms-config-layout__ruler--hwrapper\">\r\n        <div className=\"cms-config-layout__ruler--h\">\r\n          <span className=\"ruler-h-50\">\r\n            <b>50</b>\r\n            <i></i>\r\n            <i></i>\r\n            <i></i>\r\n            <i></i>\r\n            <i></i>\r\n            <i></i>\r\n            <i></i>\r\n            <i></i>\r\n            <i></i>\r\n            <i></i>\r\n          </span>\r\n          {arr.map((item: any, index: number) => (\r\n            <span className=\"ruler-h-50\" key={index}>\r\n              <b>{index * 50}</b>\r\n              <i></i>\r\n              <i></i>\r\n              <i></i>\r\n              <i></i>\r\n              <i></i>\r\n              <i></i>\r\n              <i></i>\r\n              <i></i>\r\n              <i></i>\r\n              <i></i>\r\n            </span>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className=\"cms-config-layout__ruler--vwrapper\">\r\n        <div className=\"cms-config-layout__ruler--v\">\r\n          <span className=\"ruler-h-50\">\r\n            <b>50</b>\r\n            <i></i>\r\n            <i></i>\r\n            <i></i>\r\n            <i></i>\r\n            <i></i>\r\n            <i></i>\r\n            <i></i>\r\n            <i></i>\r\n            <i></i>\r\n            <i></i>\r\n          </span>\r\n          {arr.map((item: any, index: number) => (\r\n            <span className=\"ruler-h-50\" key={index}>\r\n              <b>{index * 50}</b>\r\n              <i></i>\r\n              <i></i>\r\n              <i></i>\r\n              <i></i>\r\n              <i></i>\r\n              <i></i>\r\n              <i></i>\r\n              <i></i>\r\n              <i></i>\r\n              <i></i>\r\n            </span>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Ruler;\r\n","import React, { FC, ReactNode } from \"react\";\r\nimport Rule from \"./components/rule\";\r\nimport \"./index.scss\";\r\ninterface IConfigLayoutMain {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const ConfigLayoutMain: FC<IConfigLayoutMain> = ({ children }) => {\r\n  return (\r\n    <div className=\"cms-config-layout__main\">\r\n      <div className=\"cms-config-layout__center\">\r\n        <Rule />\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { FC, ReactNode } from \"react\";\r\nimport \"./index.scss\";\r\nimport { CloseOutlined } from \"@ant-design/icons\";\r\ninterface IBox {\r\n  title: string;\r\n  children: ReactNode;\r\n  onClose: () => void;\r\n}\r\n\r\nconst Box: FC<IBox> = ({ title, children, onClose }) => {\r\n  return (\r\n    <div className=\"cms-box\" style={{ display: title ? \"flex\" : \"none\" }}>\r\n      <div className=\"cms-box__header\">\r\n        <div className=\"name\">{title}</div>\r\n        <CloseOutlined onClick={onClose} />\r\n      </div>\r\n      <div className=\"cms-box__body\">{children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Box;\r\n","import React, { FC, ReactNode, useEffect, useState } from \"react\";\r\nimport { PAGETYPENAME } from \"@src/core/enums/access.enums\";\r\nimport { Tooltip } from \"antd\";\r\nimport Box from \"../box\";\r\nimport \"./index.scss\";\r\ninterface IConfigLayoutLeftAside {\r\n  navs: PageType[];\r\n  render: (data: PageType | \"\") => ReactNode;\r\n}\r\n\r\ninterface ITabItem {\r\n  icon: string;\r\n  type: PageType;\r\n}\r\n\r\nconst ALLTABS: ITabItem[] = [\r\n  {\r\n    icon: \"&#xe652;\",\r\n    type: \"element\",\r\n  },\r\n  {\r\n    icon: \"&#xe634;\",\r\n    type: \"widget\",\r\n  },\r\n  {\r\n    icon: \"&#xe652;\",\r\n    type: \"page\",\r\n  },\r\n];\r\n\r\nexport const ConfigLayoutLeftAside: FC<IConfigLayoutLeftAside> = ({\r\n  render,\r\n  navs,\r\n}) => {\r\n  const [current, setCurrent] = useState<PageType | \"\">(\"element\");\r\n  const [tabs, setTabs] = useState<ITabItem[]>([]);\r\n\r\n  useEffect(() => {\r\n    setTabs(() => {\r\n      return ALLTABS.filter((item) => navs.includes(item.type));\r\n    });\r\n    setCurrent(navs[0]);\r\n  }, [navs, setTabs, setCurrent]);\r\n  return (\r\n    <div className=\"cms-config-layout__leftAside\">\r\n      <ul className=\"cms-config-layout__leftAside--tabs\">\r\n        {tabs.map((item) => (\r\n          <li\r\n            className={`cms-config-layout__leftAside--tabItem ${\r\n              current === item.type ? \"is-active\" : \"\"\r\n            }`}\r\n            onClick={() => setCurrent(item.type)}\r\n            key={item.type}\r\n          >\r\n            <Tooltip placement=\"left\" title={PAGETYPENAME[item.type]}>\r\n              <i\r\n                className=\"cms-icon\"\r\n                dangerouslySetInnerHTML={{ __html: item.icon }}\r\n              ></i>\r\n            </Tooltip>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <div\r\n        className=\"cms-config-layout__leftAside--tabContent\"\r\n        style={{\r\n          borderRight: current ? \"1px solid var(--cms-divider-color)\" : \"none\",\r\n        }}\r\n      >\r\n        <Box\r\n          title={current ? PAGETYPENAME[current] : \"\"}\r\n          onClose={() => setCurrent(\"\")}\r\n        >\r\n          {render(current)}\r\n        </Box>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { FC, ReactNode } from \"react\";\r\nimport { dragStore } from \"../drag\";\r\nimport \"./index.scss\";\r\n\r\ninterface IDragItem {\r\n  data: IAnyObject;\r\n  title: string;\r\n  children: ReactNode;\r\n  /** 拖拽分组标识 */\r\n  groupName?: string;\r\n}\r\n\r\nconst DragItem: FC<IDragItem> = ({\r\n  title,\r\n  children,\r\n  data,\r\n  groupName = \"DrapDrop\",\r\n}) => {\r\n  const onDragStart = (e: React.DragEvent<HTMLDivElement>) => {\r\n    dragStore.set(groupName, data);\r\n  };\r\n  const onDragEnd = (e: React.DragEvent<HTMLDivElement>) => {\r\n    dragStore.remove(groupName);\r\n  };\r\n  return (\r\n    <div\r\n      className=\"cms-drag__item\"\r\n      draggable\r\n      onDragStart={onDragStart}\r\n      onDragEnd={onDragEnd}\r\n    >\r\n      <div className=\"cms-drag__item--body\">{children}</div>\r\n      <div className=\"cms-drag__item--footer\">{title}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DragItem;\r\n","import React, { FC, useEffect, useState } from \"react\";\r\nimport { ELEMETSTYPE } from \"@src/core/enums/access.enums\";\r\nimport { elements } from \"@src/core/hook\";\r\nimport { Empty, Image } from \"antd\";\r\nimport DragItem from \"@src/compoents/dragdrop/dragItem\";\r\nimport \"./index.scss\";\r\ninterface IConfigLayoutLeftAsideElements {}\r\n\r\nconst ALLELEMENTS: elementsType[] = [\r\n  \"text\",\r\n  \"image\",\r\n  \"table\",\r\n  \"line\",\r\n  \"bar\",\r\n  \"pie\",\r\n];\r\n\r\nexport const ConfigLayoutLeftAsideElements: FC<\r\n  IConfigLayoutLeftAsideElements\r\n> = () => {\r\n  const [current, setCurrent] = useState<elementsType>(\"text\");\r\n  const { getElements, elementsList, elementsLoading } = elements();\r\n  useEffect(() => {\r\n    getElements();\r\n  }, [getElements]);\r\n  return (\r\n    <div className=\"cms-config-layout__elements\">\r\n      <ul className=\"cms-config-layout__elements--left\">\r\n        {ALLELEMENTS.map((item) => (\r\n          <div\r\n            key={item}\r\n            className={current === item ? \"is-active\" : \"\"}\r\n            onClick={() => setCurrent(item)}\r\n          >\r\n            {ELEMETSTYPE[item]}\r\n          </div>\r\n        ))}\r\n      </ul>\r\n      <div className=\"cms-config-layout__elements--right\">\r\n        {elementsList\r\n          .filter((item) => item.type === current)\r\n          ?.map((item) => (\r\n            <DragItem\r\n              key={item.code}\r\n              title={item.name}\r\n              data={item}\r\n              groupName=\"elements\"\r\n            >\r\n              <Image\r\n                width={174}\r\n                height={86}\r\n                src={`./elements/${item.code}.png`}\r\n                preview={false}\r\n              />\r\n            </DragItem>\r\n          ))}\r\n        {!elementsLoading &&\r\n          !elementsList.filter((item) => item.type === current)?.length && (\r\n            <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n          )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { FC, ReactNode, useEffect, useState } from \"react\";\r\nimport { PAGETYPENAME } from \"@src/core/enums/access.enums\";\r\nimport { Tooltip } from \"antd\";\r\nimport Box from \"../box\";\r\nimport \"./index.scss\";\r\ninterface IConfigLayoutRightAside {\r\n  render: (data: PageType | \"\") => ReactNode;\r\n  navs: PageType[];\r\n}\r\n\r\ninterface ITabItem {\r\n  icon: string;\r\n  type: PageType;\r\n}\r\n\r\nconst ALLTABS: ITabItem[] = [\r\n  {\r\n    icon: \"&#xe63c;\",\r\n    type: \"layer\",\r\n  },\r\n  {\r\n    icon: \"&#xe652;\",\r\n    type: \"element\",\r\n  },\r\n  {\r\n    icon: \"&#xe634;\",\r\n    type: \"widget\",\r\n  },\r\n  {\r\n    icon: \"&#xe62e;\",\r\n    type: \"data\",\r\n  },\r\n  {\r\n    icon: \"&#xe652;\",\r\n    type: \"page\",\r\n  },\r\n  {\r\n    icon: \"&#xe61c;\",\r\n    type: \"linkage\",\r\n  },\r\n];\r\n\r\nexport const ConfigLayoutRightAside: FC<IConfigLayoutRightAside> = ({\r\n  render,\r\n  navs,\r\n}) => {\r\n  const [current, setCurrent] = useState<PageType | \"\">(\"element\");\r\n  const [tabs, setTabs] = useState<ITabItem[]>([]);\r\n\r\n  useEffect(() => {\r\n    setTabs(() => {\r\n      return ALLTABS.filter((item) => navs.includes(item.type));\r\n    });\r\n    setCurrent(navs[0]);\r\n  }, [navs, setTabs, setCurrent]);\r\n  return (\r\n    <div className=\"cms-config-layout__rightAside\">\r\n      <div\r\n        className=\"cms-config-layout__rightAside--tabContent\"\r\n        style={{\r\n          borderLeft: current ? \"1px solid var(--cms-divider-color)\" : \"none\",\r\n        }}\r\n      >\r\n        <Box\r\n          title={`${current ? PAGETYPENAME[current] + \"配置\" : \"\"}`}\r\n          onClose={() => setCurrent(\"\")}\r\n        >\r\n          {render(current)}\r\n        </Box>\r\n      </div>\r\n      <ul className=\"cms-config-layout__rightAside--tabs\">\r\n        {tabs.map((item) => (\r\n          <li\r\n            className={`cms-config-layout__rightAside--tabItem ${\r\n              current === item.type ? \"is-active\" : \"\"\r\n            }`}\r\n            onClick={() => setCurrent(item.type)}\r\n            key={item.type}\r\n          >\r\n            <Tooltip placement=\"left\" title={`${PAGETYPENAME[item.type]}配置`}>\r\n              <i\r\n                className=\"cms-icon\"\r\n                dangerouslySetInnerHTML={{ __html: item.icon }}\r\n              ></i>\r\n            </Tooltip>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n","import { FolderOpenOutlined, FolderOutlined } from \"@ant-design/icons\";\r\nimport { IWidget } from \"@src/service\";\r\nimport React, { FC } from \"react\";\r\nimport \"./index.scss\";\r\n\r\ninterface IConfigLayoutRightAsideLayer {\r\n  datas: IWidget[];\r\n  widgetId?: string;\r\n  elementId?: string;\r\n  onSelected: (widgetId: string, elementId?: string) => void;\r\n}\r\n\r\nexport const ConfigLayoutRightAsideLayer: FC<IConfigLayoutRightAsideLayer> = ({\r\n  datas,\r\n  widgetId,\r\n  elementId,\r\n  onSelected,\r\n}) => {\r\n  return (\r\n    <div className=\"cms-config-layout__layer\">\r\n      {datas.map((widget, index) => (\r\n        <div\r\n          key={widget.widgetId || index}\r\n          className=\"cms-config-layout__layer--item\"\r\n        >\r\n          <div\r\n            className={`name ${\r\n              widgetId === widget.widgetId ? \"is-active\" : \"\"\r\n            }`}\r\n            onClick={() => onSelected(widget.widgetId)}\r\n          >\r\n            <FolderOpenOutlined /> {widget.name}\r\n          </div>\r\n          <div className=\"content\">\r\n            {widget.elements.map((element) => (\r\n              <div\r\n                key={element.elementId}\r\n                className={`${\r\n                  elementId === element.elementId ? \"is-active\" : \"\"\r\n                }`}\r\n                onClick={() => onSelected(widget.widgetId, element.elementId)}\r\n              >\r\n                <FolderOutlined /> {element.name}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React, { FC, useCallback, useEffect, useRef } from \"react\";\r\nimport JSONEditor, { JSONEditorOptions } from \"jsoneditor\";\r\nimport \"jsoneditor/dist/jsoneditor.css\";\r\nimport \"./index.scss\";\r\n\r\ninterface IJsonEditorProps {\r\n  value: IAnyObject;\r\n  onChange?: (josn?: any) => void;\r\n  options?: JSONEditorOptions;\r\n}\r\n\r\nconst JsonEditor: FC<IJsonEditorProps> = ({\r\n  value,\r\n  onChange,\r\n  options = {},\r\n}) => {\r\n  const editorRef = useRef<any>(null);\r\n  const editorObj = useRef<any>(null);\r\n\r\n  // 初始化JOSN编辑器\r\n  const initEditor = useCallback(() => {\r\n    if (!editorObj.current) {\r\n      const totalOptions: JSONEditorOptions = {\r\n        mode: \"code\",\r\n        onChange: () => {\r\n          onChange && onChange(editorObj.current?.get());\r\n        },\r\n        ...options,\r\n      };\r\n      editorObj.current = new JSONEditor(\r\n        editorRef.current,\r\n        totalOptions,\r\n        value\r\n      );\r\n    }\r\n  }, [onChange, options, value]);\r\n\r\n  useEffect(() => {\r\n    initEditor();\r\n  }, [initEditor]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      // 销毁\r\n      if (editorObj.current) {\r\n        editorObj.current.destroy();\r\n      }\r\n    };\r\n  }, [editorObj]);\r\n\r\n  return <div ref={editorRef} className=\"cms-json-editor\"></div>;\r\n};\r\n\r\nexport default JsonEditor;\r\n","import React, { FC } from \"react\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  InputNumber,\r\n  Select,\r\n  Slider,\r\n  Switch,\r\n  ColorPicker,\r\n  FormInstance,\r\n} from \"antd\";\r\n// JSON编辑器\r\nimport JsonEditor from \"@src/compoents/jsonEditor\";\r\nimport TextArea from \"antd/es/input/TextArea\";\r\n\r\nconst { Option } = Select;\r\n\r\ninterface IBaseForm {\r\n  item: IAnyObject;\r\n  form: FormInstance<any>;\r\n  callback: Function;\r\n  formSubmit?: boolean;\r\n}\r\n\r\nconst BaseForm: FC<IBaseForm> = ({ item, form, callback, formSubmit }) => {\r\n  return (\r\n    <>\r\n      {item.componentName === \"Input\" && (\r\n        <Form.Item\r\n          label={item.label}\r\n          name={item.name}\r\n          tooltip={item.tooltip}\r\n          rules={[{ required: item.required }]}\r\n          validateTrigger=\"onBlur\"\r\n        >\r\n          <Input\r\n            size=\"small\"\r\n            allowClear\r\n            disabled={item.disabled}\r\n            placeholder={item.placeholder}\r\n            onBlur={(e) => !formSubmit && callback(item.name, e.target.value)}\r\n          />\r\n        </Form.Item>\r\n      )}\r\n      {item.componentName === \"InputNumber\" && (\r\n        <Form.Item\r\n          label={item.label}\r\n          name={item.name}\r\n          tooltip={item.tooltip}\r\n          validateTrigger=\"onBlur\"\r\n          rules={[{ required: item.required }]}\r\n        >\r\n          <InputNumber\r\n            size=\"small\"\r\n            disabled={item.disabled}\r\n            min={item.min}\r\n            max={item.max}\r\n            style={{ width: \"100%\" }}\r\n            addonAfter={item.addonAfter || \"\"}\r\n            placeholder={item.placeholder}\r\n            onBlur={(e) => !formSubmit && callback(item.name, e.target.value)}\r\n          />\r\n        </Form.Item>\r\n      )}\r\n      {item.componentName === \"TextArea\" && (\r\n        <Form.Item\r\n          label={item.label}\r\n          name={item.name}\r\n          tooltip={item.tooltip}\r\n          rules={[{ required: item.required }]}\r\n          validateTrigger=\"onBlur\"\r\n        >\r\n          <TextArea\r\n            size=\"small\"\r\n            allowClear\r\n            disabled={item.disabled}\r\n            rows={8}\r\n            placeholder={item.placeholder}\r\n            onBlur={(e) => !formSubmit && callback(item.name, e.target.value)}\r\n          />\r\n        </Form.Item>\r\n      )}\r\n      {item.componentName === \"Switch\" && (\r\n        <Form.Item\r\n          label={item.label}\r\n          name={item.name}\r\n          tooltip={item.tooltip}\r\n          valuePropName=\"checked\"\r\n          rules={[{ required: item.required }]}\r\n        >\r\n          <Switch\r\n            size=\"small\"\r\n            disabled={item.disabled}\r\n            onChange={(e) => !formSubmit && callback(item.name, e)}\r\n          />\r\n        </Form.Item>\r\n      )}\r\n      {item.componentName === \"Slider\" && (\r\n        <Form.Item\r\n          label={item.label}\r\n          name={item.name}\r\n          tooltip={item.tooltip}\r\n          rules={[{ required: item.required }]}\r\n        >\r\n          <Slider\r\n            min={item.min || 0}\r\n            max={item.max || 100}\r\n            disabled={item.disabled}\r\n            step={item.step || 1}\r\n            onChangeComplete={(e) => !formSubmit && callback(item.name, e)}\r\n          />\r\n        </Form.Item>\r\n      )}\r\n      {item.componentName === \"Select\" && (\r\n        <Form.Item\r\n          label={item.label}\r\n          name={item.name}\r\n          tooltip={item.tooltip}\r\n          rules={[{ required: item.required }]}\r\n        >\r\n          <Select\r\n            size=\"small\"\r\n            allowClear\r\n            disabled={item.disabled}\r\n            placeholder={item.placeholder}\r\n            onChange={(e) => !formSubmit && callback(item.name, e)}\r\n          >\r\n            {item.options.map((subItem: any) => (\r\n              <Option key={subItem.code} value={subItem.code}>\r\n                <div\r\n                  className={`${\r\n                    item.name === \"iconStyleSelect\" ? \"cms-icon\" : \"\"\r\n                  }`}\r\n                  dangerouslySetInnerHTML={{ __html: subItem.name }}\r\n                ></div>\r\n              </Option>\r\n            ))}\r\n          </Select>\r\n        </Form.Item>\r\n      )}\r\n      {item.componentName === \"SketchPicker\" && (\r\n        <Form.Item\r\n          label={item.label}\r\n          name={item.name}\r\n          rules={[{ required: item.required }]}\r\n        >\r\n          <ColorPicker\r\n            size=\"small\"\r\n            //allowClear\r\n            format=\"hex\"\r\n            showText\r\n            disabled={item.disabled}\r\n            onChangeComplete={(e) =>\r\n              !formSubmit\r\n                ? callback(item.name, `#${e.toHex()}`)\r\n                : form.setFieldValue(item.name, `#${e.toHex()}`)\r\n            }\r\n          />\r\n        </Form.Item>\r\n      )}\r\n      {item.componentName === \"JsonEdit\" && (\r\n        <Form.Item\r\n          name={item.name}\r\n          tooltip={item.tooltip}\r\n          rules={[{ required: item.required }]}\r\n        >\r\n          <Form.Item shouldUpdate noStyle>\r\n            <div style={{ paddingBottom: 10 }}>{item.label}:</div>\r\n            <JsonEditor\r\n              value={form.getFieldValue(item.name)}\r\n              onChange={(e) =>\r\n                !formSubmit\r\n                  ? callback(item.name, e)\r\n                  : form.setFieldValue(item.name, e)\r\n              }\r\n            />\r\n          </Form.Item>\r\n        </Form.Item>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BaseForm;\r\n","import { Collapse, Form, FormInstance } from \"antd\";\r\nimport React, { FC } from \"react\";\r\nimport BaseForm from \"../baseForm\";\r\n\r\nconst { Panel } = Collapse;\r\n\r\ninterface IDynamicForm {\r\n  datas: IAnyObject;\r\n  form: FormInstance<any>;\r\n  callback: Function;\r\n  formSubmit?: boolean;\r\n}\r\n\r\n// 判断数据是Array 或者 object\r\nconst judgeType = (data: any, type: string) => {\r\n  return Object.prototype.toString.call(data) === type;\r\n};\r\n\r\nconst DynamicForm: FC<IDynamicForm> = ({\r\n  datas,\r\n  form,\r\n  callback,\r\n  formSubmit,\r\n}) => {\r\n  return datas.map((item: any, index: number) => {\r\n    if (judgeType(item, \"[object Object]\")) {\r\n      const relationFields =\r\n        item.relationFields !== undefined ? item.relationFields.split(\",\") : [];\r\n      return (\r\n        <div key={index}>\r\n          {!relationFields.length ? (\r\n            <BaseForm\r\n              item={item}\r\n              form={form}\r\n              callback={callback}\r\n              formSubmit={formSubmit}\r\n            />\r\n          ) : (\r\n            <Form.Item noStyle shouldUpdate>\r\n              {({ getFieldValue }) => {\r\n                if (\r\n                  relationFields.every((subItem: string) =>\r\n                    item.relationValues.includes(String(getFieldValue(subItem)))\r\n                  )\r\n                ) {\r\n                  return (\r\n                    <BaseForm\r\n                      item={item}\r\n                      form={form}\r\n                      callback={callback}\r\n                      formSubmit={formSubmit}\r\n                    />\r\n                  );\r\n                }\r\n              }}\r\n            </Form.Item>\r\n          )}\r\n        </div>\r\n      );\r\n    }\r\n    if (judgeType(item, \"[object Array]\")) {\r\n      return (\r\n        <div key={index}>\r\n          {item.map((subItem: any, subIndex: number) => {\r\n            const relationFields =\r\n              subItem.relationFields !== undefined\r\n                ? subItem.relationFields.split(\",\")\r\n                : [];\r\n            return (\r\n              <Collapse\r\n                key={subIndex}\r\n                size=\"small\"\r\n                defaultActiveKey={[\"0-0\"]}\r\n                bordered={false}\r\n              >\r\n                {subItem.relationFields === undefined ? (\r\n                  <Panel header={subItem.name} key={`${index}-${subIndex}`}>\r\n                    <DynamicForm\r\n                      formSubmit={formSubmit}\r\n                      datas={subItem.list}\r\n                      form={form}\r\n                      callback={callback}\r\n                    />\r\n                  </Panel>\r\n                ) : (\r\n                  <Form.Item noStyle shouldUpdate>\r\n                    {({ getFieldValue }) => {\r\n                      if (\r\n                        relationFields.every((subbItem: string) =>\r\n                          subItem.relationValues.includes(\r\n                            String(getFieldValue(subbItem))\r\n                          )\r\n                        )\r\n                      ) {\r\n                        return (\r\n                          <Collapse\r\n                            key={subIndex}\r\n                            size=\"small\"\r\n                            bordered={false}\r\n                          >\r\n                            <Panel\r\n                              header={subItem.name}\r\n                              key={`${index}-${subIndex}`}\r\n                            >\r\n                              <DynamicForm\r\n                                formSubmit={formSubmit}\r\n                                datas={subItem.list}\r\n                                form={form}\r\n                                callback={callback}\r\n                              />\r\n                            </Panel>\r\n                          </Collapse>\r\n                        );\r\n                      }\r\n                    }}\r\n                  </Form.Item>\r\n                )}\r\n              </Collapse>\r\n            );\r\n          })}\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  });\r\n};\r\n\r\nexport default DynamicForm;\r\n","import React, { FC } from \"react\";\r\nimport { Form } from \"antd\";\r\nimport DynamicForm from \"../dynamicForm\";\r\nimport { widgetConfig } from \"@src/core/config/base\";\r\n\r\ninterface IConfigLayoutRightAsideWidget {\r\n  configureValue: IAnyObject;\r\n  onFinish: (data: IAnyObject) => void;\r\n}\r\n\r\nexport const ConfigLayoutRightAsideWidget: FC<\r\n  IConfigLayoutRightAsideWidget\r\n> = ({ configureValue, onFinish }) => {\r\n  const [form] = Form.useForm();\r\n\r\n  return (\r\n    <div className=\"cms-config-layout__widget\">\r\n      <Form\r\n        labelCol={{ flex: \"110px\" }}\r\n        labelAlign=\"left\"\r\n        form={form}\r\n        initialValues={configureValue}\r\n      >\r\n        <DynamicForm\r\n          datas={widgetConfig.configure || []}\r\n          form={form}\r\n          callback={(field: string, value: any) => {\r\n            const val =\r\n              value && !isNaN(value) && typeof value !== \"boolean\"\r\n                ? Number(value)\r\n                : value;\r\n            if (configureValue[field] !== val) {\r\n              onFinish({\r\n                [field]: val,\r\n              });\r\n            }\r\n          }}\r\n        />\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n","import { boxConfig, fontConfig } from \"../../base\";\r\n\r\nexport const baseText = {\r\n  // 配置名称\r\n  code: \"baseText\",\r\n  // 基础配置项\r\n  configure: [\r\n    [\r\n      {\r\n        name: \"基础设置\",\r\n        list: [\r\n          ...fontConfig.configure,\r\n          [\r\n            {\r\n              name: \"文字阴影\",\r\n              list: [\r\n                {\r\n                  componentName: \"InputNumber\",\r\n                  label: \"X轴偏移\",\r\n                  name: \"styleTextShadowX\",\r\n                  required: false,\r\n                  placeholder: \"请输入X轴偏移\",\r\n                  addonAfter: \"px\",\r\n                },\r\n                {\r\n                  componentName: \"InputNumber\",\r\n                  label: \"Y轴偏移\",\r\n                  name: \"styleTextShadowY\",\r\n                  required: false,\r\n                  placeholder: \"请输入Y轴偏移\",\r\n                  addonAfter: \"px\",\r\n                },\r\n                {\r\n                  componentName: \"InputNumber\",\r\n                  label: \"模糊值\",\r\n                  name: \"styleTextShadowF\",\r\n                  required: false,\r\n                  placeholder: \"请输入模糊值\",\r\n                  addonAfter: \"px\",\r\n                },\r\n                {\r\n                  componentName: \"SketchPicker\",\r\n                  label: \"颜色\",\r\n                  name: \"styleTextShadowC\",\r\n                  required: false,\r\n                  placeholder: \"请选择颜色\",\r\n                },\r\n              ],\r\n            },\r\n            ...boxConfig.configure,\r\n          ],\r\n        ],\r\n      },\r\n      {\r\n        name: \"icon图标\",\r\n        list: [\r\n          {\r\n            componentName: \"Select\",\r\n            label: \"图标\",\r\n            name: \"iconStyleSelect\",\r\n            required: false,\r\n            placeholder: \"\",\r\n            options: [\r\n              { code: \"&#xe621\", name: \"&#xe621\" },\r\n              { code: \"&#xe62e\", name: \"&#xe62e\" },\r\n              { code: \"&#xeb04\", name: \"&#xeb04\" },\r\n              { code: \"&#xec89\", name: \"&#xec89\" },\r\n              { code: \"&#xe668\", name: \"&#xe668\" },\r\n              { code: \"&#xe620\", name: \"&#xe620\" },\r\n              { code: \"&#xe652\", name: \"&#xe652\" },\r\n              { code: \"&#xe63d\", name: \"&#xe63d\" },\r\n              { code: \"&#xe65a\", name: \"&#xe65a\" },\r\n              { code: \"&#xe7de\", name: \"&#xe7de\" },\r\n              { code: \"&#xe7b0\", name: \"&#xe7b0\" },\r\n              { code: \"&#xe7b1\", name: \"&#xe7b1\" },\r\n            ],\r\n          },\r\n          {\r\n            componentName: \"InputNumber\",\r\n            label: \"字体大小\",\r\n            name: \"iconStyleFontSize\",\r\n            required: false,\r\n            min: 12,\r\n            placeholder: \"\",\r\n            addonAfter: \"px\",\r\n          },\r\n          {\r\n            componentName: \"SketchPicker\",\r\n            label: \"字体颜色\",\r\n            name: \"iconStyleColor\",\r\n            required: false,\r\n            placeholder: \"请选择字体颜色\",\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  ],\r\n};\r\n","import { boxConfig } from \"../../base\";\r\n\r\nexport const messageText = {\r\n  // 配置名称\r\n  code: \"messageText\",\r\n  // 基础配置项\r\n  configure: [\r\n    [\r\n      {\r\n        name: \"基础设置\",\r\n        list: [\r\n          {\r\n            componentName: \"SketchPicker\",\r\n            label: \"背景颜色\",\r\n            name: \"styleBackgroundColor\",\r\n            required: false,\r\n            placeholder: \"\",\r\n          },\r\n          {\r\n            componentName: \"InputNumber\",\r\n            label: \"字体大小\",\r\n            name: \"styleFontSize\",\r\n            required: false,\r\n            min: 12,\r\n            placeholder: \"\",\r\n            addonAfter: \"px\",\r\n          },\r\n          {\r\n            componentName: \"InputNumber\",\r\n            label: \"行高\",\r\n            name: \"styleLineHeight\",\r\n            required: false,\r\n            placeholder: \"\",\r\n            addonAfter: \"px\",\r\n          },\r\n          {\r\n            componentName: \"Select\",\r\n            label: \"字体样式\",\r\n            name: \"styleFontFamily\",\r\n            required: false,\r\n            placeholder: \"\",\r\n            options: [\r\n              { code: \"SimSun\", name: \"宋体\" },\r\n              { code: \"KaiTi\", name: \"楷体\" },\r\n              { code: \"Microsoft YaHei\", name: \"微软雅黑\" },\r\n              { code: \"STHeiti\", name: \"华文黑体\" },\r\n              { code: \"arial\", name: \"无衬线体\" },\r\n              { code: \"serif\", name: \"有衬线体\" },\r\n              { code: \"cursive\", name: \"草书\" },\r\n              { code: \"monospace\", name: \"等宽字体\" },\r\n              { code: \"courier\", name: \"打印字体\" },\r\n            ],\r\n          },\r\n          {\r\n            componentName: \"Select\",\r\n            label: \"文字粗细\",\r\n            name: \"styleFontWeight\",\r\n            required: false,\r\n            placeholder: \"\",\r\n            options: [\r\n              { code: \"normal\", name: \"正常\" },\r\n              { code: \"bold\", name: \"粗体\" },\r\n              { code: \"bolder\", name: \"特粗体\" },\r\n              { code: \"lighter\", name: \"细体\" },\r\n            ],\r\n          },\r\n          [...boxConfig.configure],\r\n        ],\r\n      },\r\n      {\r\n        name: \"icon图标\",\r\n        list: [\r\n          {\r\n            componentName: \"InputNumber\",\r\n            label: \"字体大小\",\r\n            name: \"iconStyleFontSize\",\r\n            required: false,\r\n            min: 12,\r\n            placeholder: \"\",\r\n            addonAfter: \"px\",\r\n          },\r\n          {\r\n            componentName: \"SketchPicker\",\r\n            label: \"字体颜色\",\r\n            name: \"iconStyleColor\",\r\n            required: false,\r\n            placeholder: \"请选择字体颜色\",\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  ],\r\n};\r\n","import { fontConfig } from \"../../base\";\r\n\r\nexport const dateText = {\r\n  // 配置名称\r\n  code: \"dateText\",\r\n  // 基础配置项\r\n  configure: [\r\n    {\r\n      componentName: \"Input\",\r\n      label: \"自定义格式\",\r\n      name: \"fmtDate\",\r\n      required: false,\r\n      placeholder: \"\",\r\n    },\r\n    ...fontConfig.configure,\r\n    [\r\n      {\r\n        name: \"文字阴影\",\r\n        list: [\r\n          {\r\n            componentName: \"InputNumber\",\r\n            label: \"X轴偏移\",\r\n            name: \"styleTextShadowX\",\r\n            required: false,\r\n            placeholder: \"请输入X轴偏移\",\r\n            addonAfter: \"px\",\r\n          },\r\n          {\r\n            componentName: \"InputNumber\",\r\n            label: \"Y轴偏移\",\r\n            name: \"styleTextShadowY\",\r\n            required: false,\r\n            placeholder: \"请输入Y轴偏移\",\r\n            addonAfter: \"px\",\r\n          },\r\n          {\r\n            componentName: \"InputNumber\",\r\n            label: \"模糊值\",\r\n            name: \"styleTextShadowF\",\r\n            required: false,\r\n            placeholder: \"请输入模糊值\",\r\n            addonAfter: \"px\",\r\n          },\r\n          {\r\n            componentName: \"SketchPicker\",\r\n            label: \"颜色\",\r\n            name: \"styleTextShadowC\",\r\n            required: false,\r\n            placeholder: \"请选择颜色\",\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  ],\r\n};\r\n","import { baseText, countUp, messageText, dateText } from \"./text\";\r\nimport { line } from \"./line\";\r\nimport { bar } from \"./bar\";\r\nimport { pie } from \"./pie\";\r\nimport { baseImage, baseBanner } from \"./image\";\r\nimport { table } from \"./table\";\r\n\r\nconst elementsConfig: any = {\r\n  baseText,\r\n  line,\r\n  bar,\r\n  countUp,\r\n  pie,\r\n  messageText,\r\n  baseImage,\r\n  baseBanner,\r\n  dateText,\r\n  table,\r\n};\r\n\r\nexport default elementsConfig;\r\n","import { echartsConfig, animateConfig } from \"../../base\";\r\n\r\nexport const line = {\r\n  // 配置名称\r\n  code: \"line\",\r\n  configure: [\r\n    [\r\n      {\r\n        name: \"基础设置\",\r\n        list: [\r\n          ...echartsConfig.line,\r\n          ...echartsConfig.seriesStack,\r\n          echartsConfig.seriesLabel,\r\n          echartsConfig.symbol,\r\n        ],\r\n      },\r\n      {\r\n        name: \"标题\",\r\n        list: echartsConfig.title,\r\n      },\r\n      {\r\n        name: \"图例\",\r\n        list: echartsConfig.legend,\r\n      },\r\n      {\r\n        name: \"网格\",\r\n        list: echartsConfig.grid,\r\n      },\r\n      {\r\n        name: \"X轴\",\r\n        list: echartsConfig.xAxis,\r\n      },\r\n      {\r\n        name: \"y轴\",\r\n        list: echartsConfig.yAxis,\r\n      },\r\n      {\r\n        name: \"自定义颜色\",\r\n        list: echartsConfig.echartColor,\r\n      },\r\n      ...animateConfig.configure,\r\n    ],\r\n  ],\r\n};\r\n","import { echartsConfig, animateConfig } from \"../../base\";\r\n\r\nexport const bar = {\r\n  // 配置名称\r\n  code: \"bar\",\r\n  configure: [\r\n    [\r\n      {\r\n        name: \"柱状设置\",\r\n        list: [\r\n          ...echartsConfig.seriesStack,\r\n          ...echartsConfig.bar,\r\n          echartsConfig.seriesLabel,\r\n        ],\r\n      },\r\n      {\r\n        name: \"标题\",\r\n        list: echartsConfig.title,\r\n      },\r\n      {\r\n        name: \"图例\",\r\n        list: echartsConfig.legend,\r\n      },\r\n      {\r\n        name: \"网格\",\r\n        list: echartsConfig.grid,\r\n      },\r\n      {\r\n        name: \"X轴\",\r\n        list: echartsConfig.xAxis,\r\n      },\r\n      {\r\n        name: \"y轴\",\r\n        list: echartsConfig.yAxis,\r\n      },\r\n      {\r\n        name: \"自定义颜色\",\r\n        list: echartsConfig.echartColor,\r\n      },\r\n      ...animateConfig.configure,\r\n    ],\r\n  ],\r\n};\r\n","export const countUp = {\r\n  // 配置名称\r\n  code: \"countUp\",\r\n  // 基础配置项\r\n  configure: [\r\n    [\r\n      {\r\n        name: \"基础设置\",\r\n        list: [\r\n          {\r\n            componentName: \"Select\",\r\n            label: \"水平对齐方式\",\r\n            name: \"styleJustifyContent\",\r\n            required: false,\r\n            placeholder: \"\",\r\n            options: [\r\n              { code: \"flex-start\", name: \"左对齐\" },\r\n              { code: \"flex-end\", name: \"右对齐\" },\r\n              { code: \"center\", name: \"居中\" },\r\n              { code: \"space-between\", name: \"两端对齐\" },\r\n              { code: \"space-around\", name: \"间隔相等\" },\r\n            ],\r\n          },\r\n          {\r\n            componentName: \"Select\",\r\n            label: \"垂直对齐方式\",\r\n            name: \"styleAlignItems\",\r\n            required: false,\r\n            placeholder: \"\",\r\n            options: [\r\n              { code: \"flex-start\", name: \"上对齐\" },\r\n              { code: \"flex-end\", name: \"下对齐\" },\r\n              { code: \"center\", name: \"居中\" },\r\n            ],\r\n          },\r\n          {\r\n            componentName: \"InputNumber\",\r\n            label: \"行高\",\r\n            name: \"styleLineHeight\",\r\n            required: false,\r\n            placeholder: \"\",\r\n            addonAfter: \"px\",\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        name: \"滚动区域\",\r\n        list: [\r\n          {\r\n            componentName: \"InputNumber\",\r\n            label: \"字体大小\",\r\n            name: \"countUpStyleFontSize\",\r\n            required: false,\r\n            min: 12,\r\n            placeholder: \"\",\r\n            addonAfter: \"px\",\r\n          },\r\n          {\r\n            componentName: \"SketchPicker\",\r\n            label: \"字体颜色\",\r\n            name: \"countUpStyleColor\",\r\n            required: false,\r\n            placeholder: \"请选择字体颜色\",\r\n          },\r\n          {\r\n            componentName: \"Select\",\r\n            label: \"字体样式\",\r\n            name: \"countUpStyleFontFamily\",\r\n            required: false,\r\n            placeholder: \"\",\r\n            options: [\r\n              { code: \"SimSun\", name: \"宋体\" },\r\n              { code: \"KaiTi\", name: \"楷体\" },\r\n              { code: \"Microsoft YaHei\", name: \"微软雅黑\" },\r\n              { code: \"STHeiti\", name: \"华文黑体\" },\r\n              { code: \"arial\", name: \"无衬线体\" },\r\n              { code: \"serif\", name: \"有衬线体\" },\r\n              { code: \"cursive\", name: \"草书\" },\r\n              { code: \"monospace\", name: \"等宽字体\" },\r\n              { code: \"courier\", name: \"打印字体\" },\r\n            ],\r\n          },\r\n          {\r\n            componentName: \"Select\",\r\n            label: \"文字粗细\",\r\n            name: \"countUpStyleFontWeight\",\r\n            required: false,\r\n            placeholder: \"\",\r\n            options: [\r\n              { code: \"normal\", name: \"正常\" },\r\n              { code: \"bold\", name: \"粗体\" },\r\n              { code: \"bolder\", name: \"特粗体\" },\r\n              { code: \"lighter\", name: \"细体\" },\r\n            ],\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        name: \"前置标签\",\r\n        list: [\r\n          {\r\n            componentName: \"Input\",\r\n            label: \"前置文本\",\r\n            name: \"addonBefore\",\r\n            required: false,\r\n            placeholder: \"请输入前置文本\",\r\n          },\r\n          {\r\n            componentName: \"InputNumber\",\r\n            label: \"字体大小\",\r\n            name: \"addonBeforeStyleFontSize\",\r\n            required: false,\r\n            min: 12,\r\n            placeholder: \"\",\r\n            addonAfter: \"px\",\r\n          },\r\n          {\r\n            componentName: \"SketchPicker\",\r\n            label: \"字体颜色\",\r\n            name: \"addonBeforeStyleColor\",\r\n            required: false,\r\n            placeholder: \"请选择字体颜色\",\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        name: \"后置标签\",\r\n        list: [\r\n          {\r\n            componentName: \"Input\",\r\n            label: \"后置文本\",\r\n            name: \"addonAfter\",\r\n            required: false,\r\n            placeholder: \"请输入后置文本\",\r\n          },\r\n          {\r\n            componentName: \"InputNumber\",\r\n            label: \"字体大小\",\r\n            name: \"addonAfterStyleFontSize\",\r\n            required: false,\r\n            min: 12,\r\n            placeholder: \"\",\r\n            addonAfter: \"px\",\r\n          },\r\n          {\r\n            componentName: \"SketchPicker\",\r\n            label: \"字体颜色\",\r\n            name: \"addonAfterStyleColor\",\r\n            required: false,\r\n            placeholder: \"请选择字体颜色\",\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  ],\r\n};\r\n","import { echartsConfig, animateConfig } from \"../../base\";\r\n\r\nexport const pie = {\r\n  // 配置名称\r\n  code: \"pie\",\r\n  configure: [\r\n    [\r\n      {\r\n        name: \"饼图设置\",\r\n        list: [\r\n          ...echartsConfig.pie,\r\n          echartsConfig.seriesLabel.map((item) => {\r\n            console.log(item, \"item\");\r\n            return {\r\n              ...item,\r\n              list: item.list.map((subItem) => {\r\n                if (subItem.name === \"seriesLabelPosition\") {\r\n                  return {\r\n                    ...subItem,\r\n                    options: [\r\n                      { code: \"outside\", name: \"outside\" },\r\n                      { code: \"inside\", name: \"inside\" },\r\n                      { code: \"center\", name: \"center\" },\r\n                    ],\r\n                  };\r\n                }\r\n                return subItem;\r\n              }),\r\n            };\r\n          }),\r\n          echartsConfig.seriesItemStyle,\r\n          echartsConfig.emphasis,\r\n        ],\r\n      },\r\n      {\r\n        name: \"标题\",\r\n        list: [...echartsConfig.title],\r\n      },\r\n      {\r\n        name: \"图例\",\r\n        list: [...echartsConfig.legend],\r\n      },\r\n      {\r\n        name: \"自定义颜色\",\r\n        list: [...echartsConfig.echartColor],\r\n      },\r\n      ...animateConfig.configure,\r\n    ],\r\n  ],\r\n};\r\n","import { boxConfig } from \"../../base\";\r\n\r\nexport const baseImage = {\r\n  // 配置名称\r\n  code: \"baseImage\",\r\n  // 基础配置项\r\n  configure: [boxConfig.configure],\r\n};\r\n","import { boxConfig, swiperConfig } from \"../../base\";\r\n\r\nexport const baseBanner = {\r\n  // 配置名称\r\n  code: \"baseBanner\",\r\n  // 基础配置项\r\n  configure: [swiperConfig.configure, boxConfig.configure],\r\n};\r\n","export const table = {\r\n  // 配置名称\r\n  code: \"table\",\r\n  // 基础配置项\r\n  configure: [\r\n    [\r\n      {\r\n        name: \"滚动设置\",\r\n        list: [\r\n          {\r\n            componentName: \"Switch\",\r\n            label: \"循环播放\",\r\n            name: \"loop\",\r\n            required: false,\r\n            placeholder: \"\",\r\n          },\r\n          {\r\n            componentName: \"Switch\",\r\n            label: \"自动播放\",\r\n            name: \"autoplay\",\r\n            required: false,\r\n            placeholder: \"\",\r\n          },\r\n          {\r\n            componentName: \"InputNumber\",\r\n            label: \"间距\",\r\n            name: \"spaceBetween\",\r\n            required: false,\r\n            min: 0,\r\n            placeholder: \"请输入间距\",\r\n            addonAfter: \"px\",\r\n          },\r\n          {\r\n            componentName: \"InputNumber\",\r\n            label: \"一屏幻灯片数量\",\r\n            name: \"slidesPerView\",\r\n            required: false,\r\n            min: 1,\r\n            placeholder: \"请输入一屏幻灯片数量\",\r\n            addonAfter: \"个\",\r\n          },\r\n          {\r\n            componentName: \"JsonEdit\",\r\n            label: \"Column数据\",\r\n            name: \"tableColumn\",\r\n            required: false,\r\n            placeholder: \"请输入Column数据\",\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n    [\r\n      {\r\n        name: \"进度条\",\r\n        list: [\r\n          {\r\n            componentName: \"SketchPicker\",\r\n            label: \"前景颜色\",\r\n            name: \"progressForegroundColor\",\r\n            required: false,\r\n            placeholder: \"\",\r\n          },\r\n          {\r\n            componentName: \"SketchPicker\",\r\n            label: \"背景颜色\",\r\n            name: \"progressBackgroundColor\",\r\n            required: false,\r\n            placeholder: \"\",\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        name: \"序号\",\r\n        list: [\r\n          {\r\n            componentName: \"Switch\",\r\n            label: \"使用排名图标\",\r\n            name: \"serialNumberRank\",\r\n            required: false,\r\n            placeholder: \"\",\r\n          },\r\n          {\r\n            componentName: \"InputNumber\",\r\n            label: \"字体大小\",\r\n            name: \"serialNumberFontSize\",\r\n            required: false,\r\n            min: 12,\r\n            placeholder: \"\",\r\n            addonAfter: \"px\",\r\n          },\r\n          {\r\n            componentName: \"SketchPicker\",\r\n            label: \"字体颜色\",\r\n            name: \"serialNumberColor\",\r\n            required: false,\r\n            placeholder: \"请选择字体颜色\",\r\n          },\r\n          {\r\n            componentName: \"SketchPicker\",\r\n            label: \"背景颜色\",\r\n            name: \"serialNumberBackgroundColor\",\r\n            required: false,\r\n            placeholder: \"请选择背景颜色\",\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        name: \"表头\",\r\n        list: [\r\n          {\r\n            componentName: \"Switch\",\r\n            label: \"是否显示\",\r\n            name: \"tableShowHeader\",\r\n            required: false,\r\n            placeholder: \"\",\r\n          },\r\n          {\r\n            componentName: \"SketchPicker\",\r\n            label: \"背景颜色\",\r\n            name: \"tableHeaderBackgroudColor\",\r\n            required: false,\r\n            placeholder: \"请选择背景颜色\",\r\n            relationFields: \"tableShowHeader\",\r\n            relationValues: \"true\",\r\n          },\r\n          {\r\n            componentName: \"SketchPicker\",\r\n            label: \"字体颜色\",\r\n            name: \"tableHeaderColor\",\r\n            required: false,\r\n            placeholder: \"请选择字体颜色\",\r\n            relationFields: \"tableShowHeader\",\r\n            relationValues: \"true\",\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        name: \"表体\",\r\n        list: [\r\n          {\r\n            componentName: \"SketchPicker\",\r\n            label: \"字体颜色\",\r\n            name: \"tableTbodyColor\",\r\n            required: false,\r\n            placeholder: \"请选择字体颜色\",\r\n          },\r\n          [\r\n            {\r\n              name: \"奇数行配置\",\r\n              list: [\r\n                {\r\n                  componentName: \"SketchPicker\",\r\n                  label: \"背景颜色\",\r\n                  name: \"tableTbodyOddBackgroudColor\",\r\n                  required: false,\r\n                  placeholder: \"\",\r\n                },\r\n                [\r\n                  {\r\n                    name: \"盒子阴影\",\r\n                    list: [\r\n                      {\r\n                        componentName: \"Switch\",\r\n                        label: \"内阴影\",\r\n                        name: \"tableTbodyOddBoxInset\",\r\n                        required: false,\r\n                        placeholder: \"\",\r\n                      },\r\n                      {\r\n                        componentName: \"InputNumber\",\r\n                        label: \"X轴偏移\",\r\n                        name: \"tableTbodyOddBoxShadowX\",\r\n                        required: false,\r\n                        placeholder: \"请输入X轴偏移\",\r\n                        addonAfter: \"px\",\r\n                      },\r\n                      {\r\n                        componentName: \"InputNumber\",\r\n                        label: \"Y轴偏移\",\r\n                        name: \"tableTbodyOddBoxShadowY\",\r\n                        required: false,\r\n                        placeholder: \"请输入Y轴偏移\",\r\n                        addonAfter: \"px\",\r\n                      },\r\n                      {\r\n                        componentName: \"InputNumber\",\r\n                        label: \"模糊值\",\r\n                        name: \"tableTbodyOddBoxShadowF\",\r\n                        required: false,\r\n                        placeholder: \"请输入模糊值\",\r\n                        addonAfter: \"px\",\r\n                      },\r\n                      {\r\n                        componentName: \"SketchPicker\",\r\n                        label: \"颜色\",\r\n                        name: \"tableTbodyOddBoxShadowC\",\r\n                        required: false,\r\n                        placeholder: \"请选择颜色\",\r\n                      },\r\n                    ],\r\n                  },\r\n                  {\r\n                    name: \"边框\",\r\n                    list: [\r\n                      {\r\n                        componentName: \"Select\",\r\n                        label: \"边框样式\",\r\n                        name: \"tableTbodyOddBorderStyle\",\r\n                        required: false,\r\n                        placeholder: \"请选择边框样式\",\r\n                        options: [\r\n                          { code: \"none\", name: \"无\" },\r\n                          { code: \"solid\", name: \"直线\" },\r\n                          { code: \"dashed\", name: \"破折线\" },\r\n                          { code: \"dotted\", name: \"点状线\" },\r\n                          { code: \"double\", name: \"双划线\" },\r\n                          { code: \"groove\", name: \"3D凹槽\" },\r\n                          { code: \"ridge\", name: \"3D垄状\" },\r\n                          { code: \"inset\", name: \"3D内嵌\" },\r\n                          { code: \"outset\", name: \"3D外嵌\" },\r\n                        ],\r\n                      },\r\n                      {\r\n                        componentName: \"InputNumber\",\r\n                        label: \"边框尺寸\",\r\n                        name: \"tableTbodyOddBorderWidth\",\r\n                        required: false,\r\n                        placeholder: \"请输入尺寸\",\r\n                        addonAfter: \"px\",\r\n                      },\r\n                      {\r\n                        componentName: \"SketchPicker\",\r\n                        label: \"颜色\",\r\n                        name: \"tableTbodyOddBorderColor\",\r\n                        required: false,\r\n                        placeholder: \"请选择边框颜色\",\r\n                      },\r\n                    ],\r\n                  },\r\n                ],\r\n              ],\r\n            },\r\n          ],\r\n          [\r\n            {\r\n              name: \"偶数行配置\",\r\n              list: [\r\n                {\r\n                  componentName: \"SketchPicker\",\r\n                  label: \"背景颜色\",\r\n                  name: \"tableTbodyEvenBackgroudColor\",\r\n                  required: false,\r\n                  placeholder: \"\",\r\n                },\r\n                [\r\n                  {\r\n                    name: \"盒子阴影\",\r\n                    list: [\r\n                      {\r\n                        componentName: \"Switch\",\r\n                        label: \"内阴影\",\r\n                        name: \"tableTbodyEvenBoxInset\",\r\n                        required: false,\r\n                        placeholder: \"\",\r\n                      },\r\n                      {\r\n                        componentName: \"InputNumber\",\r\n                        label: \"X轴偏移\",\r\n                        name: \"tableTbodyEvenBoxShadowX\",\r\n                        required: false,\r\n                        placeholder: \"请输入X轴偏移\",\r\n                        addonAfter: \"px\",\r\n                      },\r\n                      {\r\n                        componentName: \"InputNumber\",\r\n                        label: \"Y轴偏移\",\r\n                        name: \"tableTbodyEvenBoxShadowY\",\r\n                        required: false,\r\n                        placeholder: \"请输入Y轴偏移\",\r\n                        addonAfter: \"px\",\r\n                      },\r\n                      {\r\n                        componentName: \"InputNumber\",\r\n                        label: \"模糊值\",\r\n                        name: \"tableTbodyEvenBoxShadowF\",\r\n                        required: false,\r\n                        placeholder: \"请输入模糊值\",\r\n                        addonAfter: \"px\",\r\n                      },\r\n                      {\r\n                        componentName: \"SketchPicker\",\r\n                        label: \"颜色\",\r\n                        name: \"tableTbodyEvenBoxShadowC\",\r\n                        required: false,\r\n                        placeholder: \"请选择颜色\",\r\n                      },\r\n                    ],\r\n                  },\r\n                  {\r\n                    name: \"边框\",\r\n                    list: [\r\n                      {\r\n                        componentName: \"Select\",\r\n                        label: \"边框样式\",\r\n                        name: \"tableTbodyEvenBorderStyle\",\r\n                        required: false,\r\n                        placeholder: \"请选择边框样式\",\r\n                        options: [\r\n                          { code: \"none\", name: \"无\" },\r\n                          { code: \"solid\", name: \"直线\" },\r\n                          { code: \"dashed\", name: \"破折线\" },\r\n                          { code: \"dotted\", name: \"点状线\" },\r\n                          { code: \"double\", name: \"双划线\" },\r\n                          { code: \"groove\", name: \"3D凹槽\" },\r\n                          { code: \"ridge\", name: \"3D垄状\" },\r\n                          { code: \"inset\", name: \"3D内嵌\" },\r\n                          { code: \"outset\", name: \"3D外嵌\" },\r\n                        ],\r\n                      },\r\n                      {\r\n                        componentName: \"InputNumber\",\r\n                        label: \"边框尺寸\",\r\n                        name: \"tableTbodyEvenBorderWidth\",\r\n                        required: false,\r\n                        placeholder: \"请输入尺寸\",\r\n                        addonAfter: \"px\",\r\n                      },\r\n                      {\r\n                        componentName: \"SketchPicker\",\r\n                        label: \"颜色\",\r\n                        name: \"tableTbodyEvenBorderColor\",\r\n                        required: false,\r\n                        placeholder: \"请选择边框颜色\",\r\n                      },\r\n                    ],\r\n                  },\r\n                ],\r\n              ],\r\n            },\r\n          ],\r\n        ],\r\n      },\r\n    ],\r\n  ],\r\n};\r\n","import React, { FC } from \"react\";\r\nimport { Form } from \"antd\";\r\nimport DynamicForm from \"../dynamicForm\";\r\nimport elements from \"@src/core/config/classification\";\r\n\r\ninterface IConfigLayoutRightAsideElement {\r\n  element?: elementsNameType;\r\n  configureValue: IAnyObject;\r\n  onFinish: (data: IAnyObject) => void;\r\n}\r\n\r\nexport const ConfigLayoutRightAsideElement: FC<\r\n  IConfigLayoutRightAsideElement\r\n> = ({ configureValue, onFinish, element }) => {\r\n  const [form] = Form.useForm();\r\n  return (\r\n    <div className=\"cms-config-layout__element\">\r\n      <Form\r\n        labelCol={{ flex: \"110px\" }}\r\n        labelAlign=\"left\"\r\n        form={form}\r\n        initialValues={configureValue}\r\n      >\r\n        <DynamicForm\r\n          datas={elements?.[element as elementsNameType]?.configure || []}\r\n          form={form}\r\n          callback={(field: string, value: any) => {\r\n            const val =\r\n              value && !isNaN(value) && typeof value !== \"boolean\"\r\n                ? Number(value)\r\n                : value;\r\n            if (configureValue[field] !== val) {\r\n              onFinish({\r\n                [field]: val,\r\n              });\r\n            }\r\n          }}\r\n        />\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n","import React, { FC, useCallback, useEffect, useState } from \"react\";\r\nimport { Button, Form } from \"antd\";\r\nimport DynamicForm from \"../dynamicForm\";\r\nimport { elementDataConfig, widgetDataConfig } from \"@src/core/config/base\";\r\nimport { Tabs } from \"antd\";\r\n\r\nimport \"./index.scss\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\ninterface IConfigLayoutRightAsideData {\r\n  widgetDataValue: IAnyObject;\r\n  elementDataValue: IAnyObject;\r\n  widgetOnFinish: (data: IAnyObject) => void;\r\n  elementOnFinish: (data: IAnyObject) => void;\r\n}\r\n\r\nexport const ConfigLayoutRightAsideData: FC<IConfigLayoutRightAsideData> = ({\r\n  widgetDataValue,\r\n  elementDataValue,\r\n  widgetOnFinish,\r\n  elementOnFinish,\r\n}) => {\r\n  const [elementForm] = Form.useForm();\r\n  const [widgetForm] = Form.useForm();\r\n  const [activeKey, setActiveKey] = useState(\"1\");\r\n  useEffect(() => {\r\n    if (elementDataValue) {\r\n      setActiveKey(\"1\");\r\n    } else {\r\n      setActiveKey(\"2\");\r\n    }\r\n  }, [elementDataValue]);\r\n\r\n  const onChange = useCallback(\r\n    (key: string) => {\r\n      if (elementDataValue) {\r\n        setActiveKey(key);\r\n      }\r\n    },\r\n    [elementDataValue]\r\n  );\r\n\r\n  return (\r\n    <div className=\"cms-config-layout__data\">\r\n      <Tabs activeKey={activeKey} centered onChange={onChange}>\r\n        <TabPane\r\n          tabKey=\"1\"\r\n          tab=\"组件\"\r\n          key=\"1\"\r\n          disabled={!Boolean(elementDataValue)}\r\n        >\r\n          <Form\r\n            layout=\"vertical\"\r\n            labelAlign=\"left\"\r\n            form={elementForm}\r\n            initialValues={elementDataValue}\r\n            onFinish={elementOnFinish}\r\n          >\r\n            <DynamicForm\r\n              formSubmit\r\n              datas={elementDataConfig.configure || []}\r\n              form={elementForm}\r\n              callback={(field: string, value: any) => {\r\n                const val =\r\n                  value && !isNaN(value) && typeof value !== \"boolean\"\r\n                    ? Number(value)\r\n                    : value;\r\n                if (elementDataValue[field] !== val) {\r\n                  elementOnFinish({\r\n                    [field]: val,\r\n                  });\r\n                }\r\n              }}\r\n            />\r\n            <Form.Item>\r\n              <Button type=\"primary\" htmlType=\"submit\" block>\r\n                保存\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </TabPane>\r\n        <TabPane\r\n          tabKey=\"2\"\r\n          tab=\"微件\"\r\n          key=\"2\"\r\n          disabled={!Boolean(widgetDataValue)}\r\n        >\r\n          <Form\r\n            layout=\"vertical\"\r\n            labelAlign=\"left\"\r\n            form={widgetForm}\r\n            initialValues={widgetDataValue}\r\n            onFinish={widgetOnFinish}\r\n          >\r\n            <DynamicForm\r\n              formSubmit\r\n              datas={widgetDataConfig.configure || []}\r\n              form={widgetForm}\r\n              callback={(field: string, value: any) => {\r\n                const val =\r\n                  value && !isNaN(value) && typeof value !== \"boolean\"\r\n                    ? Number(value)\r\n                    : value;\r\n                if (widgetDataValue[field] !== val) {\r\n                  widgetOnFinish({\r\n                    [field]: val,\r\n                  });\r\n                }\r\n              }}\r\n            />\r\n            <Form.Item>\r\n              <Button type=\"primary\" htmlType=\"submit\" block>\r\n                保存\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </TabPane>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n};\r\n","import React, {\r\n  FC,\r\n  useCallback,\r\n  useEffect,\r\n  useMemo,\r\n  useReducer,\r\n  useState,\r\n} from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport DragContent from \"@src/compoents/dragdrop/dragContent\";\r\nimport elements from \"@src/elements\";\r\nimport {\r\n  ConfigLayoutHeader,\r\n  ConfigLayoutMain,\r\n  ConfigLayoutLeftAside,\r\n  ConfigLayoutRightAside,\r\n  ConfigLayoutLeftAsideElements,\r\n  ConfigLayoutRightAsideLayer,\r\n  ConfigLayoutRightAsideWidget,\r\n  ConfigLayoutRightAsideElement,\r\n  ConfigLayoutRightAsideData,\r\n} from \"@src/layout/configLayout\";\r\n\r\nimport { widgetConfig } from \"@src/core/config/base\";\r\n\r\nimport \"@src/layout/configLayout/index.scss\";\r\nimport WidgetLayout from \"@src/layout/widgetLayout\";\r\nimport { initialState, widgetReducer } from \"./store/reducers\";\r\nimport { IElement, IWidget } from \"@src/service\";\r\nimport { capitalizeFirstLetter, guid, getStyles } from \"@src/utils\";\r\nimport \"animate.css\";\r\nimport {\r\n  CACHE_WIDGETS,\r\n  WIDGET_BODY_COLUMN,\r\n  WIDGET_BODY_GAP,\r\n  WIDGET_BODY_ROW,\r\n  WIDGET_HEADER_COLUMN,\r\n  WIDGET_HEADER_GAP,\r\n  WIDGET_HEADER_ROW,\r\n} from \"@src/core/enums/access.enums\";\r\nimport WidgetPreviewDialog from \"@src/compoents/widgetPreviewDialog\";\r\nimport localforage from \"localforage\";\r\ninterface IConfigLayout {}\r\n\r\nconst ConfigLayout: FC<IConfigLayout> = () => {\r\n  let location = useLocation();\r\n  const [layout, dispatch] = useReducer(widgetReducer, initialState);\r\n  const [show, setShow] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const queryParams = new URLSearchParams(location.search);\r\n    // 编辑\r\n    if (queryParams.size) {\r\n      const widgetId = queryParams.get(\"widgetId\");\r\n      if (widgetId) {\r\n        localforage.getItem(CACHE_WIDGETS, (err, value) => {\r\n          if (value) {\r\n            const curr = (value as IWidget[]).find(\r\n              (item) => item.widgetId === widgetId\r\n            );\r\n            if (curr) {\r\n              dispatch({\r\n                type: \"WIDGET\",\r\n                data: curr,\r\n              });\r\n            } else {\r\n              console.log(\"找不到微件ID\");\r\n            }\r\n          }\r\n        });\r\n      }\r\n    } else {\r\n      // 新增\r\n      dispatch({\r\n        type: \"WIDGET\",\r\n        data: {\r\n          name: \"未命名微件\",\r\n          url: \"\",\r\n          id: \"\",\r\n          createTime: \"\",\r\n          type: \"text\",\r\n          count: 0,\r\n          x: 0,\r\n          y: 0,\r\n          column: 1,\r\n          row: 1,\r\n          widgetId: guid(),\r\n          configuration: {\r\n            configureValue: widgetConfig.configureValue,\r\n            dataValue: widgetConfig.dataValue,\r\n          },\r\n          elements: [],\r\n        },\r\n      });\r\n    }\r\n  }, [location]);\r\n\r\n  const onDropHandler = (\r\n    position: \"header\" | \"body\",\r\n    isAdd: boolean,\r\n    data: IAnyObject\r\n  ) => {\r\n    // 新增\r\n    if (isAdd) {\r\n      dispatch({\r\n        type: \"ADD_ELEMENT\",\r\n        data: {\r\n          ...data,\r\n          position: position,\r\n        } as IElement,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: \"MODIFY_ELEMENT\",\r\n        data: {\r\n          ...data,\r\n          position: position,\r\n        } as IElement,\r\n      });\r\n    }\r\n  };\r\n\r\n  const onResizeEndHandler = useCallback((data: IAnyObject) => {\r\n    dispatch({\r\n      type: \"MODIFY_ELEMENT\",\r\n      data: { ...data },\r\n    });\r\n  }, []);\r\n\r\n  const onCloseHander = useCallback((id: string) => {\r\n    console.log(id, \"onCloseHander\");\r\n    dispatch({\r\n      type: \"DELETE_ELEMENT\",\r\n      id,\r\n    });\r\n  }, []);\r\n\r\n  const renderPreview = useCallback((data: IAnyObject) => {\r\n    if (data.element && elements[capitalizeFirstLetter(data.element)]) {\r\n      return React.createElement(\r\n        elements[capitalizeFirstLetter(data.element)],\r\n        {\r\n          options: data.configuration.configureValue,\r\n          data: data.configuration?.dataValue?.mock,\r\n          field: data.configuration?.dataValue?.field,\r\n        }\r\n      );\r\n    }\r\n    return <div>你访问的组件不存在请联系售后人员</div>;\r\n  }, []);\r\n  // 判断右侧边栏所需模块\r\n  const rightAside = useMemo(() => {\r\n    let arr: PageType[] = [];\r\n    if (layout?.widgetId) {\r\n      if (layout?.elementId) {\r\n        arr = [\"layer\", \"element\", \"widget\", \"data\"];\r\n      } else {\r\n        arr = [\"layer\", \"widget\", \"data\"];\r\n      }\r\n    } else {\r\n      arr = [\"layer\"];\r\n    }\r\n    return arr;\r\n  }, [layout?.elementId, layout?.widgetId]);\r\n\r\n  const onSelected = useCallback(\r\n    (widgetId: string, elementId: string | undefined) => {\r\n      if (elementId && layout?.elementId !== elementId) {\r\n        dispatch({\r\n          type: \"SELECT_ELEMENT\",\r\n          id: elementId,\r\n        });\r\n      }\r\n    },\r\n    [layout?.elementId]\r\n  );\r\n\r\n  const currentElement = useMemo(() => {\r\n    return layout?.widget.elements.find(\r\n      (item) => item.elementId === layout?.elementId\r\n    );\r\n  }, [layout?.elementId, layout?.widget.elements]);\r\n\r\n  return (\r\n    <div className=\"cms-config-layout\">\r\n      <ConfigLayoutHeader\r\n        name={layout?.widget.name}\r\n        pageType=\"widget\"\r\n        modifyNameSuccessHander={(name) => {\r\n          dispatch({\r\n            type: \"MODIFY_WIDGET\",\r\n            data: {\r\n              name: name,\r\n            },\r\n          });\r\n        }}\r\n        previewHandler={() => setShow(true)}\r\n      />\r\n      <div className=\"cms-config-layout__content\">\r\n        <ConfigLayoutLeftAside\r\n          navs={[\"element\"]}\r\n          render={(data) => {\r\n            if (data === \"element\") {\r\n              return <ConfigLayoutLeftAsideElements />;\r\n            }\r\n            return null;\r\n          }}\r\n        />\r\n        <ConfigLayoutMain>\r\n          <WidgetLayout\r\n            style={getStyles(\r\n              layout?.widget?.configuration?.configureValue || {}\r\n            )}\r\n            headerStyles={{\r\n              ...getStyles(\r\n                layout?.widget?.configuration?.configureValue || {},\r\n                \"headerStyle\"\r\n              ),\r\n              display: layout?.widget?.configuration?.configureValue?.headerShow\r\n                ? \"block\"\r\n                : \"none\",\r\n            }}\r\n            bodyStyles={getStyles(\r\n              layout?.widget?.configuration?.configureValue || {},\r\n              \"bodyStyle\"\r\n            )}\r\n            header={\r\n              <DragContent\r\n                auxiliaryLineConfig={{\r\n                  show: layout?.widget?.configuration?.configureValue\r\n                    ?.isShowAuxiliaryLine,\r\n                  borderColor:\r\n                    layout?.widget?.configuration?.configureValue\r\n                      ?.auxiliaryLineBorderColor,\r\n                }}\r\n                column={WIDGET_HEADER_COLUMN}\r\n                row={WIDGET_HEADER_ROW}\r\n                gap={WIDGET_HEADER_GAP}\r\n                groupName=\"elements\"\r\n                field=\"elementId\"\r\n                datas={\r\n                  layout?.widget.elements.filter(\r\n                    (item) => item.position === \"header\"\r\n                  ) || []\r\n                }\r\n                onDropHandler={(isAdd, data) =>\r\n                  onDropHandler(\"header\", isAdd, data)\r\n                }\r\n                onResizeEndHandler={onResizeEndHandler}\r\n                onCloseHander={onCloseHander}\r\n                renderPreview={renderPreview}\r\n              />\r\n            }\r\n            body={\r\n              <DragContent\r\n                auxiliaryLineConfig={{\r\n                  show: layout?.widget?.configuration?.configureValue\r\n                    ?.isShowAuxiliaryLine,\r\n                  borderColor:\r\n                    layout?.widget?.configuration?.configureValue\r\n                      ?.auxiliaryLineBorderColor,\r\n                }}\r\n                column={WIDGET_BODY_COLUMN}\r\n                row={WIDGET_BODY_ROW}\r\n                gap={WIDGET_BODY_GAP}\r\n                groupName=\"elements\"\r\n                field=\"elementId\"\r\n                datas={\r\n                  layout?.widget.elements.filter(\r\n                    (item) => item.position === \"body\"\r\n                  ) || []\r\n                }\r\n                onDropHandler={(isAdd, data) =>\r\n                  onDropHandler(\"body\", isAdd, data)\r\n                }\r\n                onResizeEndHandler={onResizeEndHandler}\r\n                onCloseHander={onCloseHander}\r\n                renderPreview={renderPreview}\r\n              />\r\n            }\r\n          />\r\n        </ConfigLayoutMain>\r\n        <ConfigLayoutRightAside\r\n          navs={rightAside}\r\n          render={(data) => {\r\n            if (data === \"layer\") {\r\n              return (\r\n                <ConfigLayoutRightAsideLayer\r\n                  datas={layout?.widget ? [layout?.widget] : []}\r\n                  widgetId={layout?.widgetId}\r\n                  elementId={layout?.elementId}\r\n                  onSelected={onSelected}\r\n                />\r\n              );\r\n            } else if (data === \"widget\") {\r\n              return (\r\n                <ConfigLayoutRightAsideWidget\r\n                  configureValue={\r\n                    (layout?.widget?.configuration\r\n                      ?.configureValue as IAnyObject) || {}\r\n                  }\r\n                  onFinish={(data: IAnyObject) => {\r\n                    const configuration = JSON.parse(\r\n                      JSON.stringify(layout?.widget?.configuration)\r\n                    );\r\n                    dispatch({\r\n                      type: \"MODIFY_WIDGET\",\r\n                      data: {\r\n                        configuration: {\r\n                          ...configuration,\r\n                          configureValue: {\r\n                            ...configuration.configureValue,\r\n                            ...data,\r\n                          },\r\n                        },\r\n                      },\r\n                    });\r\n                  }}\r\n                />\r\n              );\r\n            } else if (data === \"element\") {\r\n              return (\r\n                <ConfigLayoutRightAsideElement\r\n                  element={currentElement?.element}\r\n                  configureValue={\r\n                    currentElement?.configuration.configureValue || {}\r\n                  }\r\n                  onFinish={(data: IAnyObject) => {\r\n                    const currentElement = JSON.parse(\r\n                      JSON.stringify(\r\n                        layout?.widget?.elements.find(\r\n                          (item) => item.elementId === layout.elementId\r\n                        )\r\n                      )\r\n                    );\r\n                    if (currentElement) {\r\n                      dispatch({\r\n                        type: \"MODIFY_ELEMENT\",\r\n                        data: {\r\n                          ...currentElement,\r\n                          configuration: {\r\n                            ...currentElement.configuration,\r\n                            configureValue: {\r\n                              ...currentElement.configuration.configureValue,\r\n                              ...data,\r\n                            },\r\n                          },\r\n                        },\r\n                      });\r\n                    }\r\n                  }}\r\n                />\r\n              );\r\n            } else if (data === \"data\") {\r\n              return (\r\n                <ConfigLayoutRightAsideData\r\n                  widgetDataValue={layout?.widget?.configuration?.dataValue}\r\n                  widgetOnFinish={(data: IAnyObject) => {\r\n                    const widget = layout?.widget;\r\n                    console.log(widget, \"123\");\r\n                    dispatch({\r\n                      type: \"MODIFY_WIDGET\",\r\n                      data: {\r\n                        ...widget,\r\n                        configuration: {\r\n                          ...widget?.configuration,\r\n                          dataValue: {\r\n                            ...widget?.configuration?.dataValue,\r\n                            ...data,\r\n                          },\r\n                        },\r\n                      },\r\n                    });\r\n                  }}\r\n                  elementDataValue={currentElement?.configuration.dataValue}\r\n                  elementOnFinish={(data: IAnyObject) => {\r\n                    const currentElement = JSON.parse(\r\n                      JSON.stringify(\r\n                        layout?.widget?.elements.find(\r\n                          (item) => item.elementId === layout.elementId\r\n                        )\r\n                      )\r\n                    );\r\n                    if (currentElement) {\r\n                      dispatch({\r\n                        type: \"MODIFY_ELEMENT\",\r\n                        data: {\r\n                          ...currentElement,\r\n                          configuration: {\r\n                            ...currentElement.configuration,\r\n                            dataValue: {\r\n                              ...currentElement.configuration.dataValue,\r\n                              ...data,\r\n                            },\r\n                          },\r\n                        },\r\n                      });\r\n                    }\r\n                  }}\r\n                />\r\n              );\r\n            }\r\n            return <div>{data}</div>;\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      <WidgetPreviewDialog\r\n        open={show}\r\n        onClose={() => setShow(false)}\r\n        data={layout?.widget as IWidget}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConfigLayout;\r\n"],"names":["dragStore","constructor","moveItem","Map","set","key","data","this","remove","delete","get","_ref","width","height","gap","column","row","x","y","style","children","maskStyle","useMemo","getItemSizeStyle","transform","React","className","memo","props","groupName","onResizeStart","onResizeing","onResizeEnd","onCloseHander","isShowCloseBtn","moveing","setMoveing","useState","resizeing","setResizeing","previewStyles","gridArea","opacity","onDragStart","useCallback","e","pageX","pageY","setTimeout","onDragEnd","onMouseDown","onMouseMove","preventDefault","onMouseUp","target","draggable","onClick","elementId","mask","field","onDropHandler","datas","onResizeEndHandler","renderPreview","auxiliaryLineConfig","useRef","clientRect","setClientRect","resizeEnd","setResizeEnd","current","setCuurent","getClientRect","_target$current","getBoundingClientRect","useEffect","resizeObserver","ResizeObserver","entries","Array","isArray","length","observe","disconnect","isPutDown","currentXy","p1","p2","every","item","booleanIntersects","booleanWithin","getX","num","parseInt","String","getY","getColumn","Math","max","ceil","getRow","onDragEnter","dragData","state","show","onDragOver","onDragLeave","undefined","onDrop","Boolean","guid","offsetWidth","offsetHeight","ref","display","gridTemplateColumns","gridTemplateRows","fill","map","_","index","borderColor","PreviewItem","pointerEvents","resize","MoveMask","background","name","open","onClose","pageType","modifyNameSuccessHander","Modal","onCancel","footer","title","PAGETYPENAME","destroyOnClose","Form","onFinish","values","message","success","initialValues","autoComplete","Item","rules","required","Input","placeholder","Button","type","htmlType","block","ConfigLayoutHeader","logo","previewHandler","publishHandler","navigate","useNavigate","isModalNameOpen","setIsModalNameOpen","dangerouslySetInnerHTML","__html","ModifyNameDialog","Ruler","arr","from","keys","ConfigLayoutMain","Rule","CloseOutlined","ALLTABS","icon","ConfigLayoutLeftAside","render","navs","setCurrent","tabs","setTabs","filter","includes","Tooltip","placement","borderRight","Box","ALLELEMENTS","ConfigLayoutLeftAsideElements","_elementsList$filter","_elementsList$filter2","getElements","elementsList","elementsLoading","elements","ELEMETSTYPE","DragItem","code","Image","src","preview","Empty","image","PRESENTED_IMAGE_SIMPLE","ConfigLayoutRightAside","borderLeft","ConfigLayoutRightAsideLayer","widgetId","onSelected","widget","FolderOpenOutlined","element","FolderOutlined","value","onChange","options","editorRef","editorObj","initEditor","totalOptions","mode","_editorObj$current","JSONEditor","destroy","Option","Select","form","callback","formSubmit","componentName","label","tooltip","validateTrigger","size","allowClear","disabled","onBlur","InputNumber","min","addonAfter","TextArea","rows","valuePropName","Switch","Slider","step","onChangeComplete","subItem","ColorPicker","format","showText","setFieldValue","toHex","shouldUpdate","noStyle","paddingBottom","JsonEditor","getFieldValue","Panel","Collapse","judgeType","Object","prototype","toString","call","DynamicForm","relationFields","split","_ref2","relationValues","BaseForm","subIndex","defaultActiveKey","bordered","header","list","_ref3","subbItem","ConfigLayoutRightAsideWidget","configureValue","useForm","labelCol","flex","labelAlign","widgetConfig","configure","val","isNaN","Number","baseText","fontConfig","boxConfig","messageText","dateText","line","echartsConfig","seriesStack","seriesLabel","symbol","legend","grid","xAxis","yAxis","echartColor","animateConfig","bar","countUp","pie","seriesItemStyle","emphasis","baseImage","baseBanner","swiperConfig","table","ConfigLayoutRightAsideElement","_elements","TabPane","Tabs","ConfigLayoutRightAsideData","widgetDataValue","elementDataValue","widgetOnFinish","elementOnFinish","elementForm","widgetForm","activeKey","setActiveKey","centered","tabKey","tab","layout","elementDataConfig","widgetDataConfig","ConfigLayout","_layout$widget","_layout$widget$config","_layout$widget2","_layout$widget2$confi","_layout$widget3","_layout$widget3$confi","_layout$widget3$confi2","_layout$widget4","_layout$widget4$confi","_layout$widget5","_layout$widget5$confi","_layout$widget5$confi2","_layout$widget6","_layout$widget6$confi","_layout$widget6$confi2","_layout$widget7","_layout$widget7$confi","_layout$widget7$confi2","_layout$widget8","_layout$widget8$confi","_layout$widget8$confi2","location","useLocation","dispatch","useReducer","widgetReducer","initialState","setShow","queryParams","URLSearchParams","search","localforage","CACHE_WIDGETS","err","curr","find","url","id","createTime","count","configuration","dataValue","position","isAdd","_data$configuration","_data$configuration$d","_data$configuration2","_data$configuration2$","capitalizeFirstLetter","mock","rightAside","currentElement","WidgetLayout","getStyles","headerStyles","headerShow","bodyStyles","DragContent","isShowAuxiliaryLine","auxiliaryLineBorderColor","WIDGET_HEADER_COLUMN","WIDGET_HEADER_ROW","WIDGET_HEADER_GAP","body","WIDGET_BODY_COLUMN","WIDGET_BODY_ROW","WIDGET_BODY_GAP","_layout$widget9","_layout$widget9$confi","_layout$widget10","JSON","parse","stringify","_layout$widget11","_layout$widget12","_layout$widget12$conf","_widget$configuration","_layout$widget13","WidgetPreviewDialog"],"sourceRoot":""}