{"version":3,"file":"static/js/3525.df579cb1c4.chunk.js","mappings":"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","sources":["webpack://large-screen-configuration/./src/compoents/dragdrop/drag.ts","webpack://large-screen-configuration/./src/compoents/echarts/index.tsx","webpack://large-screen-configuration/./src/compoents/navigation/index.tsx","webpack://large-screen-configuration/./src/compoents/previewDialog/index.tsx","webpack://large-screen-configuration/./src/compoents/renderPage/index.tsx","webpack://large-screen-configuration/./src/compoents/request/index.tsx","webpack://large-screen-configuration/./src/elements/line/index.tsx","webpack://large-screen-configuration/./src/elements/bar/index.tsx","webpack://large-screen-configuration/./src/elements/pie/index.tsx","webpack://large-screen-configuration/./src/elements/image/base/index.tsx","webpack://large-screen-configuration/./src/compoents/swiper/index.tsx","webpack://large-screen-configuration/./src/elements/image/banner/index.tsx","webpack://large-screen-configuration/./src/elements/table/index.tsx","webpack://large-screen-configuration/./src/elements/index.ts","webpack://large-screen-configuration/./src/elements/text/base/index.tsx","webpack://large-screen-configuration/./src/elements/text/countup/index.tsx","webpack://large-screen-configuration/./src/elements/text/message/index.tsx","webpack://large-screen-configuration/./src/elements/text/date/index.tsx","webpack://large-screen-configuration/./src/elements/form/radio/index.tsx","webpack://large-screen-configuration/./src/elements/form/select/index.tsx","webpack://large-screen-configuration/./src/compoents/renderElement/index.tsx","webpack://large-screen-configuration/./src/compoents/renderWidget/index.tsx","webpack://large-screen-configuration/./src/compoents/modifyNameDialog/index.tsx","webpack://large-screen-configuration/./src/layout/configLayout/components/header/index.tsx","webpack://large-screen-configuration/./src/layout/configLayout/components/main/components/rule/index.tsx","webpack://large-screen-configuration/./src/layout/configLayout/components/main/index.tsx","webpack://large-screen-configuration/./src/layout/configLayout/components/box/index.tsx","webpack://large-screen-configuration/./src/layout/configLayout/components/leftAside/index.tsx","webpack://large-screen-configuration/./src/compoents/dragdrop/dragItem/index.tsx","webpack://large-screen-configuration/./src/layout/configLayout/components/leftAside/components/elements/index.tsx","webpack://large-screen-configuration/./src/layout/configLayout/components/leftAside/components/widgets/index.tsx","webpack://large-screen-configuration/./src/layout/configLayout/components/leftAside/components/pages/index.tsx","webpack://large-screen-configuration/./src/layout/configLayout/components/rightAside/index.tsx","webpack://large-screen-configuration/./src/layout/configLayout/components/rightAside/components/layer/index.tsx","webpack://large-screen-configuration/./src/compoents/jsonEditor/index.tsx","webpack://large-screen-configuration/./src/layout/configLayout/components/rightAside/components/baseForm/index.tsx","webpack://large-screen-configuration/./src/layout/configLayout/components/rightAside/components/dynamicForm/index.tsx","webpack://large-screen-configuration/./src/layout/configLayout/components/rightAside/components/widget/index.tsx","webpack://large-screen-configuration/./src/core/config/classification/text/base.ts","webpack://large-screen-configuration/./src/core/config/classification/text/message.ts","webpack://large-screen-configuration/./src/core/config/classification/text/date.ts","webpack://large-screen-configuration/./src/core/config/classification/index.ts","webpack://large-screen-configuration/./src/core/config/classification/line/index.ts","webpack://large-screen-configuration/./src/core/config/classification/bar/index.ts","webpack://large-screen-configuration/./src/core/config/classification/text/countUp.ts","webpack://large-screen-configuration/./src/core/config/classification/pie/index.ts","webpack://large-screen-configuration/./src/core/config/classification/image/base.ts","webpack://large-screen-configuration/./src/core/config/classification/image/banner.ts","webpack://large-screen-configuration/./src/core/config/classification/table/index.ts","webpack://large-screen-configuration/./src/core/config/classification/form/radio.ts","webpack://large-screen-configuration/./src/core/config/classification/form/select.ts","webpack://large-screen-configuration/./src/layout/configLayout/components/rightAside/components/element/index.tsx","webpack://large-screen-configuration/./src/layout/configLayout/components/rightAside/components/data/index.tsx","webpack://large-screen-configuration/./src/layout/configLayout/components/rightAside/components/page/index.tsx","webpack://large-screen-configuration/./src/layout/configLayout/components/rightAside/components/project/index.tsx","webpack://large-screen-configuration/./src/layout/configLayout/components/rightAside/components/linkage/index.tsx","webpack://large-screen-configuration/./src/layout/configLayout/components/mask/index.tsx","webpack://large-screen-configuration/./src/layout/gridLayout/components/auxiliaryLine/index.tsx","webpack://large-screen-configuration/./src/compoents/boundingClientRect/index.tsx","webpack://large-screen-configuration/./src/layout/gridLayout/index.tsx","webpack://large-screen-configuration/./src/layout/previewLayout/index.tsx"],"sourcesContent":["class DragStore<T extends IAnyObject> {\r\n  moveItem = new Map<string, T>();\r\n\r\n  set(key: string, data: T) {\r\n    this.moveItem.set(key, data);\r\n  }\r\n\r\n  remove(key: string) {\r\n    this.moveItem.delete(key);\r\n  }\r\n\r\n  get(key: string): undefined | T {\r\n    return this.moveItem.get(key);\r\n  }\r\n}\r\n\r\n/**\r\n * 拖拽临时数据\r\n */\r\nexport const dragStore = new DragStore<IAnyObject>();\r\n\r\n/**\r\n * 判断是否在当前四边形内\r\n * @param {*} p1 父容器\r\n * @param {*} p2\r\n * @returns\r\n *  对应是 左上角坐标 和 右下角坐标\r\n *  [0,0,1,1]  => 左上角坐标 0,0  右下角 1,1\r\n */\r\nexport const booleanWithin = (\r\n  p1: [number, number, number, number],\r\n  p2: [number, number, number, number]\r\n) => {\r\n  return p1[0] <= p2[0] && p1[1] <= p2[1] && p1[2] >= p2[2] && p1[3] >= p2[3];\r\n};\r\n\r\n/**\r\n * 判断是两四边形是否相交\r\n * @param {*} p1 父容器\r\n * @param {*} p2\r\n * @returns\r\n *  对应是 左上角坐标 和 右下角坐标\r\n *  [0,0,1,1]  => 左上角坐标 0,0  右下角 1,1\r\n */\r\nexport const booleanIntersects = (\r\n  p1: [number, number, number, number],\r\n  p2: [number, number, number, number]\r\n) => {\r\n  return !(\r\n    p1[2] <= p2[0] || // p1 在 p2 左边\r\n    p2[2] <= p1[0] || // p1 在 p2 右边\r\n    p1[3] <= p2[1] || // p1 在 p2 上边\r\n    // p1 在 p2 下边\r\n    p2[3] <= p1[1]\r\n  );\r\n};\r\n\r\n/**\r\n * 获取元素位置信息\r\n * @param {*} width 格子宽\r\n * @param {*} height 格子高\r\n * @param {*} x x 坐标\r\n * @param {*} y y 坐标\r\n * @param {*} gap 间隔\r\n * @param {*} column 元素占列数\r\n * @param {*} row 元素占行数\r\n * @returns\r\n */\r\nexport const getItemSizeStyle = (\r\n  width: number,\r\n  height: number,\r\n  x: number,\r\n  y: number,\r\n  gap: number,\r\n  column: number,\r\n  row: number\r\n) => {\r\n  return {\r\n    width: `${width * column + (column - 1) * gap}px`,\r\n    height: `${height * row + (row - 1) * gap}px`,\r\n    transform: `translate(${(width + gap) * (x - 1)}px,${\r\n      (height + gap) * (y - 1)\r\n    }px)`,\r\n  };\r\n};\r\n","import React, { memo, useCallback, useEffect, useRef } from \"react\";\r\nimport * as echarts from \"echarts\";\r\nimport { init as initChart } from \"echarts/core\";\r\nimport data from \"./infographic.json\";\r\nimport {\r\n  Option,\r\n  Theme,\r\n  InitOptions,\r\n  UpdateOptions,\r\n  AutoresizeProp,\r\n  LoadingOptions,\r\n  EChartsType,\r\n} from \"./types\";\r\necharts.registerTheme(\"infographic\", data);\r\n\r\ninterface IEchartsProps {\r\n  option: Option;\r\n  theme?: Theme;\r\n  initOptions?: InitOptions;\r\n  updateOptions?: UpdateOptions;\r\n  group?: string;\r\n  autoresize?: AutoresizeProp;\r\n  loading?: boolean;\r\n  loadingOptions?: LoadingOptions;\r\n}\r\n\r\nconst Echarts = memo(\r\n  (props: IEchartsProps) => {\r\n    const {\r\n      theme,\r\n      group,\r\n      initOptions,\r\n      option,\r\n      updateOptions,\r\n      loading = false,\r\n      loadingOptions,\r\n      autoresize = {},\r\n    } = props;\r\n    const dom = useRef<HTMLDivElement>(null);\r\n    const chart = useRef<EChartsType>();\r\n    const timmer = useRef<any>(0);\r\n    // tooltip auto play current index\r\n    const currentIndex = useRef<number>(-1);\r\n\r\n    const autoPlayHandler = useCallback(() => {\r\n      if (!option.series || !(option.series as echarts.SeriesOption[]).length) {\r\n        return false;\r\n      }\r\n\r\n      if (chart.current) {\r\n        if (timmer.current) {\r\n          clearInterval(timmer.current);\r\n        }\r\n        timmer.current = setInterval(() => {\r\n          const dataLen =\r\n            option.series && (option.series as echarts.SeriesOption[]).length\r\n              ? (\r\n                  (option.series as echarts.SeriesOption[])[0]\r\n                    ?.data as Array<any>\r\n                ).length\r\n              : 0;\r\n\r\n          // 取消之前高亮的图形\r\n          chart?.current?.dispatchAction({\r\n            type: \"downplay\",\r\n            seriesIndex: 0,\r\n          });\r\n          currentIndex.current = (currentIndex.current + 1) % dataLen;\r\n          // 高亮当前图形\r\n          chart?.current?.dispatchAction({\r\n            type: \"highlight\",\r\n            seriesIndex: 0,\r\n            dataIndex: currentIndex.current,\r\n          });\r\n          // 显示 tooltip\r\n          chart?.current?.dispatchAction({\r\n            type: \"showTip\",\r\n            seriesIndex: 0,\r\n            dataIndex: currentIndex.current,\r\n          });\r\n        }, 3000);\r\n      }\r\n    }, [chart, timmer, option, currentIndex]);\r\n\r\n    // 鼠标移入事件\r\n    const mouseHander = useCallback((e: any) => {\r\n      clearInterval(timmer.current);\r\n      currentIndex.current = e.dataIndex;\r\n      // 取消之前高亮的图形\r\n      chart?.current?.dispatchAction({\r\n        type: \"downplay\",\r\n        seriesIndex: 0,\r\n      });\r\n      // 高亮当前图形\r\n      chart?.current?.dispatchAction({\r\n        type: \"highlight\",\r\n        seriesIndex: 0,\r\n        dataIndex: currentIndex.current,\r\n      });\r\n    }, []);\r\n\r\n    const init = useCallback(() => {\r\n      if (!dom.current) {\r\n        return;\r\n      }\r\n      if (!chart.current) {\r\n        chart.current = initChart(\r\n          dom.current,\r\n          theme || \"infographic\",\r\n          initOptions\r\n        );\r\n      }\r\n      if (group) {\r\n        chart.current.group = group;\r\n      }\r\n\r\n      if (loading) {\r\n        chart.current.showLoading(loadingOptions);\r\n      } else {\r\n        chart.current.hideLoading();\r\n      }\r\n\r\n      if (option) {\r\n        chart.current.setOption(\r\n          {\r\n            ...option,\r\n            tooltip: {\r\n              trigger: \"axis\",\r\n              backgroundColor: \"#000\",\r\n              borderColor: \"rgba(255,255,255,.2)\",\r\n              padding: [8, 8],\r\n              textStyle: {\r\n                color: \"#fff\",\r\n                fontSize: 14,\r\n              },\r\n              ...option.tooltip,\r\n            },\r\n          },\r\n          updateOptions\r\n        );\r\n        autoPlayHandler();\r\n      }\r\n    }, [\r\n      initOptions,\r\n      option,\r\n      theme,\r\n      group,\r\n      loading,\r\n      loadingOptions,\r\n      updateOptions,\r\n      autoPlayHandler,\r\n    ]);\r\n\r\n    const cleanup = useCallback(() => {\r\n      if (chart.current) {\r\n        chart.current.off(\"mouseover\", mouseHander);\r\n        chart.current.off(\"mouseout\", autoPlayHandler);\r\n        chart.current.dispose();\r\n        chart.current = undefined;\r\n      }\r\n    }, [autoPlayHandler, mouseHander]);\r\n\r\n    useEffect(() => {\r\n      init();\r\n      const { onResize } = autoresize;\r\n      const callback = () => {\r\n        chart.current?.resize();\r\n        onResize?.();\r\n      };\r\n      const resizeObserver = new ResizeObserver((entries) => {\r\n        if (!Array.isArray(entries) || !entries.length) {\r\n          return;\r\n        }\r\n        callback();\r\n      });\r\n\r\n      resizeObserver.observe(dom.current as HTMLDivElement);\r\n      return () => {\r\n        cleanup();\r\n        resizeObserver.disconnect();\r\n      };\r\n    }, [cleanup, init, autoresize]);\r\n\r\n    useEffect(() => {\r\n      if (chart.current) {\r\n        chart.current.on(\"mouseover\", mouseHander);\r\n        chart.current.on(\"mouseout\", autoPlayHandler);\r\n      }\r\n    }, [autoPlayHandler, mouseHander]);\r\n\r\n    return (\r\n      <div\r\n        className=\"cms-echarts\"\r\n        ref={dom}\r\n        style={{ width: \"100%\", height: \"100%\" }}\r\n      ></div>\r\n    );\r\n  },\r\n  (prevProps, nextProps) => {\r\n    if (JSON.stringify(prevProps) === JSON.stringify(nextProps)) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n);\r\n\r\nexport default Echarts;\r\n","import React, { FC } from \"react\";\r\nimport { getStyles } from \"@src/utils\";\r\nimport \"./index.scss\";\r\nimport { IPage } from \"@src/service\";\r\ninterface INavigationProps {\r\n  datas: IPage[];\r\n  selectedId: string;\r\n  onChange: (pageId: string) => void;\r\n  configureValue: IAnyObject;\r\n}\r\n\r\nconst Navigation: FC<INavigationProps> = ({\r\n  datas,\r\n  selectedId,\r\n  onChange,\r\n  configureValue,\r\n}) => {\r\n  return (\r\n    <div\r\n      className=\"cms-config-layout__navigation\"\r\n      style={getStyles(configureValue || {}, \"navigationStyle\")}\r\n    >\r\n      {datas.map((item) => (\r\n        <div\r\n          key={item.pageId}\r\n          onClick={() => onChange(item.pageId)}\r\n          className={item.pageId === selectedId ? \"is-active\" : \"\"}\r\n        >\r\n          {item.name}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React, { FC, useEffect, useMemo, useState } from \"react\";\r\nimport { Modal, ModalProps } from \"antd\";\r\nimport \"./index.scss\";\r\nimport { IPage, IProject, IWidget } from \"@src/service\";\r\nimport RenderWidget from \"../renderWidget\";\r\nimport RenderPage from \"../renderPage\";\r\nimport Navigation from \"../navigation\";\r\ninterface IPreviewDialogProps extends ModalProps {\r\n  pageType?: PageType;\r\n  data?: any;\r\n}\r\n\r\n// 微件渲染\r\nconst widget = (data: IWidget) => {\r\n  const [diffData, setDiffData] = useState<IWidget>(() => {\r\n    return data;\r\n  });\r\n  useEffect(() => {\r\n    setDiffData(data);\r\n  }, [data]);\r\n  return (\r\n    <RenderWidget\r\n      data={diffData}\r\n      configureValue={diffData?.configuration?.configureValue}\r\n      isDroppable={true}\r\n      isResizable={true}\r\n      staticed={true}\r\n      onChangeParams={(data, widgetId) => {\r\n        console.log(data, widgetId, \"data\");\r\n        setDiffData((state) => ({\r\n          ...state,\r\n          configuration: {\r\n            ...state?.configuration,\r\n            dataValue: {\r\n              ...state?.configuration?.dataValue,\r\n              params: {\r\n                ...state?.configuration?.dataValue?.params,\r\n                ...data,\r\n              },\r\n            },\r\n          },\r\n        }));\r\n      }}\r\n    />\r\n  );\r\n};\r\n// 渲染页面\r\nconst page = (data: IPage) => {\r\n  const [diffData, setDiffData] = useState<IPage>(() => {\r\n    return data;\r\n  });\r\n  useEffect(() => {\r\n    setDiffData(data);\r\n  }, [data]);\r\n\r\n  return (\r\n    <RenderPage\r\n      data={diffData || {}}\r\n      configureValue={diffData?.configuration?.configureValue}\r\n      widgets={diffData?.widgets || []}\r\n      onChangeParams={(data, widgetId) => {\r\n        console.log(data, widgetId, \"data\");\r\n        setDiffData((state) => {\r\n          const copy = JSON.parse(JSON.stringify(state));\r\n          const index = copy?.widgets.findIndex(\r\n            (item: IWidget) => item.widgetId === widgetId\r\n          );\r\n          if (index !== -1) {\r\n            copy.widgets[index] = {\r\n              ...copy.widgets[index],\r\n              configuration: {\r\n                ...copy.widgets[index]?.configuration,\r\n                dataValue: {\r\n                  ...copy.widgets[index]?.configuration?.dataValue,\r\n                  params: {\r\n                    ...copy.widgets[index]?.configuration?.dataValue?.params,\r\n                    ...data,\r\n                  },\r\n                },\r\n              },\r\n            };\r\n          }\r\n          return copy;\r\n        });\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\n// 渲染项目\r\nconst project = (data: IProject) => {\r\n  const [diffData, setDiffData] = useState<IProject>(() => {\r\n    return data;\r\n  });\r\n  const [pageId, setPageId] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setDiffData(data);\r\n    setPageId(data?.pages?.[0]?.pageId);\r\n  }, [data]);\r\n  console.log(diffData, \"diffData\");\r\n\r\n  const currentPage = useMemo(() => {\r\n    return diffData?.pages.find((item) => item.pageId === pageId);\r\n  }, [diffData?.pages, pageId]);\r\n  return (\r\n    <>\r\n      <RenderPage\r\n        data={diffData || {}}\r\n        configureValue={diffData?.configuration?.configureValue}\r\n        widgets={currentPage?.widgets || []}\r\n        onChangeParams={(data, widgetId) => {\r\n          const copy: IProject = JSON.parse(JSON.stringify(diffData));\r\n          // 当前页面\r\n          let currentPage = copy.pages.find((item) => item.pageId === pageId);\r\n          const index = currentPage?.widgets?.findIndex(\r\n            (item) => item.widgetId === widgetId\r\n          );\r\n          if (typeof index === \"number\") {\r\n            (currentPage as IPage).widgets[index] = {\r\n              ...(currentPage as IPage).widgets[index],\r\n              configuration: {\r\n                ...(currentPage as IPage).widgets[index]?.configuration,\r\n                dataValue: {\r\n                  ...(currentPage as IPage).widgets[index]?.configuration\r\n                    ?.dataValue,\r\n                  params: {\r\n                    ...(currentPage as IPage).widgets[index]?.configuration\r\n                      ?.dataValue?.params,\r\n                    ...data,\r\n                  },\r\n                },\r\n              },\r\n            };\r\n            setDiffData(copy);\r\n          }\r\n        }}\r\n      />\r\n      <Navigation\r\n        configureValue={data?.configuration?.configureValue}\r\n        datas={data?.pages}\r\n        selectedId={pageId as string}\r\n        onChange={(pageId: string) => {\r\n          setPageId(pageId);\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nconst PreviewDialog: FC<IPreviewDialogProps> = ({\r\n  open,\r\n  onClose,\r\n  title,\r\n  width,\r\n  height,\r\n  pageType = \"widget\",\r\n  data,\r\n}) => {\r\n  return (\r\n    <Modal\r\n      title={title}\r\n      open={open}\r\n      onClose={onClose}\r\n      onCancel={onClose}\r\n      centered\r\n      width=\"auto\"\r\n      footer={null}\r\n    >\r\n      <div\r\n        style={{\r\n          width: width + \"px\",\r\n          height: height + \"px\",\r\n          position: \"relative\",\r\n        }}\r\n        className=\"cms-preview-dialog\"\r\n      >\r\n        {pageType === \"widget\" ? widget(data) : null}\r\n        {pageType === \"page\" ? page(data) : null}\r\n        {pageType === \"project\" ? project(data) : null}\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default PreviewDialog;\r\n","import GridLayout from \"@src/layout/gridLayout\";\r\nimport PreviewLayout from \"@src/layout/previewLayout\";\r\nimport React, { FC, useCallback } from \"react\";\r\nimport RenderWidget from \"../renderWidget\";\r\nimport { Layout } from \"react-grid-layout\";\r\nimport { IWidget } from \"@src/service\";\r\n\r\ninterface IRenderPageProps {\r\n  data: IAnyObject;\r\n  configureValue: IAnyObject;\r\n  isDroppable?: boolean;\r\n  isResizable?: boolean;\r\n  staticed?: boolean;\r\n  selectedId?: string;\r\n  widgets: IWidget[];\r\n  onDrop?: (item: Layout, data: any, position: \"header\" | \"body\") => void;\r\n  onDragStop?: (item: Layout) => void;\r\n  onResizeStop?: (item: Layout) => void;\r\n  onClose?: (item: IAnyObject) => void;\r\n  transformScale?: number;\r\n  onChangeParams?: (data: IAnyObject, widgetId: string) => void;\r\n}\r\n\r\nconst RenderPage: FC<IRenderPageProps> = ({\r\n  data,\r\n  configureValue,\r\n  isDroppable = true,\r\n  isResizable = true,\r\n  staticed = true,\r\n  selectedId,\r\n  onDrop,\r\n  onDragStop,\r\n  onResizeStop,\r\n  onClose,\r\n  widgets,\r\n  transformScale,\r\n  onChangeParams,\r\n}) => {\r\n  const getlinkageParams = useCallback(\r\n    (widgetId: string) => {\r\n      let parentParams = {};\r\n      for (let i = 0; i < widgets.length; i++) {\r\n        if (\r\n          widgets[i]?.configuration?.dataValue?.linkageIds &&\r\n          widgets[i]?.configuration?.dataValue?.linkageIds.includes(widgetId)\r\n        ) {\r\n          parentParams = {\r\n            ...parentParams,\r\n            ...widgets[i]?.configuration?.dataValue?.params,\r\n          };\r\n        }\r\n      }\r\n      return parentParams;\r\n    },\r\n    [widgets]\r\n  );\r\n  return (\r\n    <PreviewLayout\r\n      data={data}\r\n      header={\r\n        <GridLayout\r\n          datas={widgets?.filter((item) => item.position === \"header\") || []}\r\n          selectedId={selectedId}\r\n          render={(data) => {\r\n            return (\r\n              <RenderWidget\r\n                data={data}\r\n                linkageParams={getlinkageParams(data.widgetId)}\r\n                transformScale={transformScale}\r\n                configureValue={configureValue}\r\n                onChangeParams={onChangeParams}\r\n              />\r\n            );\r\n          }}\r\n          configureValue={configureValue}\r\n          row={1}\r\n          column={configureValue?.horizontalNumber}\r\n          onDrop={(item, data) => onDrop?.(item, data, \"header\")}\r\n          isDroppable={isDroppable}\r\n          isResizable={isResizable}\r\n          staticed={staticed}\r\n          onDragStop={onDragStop}\r\n          onResizeStop={onResizeStop}\r\n          onClose={onClose}\r\n          transformScale={transformScale}\r\n        />\r\n      }\r\n      body={\r\n        <GridLayout\r\n          datas={widgets?.filter((item) => item.position === \"body\") || []}\r\n          selectedId={selectedId}\r\n          render={(data) => {\r\n            return (\r\n              <RenderWidget\r\n                transformScale={transformScale}\r\n                data={data}\r\n                linkageParams={getlinkageParams(data.widgetId)}\r\n                configureValue={configureValue}\r\n                onChangeParams={onChangeParams}\r\n              />\r\n            );\r\n          }}\r\n          configureValue={configureValue}\r\n          row={configureValue?.verticalNumber}\r\n          column={configureValue?.horizontalNumber}\r\n          onDrop={(item, data) => onDrop?.(item, data, \"body\")}\r\n          isDroppable={isDroppable}\r\n          isResizable={isResizable}\r\n          staticed={staticed}\r\n          onDragStop={onDragStop}\r\n          onResizeStop={onResizeStop}\r\n          onClose={onClose}\r\n          transformScale={transformScale}\r\n        />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default RenderPage;\r\n","import React, { memo, useCallback, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { waitTime } from \"@src/utils\";\r\ninterface IRequestProps {\r\n  // 类型\r\n  method: \"get\" | \"post\";\r\n  // 接口地址\r\n  url: string;\r\n  // 接口参数\r\n  params: string;\r\n  render: (loading: boolean, success: boolean, data: any) => any;\r\n}\r\n\r\nconst Request = memo((props: IRequestProps) => {\r\n  const { method, url, params, render } = props;\r\n  // 获取数据\r\n  const [data, setData] = useState<any>(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  const getData = useCallback(async () => {\r\n    if (url && method) {\r\n      setLoading(true);\r\n      await waitTime(2000);\r\n      await axios({\r\n        url: url,\r\n        method: method,\r\n        params: JSON.parse(params),\r\n      })\r\n        .then((res: any) => {\r\n          setLoading(false);\r\n          setSuccess(true);\r\n          setData(res.data.data || res.data);\r\n        })\r\n        .catch((res) => {\r\n          setLoading(false);\r\n          setSuccess(false);\r\n        });\r\n    }\r\n  }, [method, params, url]);\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [getData]);\r\n  return <>{render(loading, success, data)}</>;\r\n});\r\nexport default Request;\r\n","import React, { memo, useMemo } from \"react\";\r\nimport Echarts from \"@src/compoents/echarts\";\r\nimport { getStyles, handleData, handleEchartsOption } from \"@src/utils\";\r\ninterface ILine {\r\n  options: IAnyObject;\r\n  data: any;\r\n  field: string;\r\n}\r\n\r\nconst Line = memo((props: ILine) => {\r\n  const { options, data, field } = props;\r\n  // 处理echarts数据\r\n  const getOption = useMemo(() => {\r\n    const configuration = handleEchartsOption(options);\r\n    const currentData = data && data[field] ? data[field] : [];\r\n    const { legendData, xAxisData, yAxisData, series } =\r\n      handleData(currentData);\r\n    return {\r\n      ...configuration,\r\n      legend: {\r\n        ...configuration.legend,\r\n        data: legendData,\r\n      },\r\n      xAxis: {\r\n        ...configuration.xAxis,\r\n        data: xAxisData,\r\n      },\r\n      yAxis: {\r\n        ...configuration.yAxis,\r\n        data: yAxisData,\r\n      },\r\n      series: series\r\n        ? series.map((item) => ({\r\n            ...configuration.line.series,\r\n            ...item,\r\n          }))\r\n        : [],\r\n    };\r\n  }, [data, field, options]);\r\n  const style = useMemo(() => {\r\n    return getStyles(options);\r\n  }, [options]);\r\n  return (\r\n    <div style={{ ...style, width: \"100%\", height: \"100%\" }}>\r\n      <Echarts option={getOption} />\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Line;\r\n","import React, { memo, useMemo } from \"react\";\r\nimport Echarts from \"@src/compoents/echarts\";\r\nimport { getStyles, handleData, handleEchartsOption } from \"@src/utils\";\r\nimport * as echarts from \"echarts\";\r\nimport tinycolor from \"tinycolor2\";\r\ninterface IBar {\r\n  options: IAnyObject;\r\n  data: any;\r\n  field: string;\r\n}\r\n\r\nconst Bar = memo((props: IBar) => {\r\n  const { options, data, field } = props;\r\n  // 处理echarts数据\r\n  const getOption = useMemo(() => {\r\n    const configuration = handleEchartsOption(options);\r\n    const currentData = data && data[field] ? data[field] : [];\r\n    const { legendData, xAxisData, yAxisData, series } =\r\n      handleData(currentData);\r\n    // 当前系列颜色\r\n    const currentColor = (index: number) => {\r\n      return configuration.color[index % (configuration.color.length - 1)];\r\n    };\r\n\r\n    return {\r\n      ...configuration,\r\n      legend: {\r\n        ...configuration.legend,\r\n        data: legendData,\r\n      },\r\n      xAxis: {\r\n        ...configuration.xAxis,\r\n        data: xAxisData,\r\n      },\r\n      yAxis: {\r\n        ...configuration.yAxis,\r\n        data: yAxisData,\r\n      },\r\n      series: series\r\n        ? series.map((item, index) => ({\r\n            ...configuration.bar.series,\r\n            ...item,\r\n            itemStyle: {\r\n              borderRadius: options?.barBorderRadius || 0,\r\n              color: !options.barGradation\r\n                ? currentColor(index)\r\n                : new echarts.graphic.LinearGradient(\r\n                    0,\r\n                    0,\r\n                    options.barOrient === \"vertical\" ? 1 : 0,\r\n                    options.barOrient === \"vertical\" ? 0 : 1,\r\n                    [\r\n                      {\r\n                        offset: 0,\r\n                        color: tinycolor(currentColor(index))\r\n                          .lighten(15)\r\n                          .toString(),\r\n                      },\r\n                      {\r\n                        offset: 0.5,\r\n                        color: currentColor(index),\r\n                      },\r\n                      {\r\n                        offset: 1,\r\n                        color: tinycolor(currentColor(index))\r\n                          .darken(15)\r\n                          .toString(),\r\n                      },\r\n                    ]\r\n                  ),\r\n            },\r\n          }))\r\n        : [],\r\n    };\r\n  }, [data, field, options]);\r\n  const style = useMemo(() => {\r\n    return getStyles(options);\r\n  }, [options]);\r\n  return (\r\n    <div style={{ ...style, width: \"100%\", height: \"100%\" }}>\r\n      <Echarts option={getOption} />\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Bar;\r\n","import React, { memo, useMemo } from \"react\";\r\nimport Echarts from \"@src/compoents/echarts\";\r\nimport { getStyles, handleData, handleEchartsOption } from \"@src/utils\";\r\ninterface IPie {\r\n  options: IAnyObject;\r\n  data: any;\r\n  field: string;\r\n}\r\n\r\nconst Pie = memo((props: IPie) => {\r\n  const { options, data, field } = props;\r\n  // 处理echarts数据\r\n  const getOption = useMemo(() => {\r\n    const configuration = handleEchartsOption(options);\r\n    const currentData = data && data[field] ? data[field] : [];\r\n    const { legendData, xAxisData, yAxisData, series } = handleData(\r\n      currentData,\r\n      \"pie\"\r\n    );\r\n    return {\r\n      ...configuration,\r\n      tooltip: {\r\n        trigger: \"item\",\r\n      },\r\n      legend: {\r\n        ...configuration.legend,\r\n        data: legendData,\r\n        formatter: function (name: string) {\r\n          const isOnlyOne = data.series.length === 1;\r\n          let arr = [\"{a|\" + name + \"}\"];\r\n          if (isOnlyOne && options.legendTotal) {\r\n            // 添加\r\n            let total = 0;\r\n            let target = 0;\r\n            for (let i = 0; i < data.series[0].data.length; i++) {\r\n              total += data.series[0].data[i].value;\r\n              if (data.series[0].data[i].name === name) {\r\n                target = data.series[0].data[i].value;\r\n              }\r\n            }\r\n            arr.push(\"{b|\" + ((target / total) * 100).toFixed(2) + \"%}\");\r\n          }\r\n\r\n          return arr.join(\"  \");\r\n        },\r\n        textStyle: {\r\n          // 添加\r\n          padding: [8, 0, 0, 0],\r\n          rich: {\r\n            a: {\r\n              fontSize: 14,\r\n              width: 80,\r\n              color: \"#fff\",\r\n            },\r\n            b: {\r\n              fontSize: 14,\r\n              width: 70,\r\n              align: \"right\",\r\n              color: \"#fff\",\r\n            },\r\n          },\r\n        },\r\n      },\r\n      xAxis: {\r\n        ...configuration.xAxis,\r\n        data: xAxisData,\r\n      },\r\n      yAxis: {\r\n        ...configuration.yAxis,\r\n        data: yAxisData,\r\n      },\r\n      series: series\r\n        ? series.map((item, index) => ({\r\n            ...configuration.pie.series,\r\n            ...item,\r\n            data: currentData[index].data,\r\n            itemStyle: {\r\n              borderWidth: options.seriesItemStyleColorBorderWidth,\r\n              borderColor: options.seriesItemStyleBorderColor,\r\n              borderRadius: options.seriesItemStyleColorBorderRadius,\r\n            },\r\n            center: [\r\n              `${options.seriesHorizontalPosition}%`,\r\n              `${options.seriesVerticalPosition}%`,\r\n            ],\r\n            emphasis: {\r\n              scaleSize: options.emphasisScaleSize,\r\n              label: {\r\n                show: true,\r\n                fontSize: options.emphasisLabelFontSize,\r\n                fontWeight: options.emphasisLabelFontWeight,\r\n                color: options.emphasisLabelColor,\r\n              },\r\n              itemStyle: {\r\n                shadowBlur: options.emphasisStyleShadowBlur,\r\n                shadowOffsetX: options.emphasisStyleShadowOffsetX,\r\n                shadowOffsetY: options.emphasisStyleShadowOffsetY,\r\n                shadowColor: options.emphasisStyleShadowColor,\r\n              },\r\n            },\r\n          }))\r\n        : [],\r\n    };\r\n  }, [data, field, options]);\r\n  const style = useMemo(() => {\r\n    return getStyles(options);\r\n  }, [options]);\r\n  return (\r\n    <div style={{ ...style, width: \"100%\", height: \"100%\" }}>\r\n      <Echarts option={getOption} />\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Pie;\r\n","import React, { FC, useMemo } from \"react\";\r\nimport { Image } from \"antd\";\r\nimport { getStyles } from \"@src/utils\";\r\nimport \"./index.scss\";\r\ninterface IBaseImage {\r\n  data: any;\r\n  field: string;\r\n  options: any;\r\n}\r\nexport const BaseImage: FC<IBaseImage> = ({ data, field, options }) => {\r\n  const baseTextStyle = useMemo(() => {\r\n    return getStyles(options);\r\n  }, [options]);\r\n  return (\r\n    <div className=\"cms-base-image\" style={baseTextStyle}>\r\n      <Image\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        src={\r\n          data && data[field]\r\n            ? data[field]\r\n            : \"https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png\"\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BaseImage;\r\n","import React, { FC, ReactNode, useEffect, useMemo, useRef } from \"react\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport { Autoplay, Pagination, Navigation } from \"swiper/modules\";\r\n\r\nimport \"swiper/css\";\r\nimport \"swiper/css/pagination\";\r\nimport \"swiper/css/navigation\";\r\nimport \"./index.scss\";\r\nimport { SwiperModule } from \"swiper/types\";\r\ninterface ICustomSwiper {\r\n  direction?: \"vertical\" | \"horizontal\";\r\n  datas?: IAnyObject[];\r\n  loop?: boolean;\r\n  spaceBetween?: number;\r\n  slidesPerView?: number;\r\n  rows?: number;\r\n  pagination?: boolean;\r\n  navigation?: boolean;\r\n  autoplay?: boolean;\r\n  render?: (item: IAnyObject, index?: number) => ReactNode;\r\n}\r\nexport const CustomSwiper: FC<ICustomSwiper> = ({\r\n  loop = false,\r\n  spaceBetween = 0,\r\n  slidesPerView = 1,\r\n  rows = 1,\r\n  pagination = false,\r\n  navigation = false,\r\n  autoplay = false,\r\n  datas = [],\r\n  direction = \"horizontal\",\r\n  render,\r\n}) => {\r\n  const modules = useMemo(() => {\r\n    let arr: SwiperModule[] = [];\r\n    autoplay && arr.push(Autoplay);\r\n    pagination && arr.push(Pagination);\r\n    navigation && arr.push(Navigation);\r\n    return arr;\r\n  }, [autoplay, navigation, pagination]);\r\n\r\n  const swiperRef = useRef<any>(null);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      if (autoplay) {\r\n        swiperRef.current?.swiper?.autoplay?.start();\r\n      } else {\r\n        swiperRef.current?.swiper?.autoplay?.stop();\r\n      }\r\n    }, 100);\r\n  }, [autoplay]);\r\n  return (\r\n    <div className=\"cms-swiper\">\r\n      <Swiper\r\n        ref={swiperRef}\r\n        loop={loop}\r\n        spaceBetween={spaceBetween}\r\n        slidesPerView={slidesPerView}\r\n        modules={modules}\r\n        navigation={navigation}\r\n        pagination={pagination}\r\n        direction={direction}\r\n      >\r\n        {new Array(Math.ceil(datas.length / rows))\r\n          .fill(null)\r\n          .map((_, index) => (\r\n            <SwiperSlide key={index}>\r\n              {new Array(rows).fill(null).map((_, subIndex) => (\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    height: `${100 / rows}%`,\r\n                    marginTop: `${spaceBetween}px`,\r\n                  }}\r\n                  key={subIndex}\r\n                >\r\n                  {render &&\r\n                    index * rows + subIndex < datas.length &&\r\n                    render(\r\n                      datas?.[index * rows + subIndex],\r\n                      index * rows + subIndex\r\n                    )}\r\n                </div>\r\n              ))}\r\n            </SwiperSlide>\r\n          ))}\r\n      </Swiper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomSwiper;\r\n","import React, { memo, useMemo } from \"react\";\r\nimport CustomSwiper from \"@src/compoents/swiper\";\r\nimport \"./index.scss\";\r\nimport { getStyles } from \"@src/utils\";\r\ninterface IBaseBanner {\r\n  data: any;\r\n  field: string;\r\n  options: any;\r\n}\r\nexport const BaseBanner = memo((option: IBaseBanner) => {\r\n  const { data, field, options } = option;\r\n  const baseTextStyle = useMemo(() => {\r\n    return getStyles(options);\r\n  }, [options]);\r\n  return (\r\n    <div className=\"cms-banner\" style={baseTextStyle}>\r\n      <CustomSwiper\r\n        loop={options.loop || false}\r\n        autoplay={options.autoplay || false}\r\n        datas={data[field] || []}\r\n        rows={options.rows || 1}\r\n        slidesPerView={options.slidesPerView || 1}\r\n        spaceBetween={options.spaceBetween || 0}\r\n        pagination={options.pagination || false}\r\n        navigation={options.navigation || false}\r\n        render={(item) => {\r\n          return (\r\n            <img src={item.src} alt={item.name} width=\"100%\" height=\"100%\" />\r\n          );\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n});\r\n","import React, { memo, useMemo } from \"react\";\r\nimport CustomSwiper from \"@src/compoents/swiper\";\r\nimport \"./index.scss\";\r\nimport { getStyles } from \"@src/utils\";\r\ninterface IBaseBanner {\r\n  data: any;\r\n  field: string;\r\n  options: any;\r\n}\r\n\r\nconst Table = memo((props: IBaseBanner) => {\r\n  const { data, field, options } = props;\r\n  const baseTextStyle = useMemo(() => {\r\n    return getStyles(options);\r\n  }, [options]);\r\n\r\n  const datas = useMemo(() => {\r\n    // 这里主要处理隔行换色\r\n    if (\r\n      data[field] &&\r\n      data[field].length > options.slidesPerView &&\r\n      data[field].length % 2 === 1\r\n    ) {\r\n      return [...data[field], ...data[field]];\r\n    } else {\r\n      return data[field];\r\n    }\r\n  }, [data, field, options.slidesPerView]);\r\n\r\n  const renderItem = (data: any, components: string) => {\r\n    switch (components) {\r\n      case \"progress\": {\r\n        return (\r\n          <div\r\n            className=\"cms-table__progress\"\r\n            style={{ background: options.progressBackgroundColor }}\r\n          >\r\n            <div\r\n              style={{\r\n                width: data,\r\n                background: options.progressForegroundColor,\r\n              }}\r\n            ></div>\r\n          </div>\r\n        );\r\n      }\r\n      default: {\r\n        return <>{data}</>;\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"cms-table\" style={baseTextStyle}>\r\n      <div\r\n        className=\"cms-table__header\"\r\n        style={{\r\n          background: options.tableHeaderBackgroudColor,\r\n          color: options.tableHeaderColor,\r\n          display: options.tableShowHeader ? \"flex\" : \"none\",\r\n        }}\r\n      >\r\n        {options.tableColumn.map((item: any, index: number) => (\r\n          <div\r\n            key={index}\r\n            className=\"cms-table__cell\"\r\n            style={{\r\n              width: `${item.width}px`,\r\n              flex: item.width ? \"none\" : 1,\r\n              justifyContent: item.align === \"right\" ? \"end\" : \"start\",\r\n            }}\r\n          >\r\n            {item.title}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div\r\n        className=\"cms-table__body\"\r\n        style={{ color: options.tableTbodyColor }}\r\n      >\r\n        <CustomSwiper\r\n          loop={options.loop || false}\r\n          autoplay={options.autoplay || false}\r\n          datas={datas}\r\n          rows={options.rows || 1}\r\n          slidesPerView={options.slidesPerView || 1}\r\n          spaceBetween={options.spaceBetween || 0}\r\n          direction=\"vertical\"\r\n          render={(item, index) => {\r\n            return (\r\n              <div\r\n                key={index}\r\n                className=\"cms-table__row\"\r\n                style={\r\n                  (index as number) % 2 === 0\r\n                    ? getStyles(options, \"tableTbodyOdd\")\r\n                    : getStyles(options, \"tableTbodyEven\")\r\n                }\r\n              >\r\n                {options.tableColumn.map((subItem: any, subIndex: number) => (\r\n                  <div\r\n                    key={subIndex}\r\n                    className=\"cms-table__cell\"\r\n                    style={{\r\n                      width: `${subItem.width}px`,\r\n                      flex: subItem.width ? \"none\" : 1,\r\n                      justifyContent:\r\n                        subItem.align === \"right\" ? \"end\" : \"start\",\r\n                    }}\r\n                  >\r\n                    {subItem.dataIndex === \"index\" ? (\r\n                      <span\r\n                        className={`cms-table__serialNumber ${\r\n                          options.serialNumberRank ? \"is-\" + index : \"\"\r\n                        }`}\r\n                        style={getStyles(options, \"serialNumber\")}\r\n                      >\r\n                        {(index as number) + 1}\r\n                      </span>\r\n                    ) : (\r\n                      renderItem(item[subItem.dataIndex], subItem.components)\r\n                    )}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            );\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Table;\r\n","import { BaseText, CountUp, MessageText, DateText } from \"./text\";\r\nimport Line from \"./line\";\r\nimport Bar from \"./bar\";\r\nimport Pie from \"./pie\";\r\nimport { BaseImage, BaseBanner } from \"./image\";\r\nimport Table from \"./table\";\r\nimport { FormRadio, FormSelect } from \"./form\";\r\n\r\nconst elements: any = {\r\n  BaseText,\r\n  Line,\r\n  Bar,\r\n  CountUp,\r\n  Pie,\r\n  MessageText,\r\n  BaseImage,\r\n  BaseBanner,\r\n  DateText,\r\n  Table,\r\n  FormRadio,\r\n  FormSelect,\r\n};\r\nexport default elements;\r\n","import { getStyles } from \"@src/utils\";\r\nimport React, { FC, useMemo } from \"react\";\r\nimport \"./index.scss\";\r\n\r\ninterface IBaseText {\r\n  data: any;\r\n  field: string;\r\n  options: any;\r\n}\r\n// 基础文本框\r\nexport const BaseText: FC<IBaseText> = ({ data, field, options }) => {\r\n  const baseTextStyle = useMemo(() => {\r\n    return getStyles(options);\r\n  }, [options]);\r\n  const iconStyle = useMemo(() => {\r\n    return getStyles(options, \"iconStyle\");\r\n  }, [options]);\r\n  return (\r\n    <div className=\"cms-base-text\" style={baseTextStyle}>\r\n      {options.iconStyleSelect ? (\r\n        <span\r\n          className=\"cms-icon\"\r\n          style={iconStyle}\r\n          dangerouslySetInnerHTML={{ __html: options.iconStyleSelect }}\r\n        ></span>\r\n      ) : null}\r\n\r\n      {data && data[field] ? data[field] : \"文本框\"}\r\n    </div>\r\n  );\r\n};\r\n","import { getStyles } from \"@src/utils\";\r\nimport React, { FC, useCallback, useEffect, useMemo, useRef } from \"react\";\r\nimport \"./index.scss\";\r\ninterface ICountup {\r\n  data: any;\r\n  field: string;\r\n  options: any;\r\n}\r\n\r\nexport const CountUp: FC<ICountup> = ({ data, field, options }) => {\r\n  const countupRef = useRef<HTMLDivElement>(null);\r\n  const countUpAnimRef = useRef<any>(null);\r\n\r\n  const style = useMemo(() => {\r\n    return getStyles(options);\r\n  }, [options]);\r\n\r\n  const countUpTextStyle = useMemo(() => {\r\n    return getStyles(options, \"countUpStyle\");\r\n  }, [options]);\r\n\r\n  const addonBeforeTextStyle = useMemo(() => {\r\n    return getStyles(options, \"addonBeforeStyle\");\r\n  }, [options]);\r\n\r\n  const addonAfterTextStyle = useMemo(() => {\r\n    return getStyles(options, \"addonAfterStyle\");\r\n  }, [options]);\r\n\r\n  const initCountUp = useCallback(async () => {\r\n    const countUpModule = await import(\"countup.js\");\r\n    countUpAnimRef.current = new countUpModule.CountUp(\r\n      countupRef.current as HTMLDivElement,\r\n      data[field],\r\n      {\r\n        decimalPlaces: 2,\r\n      }\r\n    );\r\n    if (!countUpAnimRef.current.error) {\r\n      countUpAnimRef.current.start();\r\n    } else {\r\n      console.error(countUpAnimRef.current.error);\r\n    }\r\n  }, [data, field]);\r\n  useEffect(() => {\r\n    initCountUp();\r\n    return () => {\r\n      countUpAnimRef.current = null;\r\n    };\r\n  }, [initCountUp]);\r\n  return (\r\n    <div className=\"cms-countUp\" style={style}>\r\n      {options.addonBefore && (\r\n        <div className=\"cms-countUp__before\" style={addonBeforeTextStyle}>\r\n          {options.addonBefore}\r\n        </div>\r\n      )}\r\n      <div\r\n        className=\"cms-countUp__content\"\r\n        ref={countupRef}\r\n        style={countUpTextStyle}\r\n      ></div>\r\n      {options.addonAfter && (\r\n        <div className=\"cms-countUp__aftter\" style={addonAfterTextStyle}>\r\n          {options.addonAfter}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import { getStyles } from \"@src/utils\";\r\nimport React, { FC, useMemo } from \"react\";\r\nimport Marquee from \"react-fast-marquee\";\r\nimport \"./index.scss\";\r\n\r\ninterface IMessageText {\r\n  data: any;\r\n  field: string;\r\n  options: any;\r\n}\r\n\r\nexport const MessageText: FC<IMessageText> = ({ data, field, options }) => {\r\n  const baseTextStyle = useMemo(() => {\r\n    return getStyles(options);\r\n  }, [options]);\r\n  const iconStyle = useMemo(() => {\r\n    return getStyles(options, \"iconStyle\");\r\n  }, [options]);\r\n  return (\r\n    <div className=\"cms-message-text\" style={baseTextStyle}>\r\n      <span className=\"cms-icon\" style={iconStyle}>\r\n        &#xe787;\r\n      </span>\r\n      <Marquee pauseOnHover gradient={false}>\r\n        {data && data[field]\r\n          ? data[field]\r\n          : \"I can be a React component, multiple React components, or just some text.\"}\r\n      </Marquee>\r\n    </div>\r\n  );\r\n};\r\n","import React, { FC, useCallback, useEffect, useRef, useState } from \"react\";\r\nimport { fmtDate, getStyles } from \"@src/utils\";\r\n\r\ninterface IDateText {\r\n  options: IAnyObject;\r\n}\r\n\r\nexport const DateText: FC<IDateText> = ({ options }) => {\r\n  const timer = useRef<any>(null);\r\n  // 初始化时间\r\n  const [text, setText] = useState(() => {\r\n    return fmtDate(new Date().getTime(), \"yyyy-MM-dd hh:mm:ss\");\r\n  });\r\n  // 获取时间\r\n  const getText = useCallback(() => {\r\n    setText(\r\n      fmtDate(new Date().getTime(), options.fmtDate || \"yyyy-MM-dd hh:mm:ss\")\r\n    );\r\n  }, [options.fmtDate]);\r\n\r\n  useEffect(() => {\r\n    timer.current = setInterval(getText, 1000);\r\n    return () => {\r\n      clearInterval(timer.current);\r\n    };\r\n  }, [timer, getText]);\r\n  return <div style={getStyles(options)}>{text}</div>;\r\n};\r\n","import { Radio, RadioChangeEvent } from \"antd\";\r\nimport React, { FC, useMemo } from \"react\";\r\nimport \"./index.scss\";\r\ninterface IFormRadio {\r\n  options: IAnyObject;\r\n  data: any;\r\n  field: string;\r\n  other?: IAnyObject;\r\n}\r\n\r\nexport const FormRadio: FC<IFormRadio> = ({ options, data, field, other }) => {\r\n  const datas = useMemo(() => {\r\n    return data && data[field]\r\n      ? Array.isArray(data[field])\r\n        ? data[field]\r\n        : []\r\n      : [];\r\n  }, [data, field]);\r\n  const onChange = (e: RadioChangeEvent) => {\r\n    other?.onChangeHandler?.(e.target.value);\r\n  };\r\n\r\n  const defaultValue = useMemo(() => {\r\n    return (\r\n      other?.params?.[other?.paramName] || (datas.length ? datas[0].value : \"\")\r\n    );\r\n  }, [datas, other?.paramName, other?.params]);\r\n  return (\r\n    <div\r\n      className=\"cms-form__radio\"\r\n      style={{ justifyContent: options.radioTextAlign }}\r\n    >\r\n      <Radio.Group\r\n        value={defaultValue}\r\n        size={options?.radioSize}\r\n        onChange={onChange}\r\n        optionType={options?.radioOptionType || \"default\"}\r\n      >\r\n        {datas.map((item) => (\r\n          <Radio value={item.value} key={item.value}>\r\n            {item.label}\r\n          </Radio>\r\n        ))}\r\n      </Radio.Group>\r\n    </div>\r\n  );\r\n};\r\n","import { Select } from \"antd\";\r\nimport React, { FC, useMemo } from \"react\";\r\nimport \"./index.scss\";\r\ninterface IFormRadio {\r\n  options: IAnyObject;\r\n  data: any;\r\n  field: string;\r\n  other?: IAnyObject;\r\n}\r\n\r\nexport const FormSelect: FC<IFormRadio> = ({ options, data, field, other }) => {\r\n  const datas = useMemo(() => {\r\n    return data && data[field]\r\n      ? Array.isArray(data[field])\r\n        ? data[field]\r\n        : []\r\n      : [];\r\n  }, [data, field]);\r\n  const onChange = (e: any) => {\r\n    other?.onChangeHandler?.(e);\r\n  };\r\n\r\n  const defaultValue = useMemo(() => {\r\n    return (\r\n      other?.params?.[other?.paramName] || (datas.length ? datas[0].value : \"\")\r\n    );\r\n  }, [datas, other?.paramName, other?.params]);\r\n  return (\r\n    <div\r\n      className=\"cms-form__select\"\r\n      style={{ justifyContent: options.radioTextAlign }}\r\n    >\r\n      <Select\r\n        value={defaultValue}\r\n        size={options?.radioSize}\r\n        onChange={onChange}\r\n      >\r\n        {datas.map((item) => (\r\n          <Select.Option value={item.value} key={item.value}>\r\n            {item.label}\r\n          </Select.Option>\r\n        ))}\r\n      </Select>\r\n    </div>\r\n  );\r\n};\r\n","import React, { FC, useEffect, useState } from \"react\";\r\nimport elements from \"@src/elements\";\r\nimport { capitalizeFirstLetter } from \"@src/utils\";\r\n\r\ninterface IRenderElementProps {\r\n  data: IAnyObject;\r\n  realData?: IAnyObject;\r\n  params?: IAnyObject;\r\n  widgetId?: string;\r\n  onChangeParams?: (data: IAnyObject, widgetId: string) => void;\r\n}\r\n\r\nconst RenderElement: FC<IRenderElementProps> = ({\r\n  data,\r\n  realData,\r\n  params,\r\n  onChangeParams,\r\n  widgetId,\r\n}) => {\r\n  const [isRender, setIsRender] = useState(false);\r\n  useEffect(() => {\r\n    const timmer = setTimeout(() => {\r\n      setIsRender(true);\r\n    }, 300);\r\n    return () => {\r\n      clearTimeout(timmer);\r\n    };\r\n  }, []);\r\n  if (!isRender) return null;\r\n  if (data.element && elements[capitalizeFirstLetter(data.element)]) {\r\n    return React.createElement(elements[capitalizeFirstLetter(data.element)], {\r\n      options: data.configuration.configureValue,\r\n      data: data.configuration?.dataValue?.useInterface\r\n        ? realData || {}\r\n        : data.configuration?.dataValue?.mock,\r\n      field: data.configuration?.dataValue?.field,\r\n      other:\r\n        data.type === \"form\"\r\n          ? {\r\n              // 表单变化时向外传递的函数\r\n              onChangeHandler: (value: any) => {\r\n                onChangeParams?.(\r\n                  {\r\n                    [data.configuration?.dataValue?.paramName]: value,\r\n                  },\r\n                  widgetId as string\r\n                );\r\n              },\r\n              // 接口参数\r\n              params: params || {},\r\n              // 表单组件值需要保存的字段名，即params接口参数里的字段名\r\n              paramName: data.configuration?.dataValue?.paramName,\r\n            }\r\n          : null,\r\n    });\r\n  }\r\n  return <div>你访问的组件不存在请联系售后人员</div>;\r\n};\r\n\r\nexport default RenderElement;\r\n","import React, { FC, useEffect, useState } from \"react\";\r\nimport Request from \"@src/compoents/request\";\r\nimport { Spin } from \"antd\";\r\nimport PreviewLayout from \"@src/layout/previewLayout\";\r\nimport GridLayout from \"@src/layout/gridLayout\";\r\nimport { IElement } from \"@src/service\";\r\nimport RenderElement from \"../renderElement\";\r\nimport {\r\n  WIDGET_BODY_COLUMN,\r\n  WIDGET_BODY_GAP,\r\n  WIDGET_BODY_ROW,\r\n  WIDGET_HEADER_COLUMN,\r\n  WIDGET_HEADER_GAP,\r\n  WIDGET_HEADER_ROW,\r\n} from \"@src/core/enums/access.enums\";\r\nimport { Layout } from \"react-grid-layout\";\r\n\r\ninterface IRenderWidgetProps {\r\n  data: IAnyObject;\r\n  configureValue: IAnyObject;\r\n  isDroppable?: boolean;\r\n  isResizable?: boolean;\r\n  staticed?: boolean;\r\n  selectedId?: string;\r\n  onDrop?: (item: Layout, data: any, position: \"header\" | \"body\") => void;\r\n  onDragStop?: (item: Layout) => void;\r\n  onResizeStop?: (item: Layout) => void;\r\n  onClose?: (item: IAnyObject) => void;\r\n  onChangeParams?: (data: IAnyObject, widgetId: string) => void;\r\n  transformScale?: number;\r\n  linkageParams?: IAnyObject;\r\n}\r\n\r\nconst RenderWidget: FC<IRenderWidgetProps> = ({\r\n  data,\r\n  configureValue,\r\n  isDroppable = true,\r\n  isResizable = true,\r\n  staticed = true,\r\n  selectedId,\r\n  onDrop,\r\n  onDragStop,\r\n  onResizeStop,\r\n  onClose,\r\n  transformScale = 1,\r\n  onChangeParams,\r\n  linkageParams = {},\r\n}) => {\r\n  const [isRender, setIsRender] = useState(false);\r\n  useEffect(() => {\r\n    const timmer = setTimeout(() => {\r\n      setIsRender(true);\r\n    }, 200);\r\n    return () => {\r\n      clearTimeout(timmer);\r\n    };\r\n  }, []);\r\n  return (\r\n    <>\r\n      {isRender ? (\r\n        <Request\r\n          method={data?.configuration?.dataValue?.method}\r\n          url={data?.configuration?.dataValue?.url}\r\n          params={JSON.stringify({\r\n            ...(data?.configuration?.dataValue?.params || {}),\r\n            ...linkageParams,\r\n          })}\r\n          render={(loading: boolean, success: boolean, realData: any) => {\r\n            return (\r\n              <>\r\n                {loading ? (\r\n                  <div\r\n                    style={{\r\n                      position: \"absolute\",\r\n                      left: 0,\r\n                      right: 0,\r\n                      top: 0,\r\n                      bottom: 0,\r\n                      width: data?.configuration?.width + \"px\",\r\n                      height: data?.configuration?.height + \"px\",\r\n                      zIndex: 1000,\r\n                    }}\r\n                  >\r\n                    <Spin\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        left: \"50%\",\r\n                        top: \"50%\",\r\n                        transform: \"tranlate(-50%, -50%)\",\r\n                        zIndex: 1000,\r\n                      }}\r\n                    />\r\n                  </div>\r\n                ) : null}\r\n                <PreviewLayout\r\n                  data={data}\r\n                  header={\r\n                    <GridLayout\r\n                      datas={\r\n                        data?.elements.filter(\r\n                          (item: IElement) => item.position === \"header\"\r\n                        ) || []\r\n                      }\r\n                      transformScale={transformScale}\r\n                      selectedId={selectedId}\r\n                      configureValue={configureValue}\r\n                      column={WIDGET_HEADER_COLUMN}\r\n                      row={WIDGET_HEADER_ROW}\r\n                      gap={WIDGET_HEADER_GAP}\r\n                      render={(subData) => (\r\n                        <RenderElement\r\n                          data={subData}\r\n                          realData={realData}\r\n                          widgetId={data.widgetId}\r\n                          params={data?.configuration?.dataValue?.params}\r\n                          onChangeParams={onChangeParams}\r\n                        />\r\n                      )}\r\n                      isDroppable={isDroppable}\r\n                      isResizable={isResizable}\r\n                      staticed={staticed}\r\n                      onDrop={(item, data) => onDrop?.(item, data, \"header\")}\r\n                      onDragStop={onDragStop}\r\n                      onResizeStop={onResizeStop}\r\n                      onClose={onClose}\r\n                    />\r\n                  }\r\n                  body={\r\n                    <GridLayout\r\n                      configureValue={configureValue}\r\n                      datas={\r\n                        data?.elements.filter(\r\n                          (item: IElement) => item.position === \"body\"\r\n                        ) || []\r\n                      }\r\n                      transformScale={transformScale}\r\n                      selectedId={selectedId}\r\n                      column={WIDGET_BODY_COLUMN}\r\n                      row={WIDGET_BODY_ROW}\r\n                      gap={WIDGET_BODY_GAP}\r\n                      render={(subData) => (\r\n                        <RenderElement\r\n                          data={subData}\r\n                          realData={realData}\r\n                          widgetId={data.widgetId}\r\n                          params={data?.configuration?.dataValue?.params}\r\n                          onChangeParams={onChangeParams}\r\n                        />\r\n                      )}\r\n                      isDroppable={isDroppable}\r\n                      isResizable={isResizable}\r\n                      staticed={staticed}\r\n                      onDrop={(item, data) => onDrop?.(item, data, \"body\")}\r\n                      onDragStop={onDragStop}\r\n                      onResizeStop={onResizeStop}\r\n                      onClose={onClose}\r\n                    />\r\n                  }\r\n                />\r\n              </>\r\n            );\r\n          }}\r\n        />\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RenderWidget;\r\n","import React, { FC } from \"react\";\r\nimport {\r\n  Modal,\r\n  ModalProps,\r\n  Form,\r\n  type FormProps,\r\n  Input,\r\n  Button,\r\n  message,\r\n} from \"antd\";\r\nimport { PAGETYPENAME } from \"@src/core/enums/access.enums\";\r\n\r\ninterface IModifyNameDialog extends ModalProps {\r\n  onClose: () => void;\r\n  // 名称\r\n  name: string;\r\n  // 类型\r\n  pageType: PageType;\r\n  // 修改名称成功函数\r\n  modifyNameSuccessHander?: (name: string) => void;\r\n}\r\n\r\ntype FieldType = {\r\n  name: string;\r\n};\r\n\r\nconst ModifyNameDialog: FC<IModifyNameDialog> = ({\r\n  name,\r\n  open,\r\n  onClose,\r\n  pageType,\r\n  modifyNameSuccessHander,\r\n}) => {\r\n  console.log(pageType, \"pageType\");\r\n  const onFinish: FormProps<FieldType>[\"onFinish\"] = (values) => {\r\n    modifyNameSuccessHander?.(values.name);\r\n    message.success(\"保存成功\");\r\n    onClose();\r\n  };\r\n  return (\r\n    <Modal\r\n      open={open}\r\n      onClose={onClose}\r\n      onCancel={onClose}\r\n      footer={null}\r\n      title={`${name ? \"修改\" : \"新增\"}${PAGETYPENAME[pageType]}名称`}\r\n      destroyOnClose\r\n    >\r\n      <Form\r\n        onFinish={onFinish}\r\n        initialValues={{ name: name || \"\" }}\r\n        autoComplete=\"off\"\r\n      >\r\n        <Form.Item<FieldType>\r\n          name=\"name\"\r\n          rules={[\r\n            { required: true, message: `请输入${PAGETYPENAME[pageType]}名称` },\r\n          ]}\r\n        >\r\n          <Input placeholder={`请输入${PAGETYPENAME[pageType]}名称`} />\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\" block>\r\n            保存\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ModifyNameDialog;\r\n","import React, { FC, useContext, useState } from \"react\";\r\nimport \"./index.scss\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport ModifyNameDialog from \"@src/compoents/modifyNameDialog\";\r\nimport { LocaleContext } from \"@src/core/i18n/localeContent\";\r\n\r\ninterface IConfigLayoutHeader {\r\n  // 类型\r\n  pageType: PageType;\r\n  // 名称\r\n  name?: string;\r\n  // 页面logo\r\n  logo?: string;\r\n  // 预览函数\r\n  previewHandler?: () => void;\r\n  // 发布函数\r\n  publishHandler?: () => void;\r\n  // 修改名称成功函数\r\n  modifyNameSuccessHander?: (name: string) => void;\r\n}\r\n\r\nexport const ConfigLayoutHeader: FC<IConfigLayoutHeader> = ({\r\n  name,\r\n  logo,\r\n  pageType,\r\n  modifyNameSuccessHander,\r\n  previewHandler,\r\n  publishHandler,\r\n}) => {\r\n  const { $t } = useContext(LocaleContext);\r\n  const navigate = useNavigate();\r\n  const [isModalNameOpen, setIsModalNameOpen] = useState(false);\r\n  return (\r\n    <>\r\n      <div className=\"cms-config-layout__header\">\r\n        <div className=\"cms-config-layout__header--left\">\r\n          <span\r\n            className=\"cms-icon logo\"\r\n            dangerouslySetInnerHTML={{ __html: logo || \"&#xe625;\" }}\r\n          ></span>\r\n          <h1 className=\"name\">{name}</h1>\r\n          <span\r\n            className=\"cms-icon edit\"\r\n            onClick={() => setIsModalNameOpen(true)}\r\n          >\r\n            &#xec88;\r\n          </span>\r\n        </div>\r\n        <div className=\"cms-config-layout__header--right\">\r\n          <div className=\"preview\" onClick={previewHandler}>\r\n            <i className=\"cms-icon\">&#xe668;</i>\r\n            {$t(\"operation_view\" /*预览*/)}\r\n          </div>\r\n          <div className=\"publish\" onClick={publishHandler}>\r\n            <i className=\"cms-icon\">&#xe620;</i>\r\n            {$t(\"operation_publish\" /*发布*/)}\r\n          </div>\r\n          <div className=\"preview\" onClick={() => navigate(-1)}>\r\n            <i className=\"cms-icon\">&#xe720;</i>\r\n            {$t(\"operation_return\" /*返回*/)}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <ModifyNameDialog\r\n        name={name || \"\"}\r\n        pageType={pageType}\r\n        open={isModalNameOpen}\r\n        onClose={() => setIsModalNameOpen(false)}\r\n        modifyNameSuccessHander={modifyNameSuccessHander}\r\n      ></ModifyNameDialog>\r\n    </>\r\n  );\r\n};\r\n","import React, { FC } from \"react\";\r\nimport \"./index.scss\";\r\n\r\ninterface IRulerProps {}\r\n\r\nconst Ruler: FC<IRulerProps> = () => {\r\n  const arr = Array.from(new Array(100).keys());\r\n\r\n  return (\r\n    <div className=\"cms-config-layout__ruler\">\r\n      <div className=\"cms-config-layout__ruler--hwrapper\">\r\n        <div className=\"cms-config-layout__ruler--h\">\r\n          <span className=\"ruler-h-50\">\r\n            <b>50</b>\r\n            <i></i>\r\n            <i></i>\r\n            <i></i>\r\n            <i></i>\r\n            <i></i>\r\n            <i></i>\r\n            <i></i>\r\n            <i></i>\r\n            <i></i>\r\n            <i></i>\r\n          </span>\r\n          {arr.map((item: any, index: number) => (\r\n            <span className=\"ruler-h-50\" key={index}>\r\n              <b>{index * 50}</b>\r\n              <i></i>\r\n              <i></i>\r\n              <i></i>\r\n              <i></i>\r\n              <i></i>\r\n              <i></i>\r\n              <i></i>\r\n              <i></i>\r\n              <i></i>\r\n              <i></i>\r\n            </span>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className=\"cms-config-layout__ruler--vwrapper\">\r\n        <div className=\"cms-config-layout__ruler--v\">\r\n          <span className=\"ruler-h-50\">\r\n            <b>50</b>\r\n            <i></i>\r\n            <i></i>\r\n            <i></i>\r\n            <i></i>\r\n            <i></i>\r\n            <i></i>\r\n            <i></i>\r\n            <i></i>\r\n            <i></i>\r\n            <i></i>\r\n          </span>\r\n          {arr.map((item: any, index: number) => (\r\n            <span className=\"ruler-h-50\" key={index}>\r\n              <b>{index * 50}</b>\r\n              <i></i>\r\n              <i></i>\r\n              <i></i>\r\n              <i></i>\r\n              <i></i>\r\n              <i></i>\r\n              <i></i>\r\n              <i></i>\r\n              <i></i>\r\n              <i></i>\r\n            </span>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Ruler;\r\n","import React, { CSSProperties, FC, ReactNode } from \"react\";\r\nimport Rule from \"./components/rule\";\r\nimport \"./index.scss\";\r\nimport { Slider, SliderSingleProps } from \"antd\";\r\ninterface IConfigLayoutMain {\r\n  children: ReactNode;\r\n  style?: CSSProperties;\r\n  id?: string;\r\n  scale?: number;\r\n  setScale?: React.Dispatch<React.SetStateAction<number>>;\r\n}\r\n\r\nexport const ConfigLayoutMain: FC<IConfigLayoutMain> = ({\r\n  children,\r\n  style,\r\n  id,\r\n  scale,\r\n  setScale,\r\n}) => {\r\n  const formatter: NonNullable<SliderSingleProps[\"tooltip\"]>[\"formatter\"] = (\r\n    value\r\n  ) => `${value}%`;\r\n  return (\r\n    <div className=\"cms-config-layout__main\">\r\n      <div className=\"cms-config-layout__body\">\r\n        <div className=\"cms-config-layout__center\">\r\n          <Rule />\r\n          <div\r\n            id={id}\r\n            style={{\r\n              ...style,\r\n              transform: `scale(${scale ? scale / 100 : 1})`,\r\n              transformOrigin: \"0 0\",\r\n            }}\r\n          >\r\n            {children}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {scale && setScale ? (\r\n        <div className=\"cms-config-layout__footer\">\r\n          <span>缩放比例：</span>\r\n          <Slider\r\n            tooltip={{ formatter, open: true }}\r\n            style={{\r\n              width: 300,\r\n            }}\r\n            min={50}\r\n            max={100}\r\n            defaultValue={scale}\r\n            onChange={(value) => {\r\n              console.log(value, \"value\");\r\n              setScale(value);\r\n            }}\r\n          />\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n","import React, { FC, ReactNode } from \"react\";\r\nimport \"./index.scss\";\r\nimport { CloseOutlined } from \"@ant-design/icons\";\r\ninterface IBox {\r\n  title: string;\r\n  children: ReactNode;\r\n  onClose: () => void;\r\n}\r\n\r\nconst Box: FC<IBox> = ({ title, children, onClose }) => {\r\n  return (\r\n    <div className=\"cms-box\" style={{ display: title ? \"flex\" : \"none\" }}>\r\n      <div className=\"cms-box__header\">\r\n        <div className=\"name\">{title}</div>\r\n        <CloseOutlined onClick={onClose} />\r\n      </div>\r\n      <div className=\"cms-box__body\">{children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Box;\r\n","import React, { FC, ReactNode, useEffect, useState } from \"react\";\r\nimport { PAGETYPENAME } from \"@src/core/enums/access.enums\";\r\nimport { Tooltip } from \"antd\";\r\nimport Box from \"../box\";\r\nimport \"./index.scss\";\r\ninterface IConfigLayoutLeftAside {\r\n  navs: PageType[];\r\n  render: (data: PageType | \"\") => ReactNode;\r\n}\r\n\r\ninterface ITabItem {\r\n  icon: string;\r\n  type: PageType;\r\n}\r\n\r\nconst ALLTABS: ITabItem[] = [\r\n  {\r\n    icon: \"&#xe652;\",\r\n    type: \"element\",\r\n  },\r\n  {\r\n    icon: \"&#xe634;\",\r\n    type: \"widget\",\r\n  },\r\n  {\r\n    icon: \"&#xe625;\",\r\n    type: \"page\",\r\n  },\r\n  {\r\n    icon: \"&#xe628;\",\r\n    type: \"project\",\r\n  },\r\n];\r\n\r\nexport const ConfigLayoutLeftAside: FC<IConfigLayoutLeftAside> = ({\r\n  render,\r\n  navs,\r\n}) => {\r\n  const [current, setCurrent] = useState<PageType | \"\">(\"element\");\r\n  const [tabs, setTabs] = useState<ITabItem[]>([]);\r\n\r\n  useEffect(() => {\r\n    setTabs(() => {\r\n      return ALLTABS.filter((item) => navs.includes(item.type));\r\n    });\r\n    setCurrent(navs[0]);\r\n  }, [navs, setTabs, setCurrent]);\r\n  return (\r\n    <div className=\"cms-config-layout__leftAside\">\r\n      <ul className=\"cms-config-layout__leftAside--tabs\">\r\n        {tabs.map((item) => (\r\n          <li\r\n            className={`cms-config-layout__leftAside--tabItem ${\r\n              current === item.type ? \"is-active\" : \"\"\r\n            }`}\r\n            onClick={() => setCurrent(item.type)}\r\n            key={item.type}\r\n          >\r\n            <Tooltip placement=\"left\" title={PAGETYPENAME[item.type]}>\r\n              <i\r\n                className=\"cms-icon\"\r\n                dangerouslySetInnerHTML={{ __html: item.icon }}\r\n              ></i>\r\n            </Tooltip>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <div\r\n        className=\"cms-config-layout__leftAside--tabContent\"\r\n        style={{\r\n          borderRight: current ? \"1px solid var(--cms-divider-color)\" : \"none\",\r\n        }}\r\n      >\r\n        <Box\r\n          title={current ? PAGETYPENAME[current] : \"\"}\r\n          onClose={() => setCurrent(\"\")}\r\n        >\r\n          {render(current)}\r\n        </Box>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { FC, ReactNode } from \"react\";\r\nimport { dragStore } from \"../drag\";\r\nimport \"./index.scss\";\r\n\r\ninterface IDragItem {\r\n  data: IAnyObject;\r\n  title: string;\r\n  children: ReactNode;\r\n  /** 拖拽分组标识 */\r\n  groupName?: string;\r\n}\r\n\r\nconst DragItem: FC<IDragItem> = ({\r\n  title,\r\n  children,\r\n  data,\r\n  groupName = \"DrapDrop\",\r\n}) => {\r\n  const onDragStart = (e: React.DragEvent<HTMLDivElement>) => {\r\n    dragStore.set(groupName, data);\r\n  };\r\n  const onDragEnd = (e: React.DragEvent<HTMLDivElement>) => {\r\n    dragStore.remove(groupName);\r\n  };\r\n  return (\r\n    <div\r\n      className=\"cms-drag__item\"\r\n      draggable\r\n      onDragStart={onDragStart}\r\n      onDragEnd={onDragEnd}\r\n    >\r\n      <div className=\"cms-drag__item--body\">{children}</div>\r\n      <div className=\"cms-drag__item--footer\">{title}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DragItem;\r\n","import React, { FC, useEffect, useState } from \"react\";\r\nimport { ELEMETSTYPE } from \"@src/core/enums/access.enums\";\r\nimport { elements } from \"@src/core/hook\";\r\nimport { Empty, Image } from \"antd\";\r\nimport DragItem from \"@src/compoents/dragdrop/dragItem\";\r\nimport \"./index.scss\";\r\ninterface IConfigLayoutLeftAsideElements {}\r\n\r\nconst ALLELEMENTS: elementsType[] = [\r\n  \"text\",\r\n  \"image\",\r\n  \"table\",\r\n  \"line\",\r\n  \"bar\",\r\n  \"pie\",\r\n  \"form\",\r\n];\r\n\r\nexport const ConfigLayoutLeftAsideElements: FC<\r\n  IConfigLayoutLeftAsideElements\r\n> = () => {\r\n  const [current, setCurrent] = useState<elementsType>(\"text\");\r\n  const { getElements, elementsList, elementsLoading } = elements();\r\n  useEffect(() => {\r\n    getElements();\r\n  }, [getElements]);\r\n  return (\r\n    <div className=\"cms-config-layout__elements\">\r\n      <ul className=\"cms-config-layout__elements--left\">\r\n        {ALLELEMENTS.map((item) => (\r\n          <div\r\n            key={item}\r\n            className={current === item ? \"is-active\" : \"\"}\r\n            onClick={() => setCurrent(item)}\r\n          >\r\n            {ELEMETSTYPE[item]}\r\n          </div>\r\n        ))}\r\n      </ul>\r\n      <div className=\"cms-config-layout__elements--right\">\r\n        {elementsList\r\n          .filter((item) => item.type === current)\r\n          ?.map((item) => (\r\n            <DragItem\r\n              key={item.code}\r\n              title={item.name}\r\n              data={item}\r\n              groupName=\"elements\"\r\n            >\r\n              <Image\r\n                width={174}\r\n                height={86}\r\n                src={`./elements/${item.code}.png`}\r\n                preview={false}\r\n              />\r\n            </DragItem>\r\n          ))}\r\n        {!elementsLoading &&\r\n          !elementsList.filter((item) => item.type === current)?.length && (\r\n            <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n          )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { FC, useEffect, useState } from \"react\";\r\nimport { ELEMETSTYPE } from \"@src/core/enums/access.enums\";\r\nimport { widgets } from \"@src/core/hook\";\r\nimport { Empty, Image } from \"antd\";\r\nimport DragItem from \"@src/compoents/dragdrop/dragItem\";\r\nimport \"./index.scss\";\r\ninterface IConfigLayoutLeftAsideWidget {}\r\n\r\nconst ALLELEMENTS: elementsType[] = [\r\n  \"text\",\r\n  \"image\",\r\n  \"table\",\r\n  \"line\",\r\n  \"bar\",\r\n  \"pie\",\r\n];\r\n\r\nexport const ConfigLayoutLeftAsideWidget: FC<\r\n  IConfigLayoutLeftAsideWidget\r\n> = () => {\r\n  const [current, setCurrent] = useState<elementsType>(\"text\");\r\n  const { getWidgets, widgetsLoading, widgetsList } = widgets();\r\n  useEffect(() => {\r\n    getWidgets();\r\n  }, [getWidgets]);\r\n  return (\r\n    <div className=\"cms-config-layout__widgets\">\r\n      <ul className=\"cms-config-layout__widgets--left\">\r\n        {ALLELEMENTS.map((item) => (\r\n          <div\r\n            key={item}\r\n            className={current === item ? \"is-active\" : \"\"}\r\n            onClick={() => setCurrent(item)}\r\n          >\r\n            {ELEMETSTYPE[item]}\r\n          </div>\r\n        ))}\r\n      </ul>\r\n      <div className=\"cms-config-layout__widgets--right\">\r\n        {widgetsList\r\n          .filter((item) => item.type === current)\r\n          ?.map((item) => (\r\n            <DragItem\r\n              key={item.widgetId}\r\n              title={item.name}\r\n              data={item}\r\n              groupName=\"elements\"\r\n            >\r\n              <Image width={174} src={item.url} preview={false} />\r\n            </DragItem>\r\n          ))}\r\n        {!widgetsLoading &&\r\n          !widgetsList.filter((item) => item.type === current)?.length && (\r\n            <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n          )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { FC, useEffect } from \"react\";\r\nimport { web } from \"@src/core/hook\";\r\nimport { Empty, Image } from \"antd\";\r\nimport \"./index.scss\";\r\nimport { IPage } from \"@src/service\";\r\ninterface IConfigLayoutLeftAsideWidget {\r\n  onClick: (item: IPage) => void;\r\n}\r\n\r\nexport const ConfigLayoutLeftAsidePage: FC<IConfigLayoutLeftAsideWidget> = ({\r\n  onClick,\r\n}) => {\r\n  const { getPages, pagesList, pagesLoading } = web();\r\n  useEffect(() => {\r\n    getPages();\r\n  }, [getPages]);\r\n  return (\r\n    <div className=\"cms-config-layout__pages\">\r\n      <div className=\"cms-config-layout__pages--right\">\r\n        {pagesList?.map((item) => (\r\n          <div\r\n            className=\"cms-config-layout__pages--item\"\r\n            key={item.pageId}\r\n            onClick={() => onClick(item)}\r\n          >\r\n            <Image width={220} src={item.url} preview={false} />\r\n            <div className=\"name\">{item.name}</div>\r\n          </div>\r\n        ))}\r\n        {!pagesLoading && !pagesList?.length && (\r\n          <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { FC, ReactNode, useEffect, useState } from \"react\";\r\nimport { PAGETYPENAME } from \"@src/core/enums/access.enums\";\r\nimport { Tooltip } from \"antd\";\r\nimport Box from \"../box\";\r\nimport \"./index.scss\";\r\ninterface IConfigLayoutRightAside {\r\n  render: (data: PageType | \"\") => ReactNode;\r\n  navs: PageType[];\r\n  onChange?: (data: PageType | \"\") => void;\r\n}\r\n\r\ninterface ITabItem {\r\n  icon: string;\r\n  type: PageType;\r\n}\r\n\r\nconst ALLTABS: ITabItem[] = [\r\n  {\r\n    icon: \"&#xe63c;\",\r\n    type: \"layer\",\r\n  },\r\n  {\r\n    icon: \"&#xe652;\",\r\n    type: \"element\",\r\n  },\r\n  {\r\n    icon: \"&#xe634;\",\r\n    type: \"widget\",\r\n  },\r\n  {\r\n    icon: \"&#xe62e;\",\r\n    type: \"data\",\r\n  },\r\n  {\r\n    icon: \"&#xe625;\",\r\n    type: \"page\",\r\n  },\r\n  {\r\n    icon: \"&#xe628;\",\r\n    type: \"project\",\r\n  },\r\n  {\r\n    icon: \"&#xe61c;\",\r\n    type: \"linkage\",\r\n  },\r\n];\r\n\r\nexport const ConfigLayoutRightAside: FC<IConfigLayoutRightAside> = ({\r\n  render,\r\n  navs,\r\n  onChange,\r\n}) => {\r\n  const [current, setCurrent] = useState<PageType | \"\">(\"element\");\r\n  const [tabs, setTabs] = useState<ITabItem[]>([]);\r\n\r\n  useEffect(() => {\r\n    setTabs(() => {\r\n      return ALLTABS.filter((item) => navs.includes(item.type));\r\n    });\r\n    setCurrent(navs[0]);\r\n    onChange?.(navs[0]);\r\n  }, [navs, setTabs, setCurrent, onChange]);\r\n  return (\r\n    <div className=\"cms-config-layout__rightAside\">\r\n      <div\r\n        className=\"cms-config-layout__rightAside--tabContent\"\r\n        style={{\r\n          borderLeft: current ? \"1px solid var(--cms-divider-color)\" : \"none\",\r\n        }}\r\n      >\r\n        <Box\r\n          title={`${current ? PAGETYPENAME[current] + \"配置\" : \"\"}`}\r\n          onClose={() => {\r\n            setCurrent(\"\");\r\n            onChange?.(\"\");\r\n          }}\r\n        >\r\n          {render(current)}\r\n        </Box>\r\n      </div>\r\n      <ul className=\"cms-config-layout__rightAside--tabs\">\r\n        {tabs.map((item) => (\r\n          <li\r\n            className={`cms-config-layout__rightAside--tabItem ${\r\n              current === item.type ? \"is-active\" : \"\"\r\n            }`}\r\n            onClick={() => {\r\n              setCurrent(item.type);\r\n              onChange?.(item.type);\r\n            }}\r\n            key={item.type}\r\n          >\r\n            <Tooltip placement=\"left\" title={`${PAGETYPENAME[item.type]}配置`}>\r\n              <i\r\n                className=\"cms-icon\"\r\n                dangerouslySetInnerHTML={{ __html: item.icon }}\r\n              ></i>\r\n            </Tooltip>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n","import {\r\n  EllipsisOutlined,\r\n  FolderOpenOutlined,\r\n  FolderOutlined,\r\n} from \"@ant-design/icons\";\r\nimport React, { FC, useCallback, useState } from \"react\";\r\nimport \"./index.scss\";\r\nimport { Empty, Popover } from \"antd\";\r\nimport ModifyNameDialog from \"@src/compoents/modifyNameDialog\";\r\n\r\ninterface ISelect {\r\n  pageType: PageType | \"\";\r\n  name: string;\r\n  id: string;\r\n  pId: string;\r\n  show: boolean;\r\n}\r\ninterface IConfigLayoutRightAsideLayer {\r\n  datas: IAnyObject[];\r\n  pageId?: string;\r\n  widgetId?: string;\r\n  elementId?: string;\r\n  projectId?: string;\r\n  pid?: string;\r\n  onSelected: (\r\n    type: \"page\" | \"widget\" | \"element\" | \"project\",\r\n    id: string,\r\n    pid?: string\r\n  ) => void;\r\n  pageType?: PageType;\r\n  onEditHandler?: (\r\n    type: \"page\" | \"widget\" | \"element\" | \"project\",\r\n    id: string,\r\n    name: string,\r\n    pid?: string\r\n  ) => void;\r\n  onDeleteHandler?: (\r\n    type: \"page\" | \"widget\" | \"element\" | \"project\",\r\n    id: string,\r\n    pid?: string\r\n  ) => void;\r\n  setSelect?: React.Dispatch<React.SetStateAction<ISelect>>;\r\n}\r\n\r\nconst renderTree = (props: IConfigLayoutRightAsideLayer) => {\r\n  const {\r\n    datas,\r\n    pageId,\r\n    widgetId,\r\n    elementId,\r\n    onSelected,\r\n    pid,\r\n    projectId,\r\n    pageType,\r\n    onEditHandler,\r\n    onDeleteHandler,\r\n    setSelect,\r\n  } = props;\r\n  return datas.map((item, index) => {\r\n    return (\r\n      <div className=\"cms-config-layout__layer--item\" key={index}>\r\n        <div\r\n          className={`title ${\r\n            (item.projectId === projectId && projectId) ||\r\n            (item.pageId === pageId && pageId) ||\r\n            (item.widgetId === widgetId && widgetId) ||\r\n            (item.elementId === elementId && elementId)\r\n              ? \"is-active\"\r\n              : \"\"\r\n          }`}\r\n        >\r\n          {item?.pages?.length ||\r\n          item?.widgets?.length ||\r\n          item?.elements?.length ? (\r\n            <FolderOpenOutlined />\r\n          ) : (\r\n            <FolderOutlined />\r\n          )}{\" \"}\r\n          <div\r\n            className=\"name\"\r\n            onClick={() =>\r\n              onSelected?.(\r\n                item.projectId\r\n                  ? \"project\"\r\n                  : item.pageId\r\n                  ? \"page\"\r\n                  : item.widgetId\r\n                  ? \"widget\"\r\n                  : \"element\",\r\n                item.projectId ||\r\n                  item.pageId ||\r\n                  item.widgetId ||\r\n                  item.elementId,\r\n                pid\r\n              )\r\n            }\r\n          >\r\n            {item.name}\r\n          </div>\r\n          {(item.widgetId &&\r\n            pageType &&\r\n            [\"project\", \"page\"].includes(pageType)) ||\r\n          (item.elementId && pageType && [\"element\"].includes(pageType)) ? (\r\n            <div className=\"controls\">\r\n              <Popover\r\n                content={\r\n                  <div className=\"project-controls\">\r\n                    <p\r\n                      onClick={() =>\r\n                        setSelect?.((state) => ({\r\n                          ...state,\r\n                          name: item.name,\r\n                          pageType: item.projectId\r\n                            ? \"project\"\r\n                            : item.pageId\r\n                            ? \"page\"\r\n                            : item.widgetId\r\n                            ? \"widget\"\r\n                            : \"element\",\r\n                          pId: pid as string,\r\n                          id:\r\n                            item.projectId ||\r\n                            item.pageId ||\r\n                            item.widgetId ||\r\n                            item.elementId,\r\n                          show: true,\r\n                        }))\r\n                      }\r\n                    >\r\n                      编辑\r\n                    </p>\r\n                    <p\r\n                      onClick={() =>\r\n                        onDeleteHandler?.(\r\n                          item.projectId\r\n                            ? \"project\"\r\n                            : item.pageId\r\n                            ? \"page\"\r\n                            : item.widgetId\r\n                            ? \"widget\"\r\n                            : \"element\",\r\n                          item.projectId ||\r\n                            item.pageId ||\r\n                            item.widgetId ||\r\n                            item.elementId,\r\n                          pid\r\n                        )\r\n                      }\r\n                    >\r\n                      删除\r\n                    </p>\r\n                  </div>\r\n                }\r\n              >\r\n                <EllipsisOutlined />\r\n              </Popover>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n        {item?.pages?.length ||\r\n        item?.widgets?.length ||\r\n        item?.elements?.length ? (\r\n          <>\r\n            {renderTree({\r\n              datas: item?.pages || item.widgets || item.elements,\r\n              pageId,\r\n              widgetId,\r\n              elementId,\r\n              onSelected,\r\n              pid: item.pageId || item.widgetId || item.elementId,\r\n              projectId,\r\n              pageType,\r\n              onEditHandler,\r\n              onDeleteHandler,\r\n              setSelect,\r\n            })}\r\n          </>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  });\r\n};\r\n\r\nexport const ConfigLayoutRightAsideLayer: FC<IConfigLayoutRightAsideLayer> = ({\r\n  datas,\r\n  widgetId,\r\n  elementId,\r\n  pageId,\r\n  onSelected,\r\n  projectId,\r\n  pageType,\r\n  onEditHandler,\r\n  onDeleteHandler,\r\n}) => {\r\n  const [select, setSelect] = useState<ISelect>(() => {\r\n    return {\r\n      pageType: \"\",\r\n      name: \"\",\r\n      id: \"\",\r\n      pId: \"\",\r\n      show: false,\r\n    };\r\n  });\r\n  const modifyNameSuccessHander = useCallback(\r\n    (name: string) => {\r\n      onEditHandler?.(select.pageType as any, select.id, name, select.pId);\r\n    },\r\n    [onEditHandler, select.id, select.pId, select.pageType]\r\n  );\r\n  return (\r\n    <div className=\"cms-config-layout__layer\">\r\n      <ModifyNameDialog\r\n        onClose={() =>\r\n          setSelect((state) => ({\r\n            ...state,\r\n            id: \"\",\r\n            pId: \"\",\r\n            name: \"\",\r\n            pageType: \"\",\r\n            show: false,\r\n          }))\r\n        }\r\n        name={select.name}\r\n        pageType={select.pageType as PageType}\r\n        open={select.show}\r\n        modifyNameSuccessHander={modifyNameSuccessHander}\r\n      />\r\n      {datas.length ? (\r\n        renderTree({\r\n          datas,\r\n          pageId,\r\n          widgetId,\r\n          elementId,\r\n          onSelected,\r\n          projectId,\r\n          pageType,\r\n          onEditHandler,\r\n          onDeleteHandler,\r\n          setSelect,\r\n        })\r\n      ) : (\r\n        <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { FC, useCallback, useEffect, useRef } from \"react\";\r\nimport JSONEditor, { JSONEditorOptions } from \"jsoneditor\";\r\nimport \"jsoneditor/dist/jsoneditor.css\";\r\nimport \"./index.scss\";\r\n\r\ninterface IJsonEditorProps {\r\n  value: IAnyObject;\r\n  onChange?: (josn?: any) => void;\r\n  options?: JSONEditorOptions;\r\n}\r\n\r\nconst JsonEditor: FC<IJsonEditorProps> = ({\r\n  value,\r\n  onChange,\r\n  options = {},\r\n}) => {\r\n  const editorRef = useRef<any>(null);\r\n  const editorObj = useRef<any>(null);\r\n\r\n  // 初始化JOSN编辑器\r\n  const initEditor = useCallback(() => {\r\n    if (!editorObj.current) {\r\n      const totalOptions: JSONEditorOptions = {\r\n        mode: \"code\",\r\n        onChange: () => {\r\n          onChange && onChange(editorObj.current?.get());\r\n        },\r\n        ...options,\r\n      };\r\n      editorObj.current = new JSONEditor(\r\n        editorRef.current,\r\n        totalOptions,\r\n        value\r\n      );\r\n    }\r\n  }, [onChange, options, value]);\r\n\r\n  useEffect(() => {\r\n    initEditor();\r\n  }, [initEditor]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      // 销毁\r\n      if (editorObj.current) {\r\n        editorObj.current.destroy();\r\n      }\r\n    };\r\n  }, [editorObj]);\r\n\r\n  return <div ref={editorRef} className=\"cms-json-editor\"></div>;\r\n};\r\n\r\nexport default JsonEditor;\r\n","import React, { FC } from \"react\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  InputNumber,\r\n  Select,\r\n  Slider,\r\n  Switch,\r\n  ColorPicker,\r\n  FormInstance,\r\n} from \"antd\";\r\n// JSON编辑器\r\nimport JsonEditor from \"@src/compoents/jsonEditor\";\r\nimport TextArea from \"antd/es/input/TextArea\";\r\n\r\nconst { Option } = Select;\r\n\r\ninterface IBaseForm {\r\n  item: IAnyObject;\r\n  form: FormInstance<any>;\r\n  callback: Function;\r\n  formSubmit?: boolean;\r\n}\r\n\r\nconst BaseForm: FC<IBaseForm> = ({ item, form, callback, formSubmit }) => {\r\n  return (\r\n    <>\r\n      {item.componentName === \"Input\" && (\r\n        <Form.Item\r\n          label={item.label}\r\n          name={item.name}\r\n          tooltip={item.tooltip}\r\n          rules={[{ required: item.required }]}\r\n          validateTrigger=\"onBlur\"\r\n        >\r\n          <Input\r\n            size=\"small\"\r\n            allowClear\r\n            disabled={item.disabled}\r\n            placeholder={item.placeholder}\r\n            onBlur={(e) => !formSubmit && callback(item.name, e.target.value)}\r\n          />\r\n        </Form.Item>\r\n      )}\r\n      {item.componentName === \"InputNumber\" && (\r\n        <Form.Item\r\n          label={item.label}\r\n          name={item.name}\r\n          tooltip={item.tooltip}\r\n          validateTrigger=\"onBlur\"\r\n          rules={[{ required: item.required }]}\r\n        >\r\n          <InputNumber\r\n            size=\"small\"\r\n            disabled={item.disabled}\r\n            min={item.min}\r\n            max={item.max}\r\n            style={{ width: \"100%\" }}\r\n            addonAfter={item.addonAfter || \"\"}\r\n            placeholder={item.placeholder}\r\n            onBlur={(e) => !formSubmit && callback(item.name, e.target.value)}\r\n          />\r\n        </Form.Item>\r\n      )}\r\n      {item.componentName === \"TextArea\" && (\r\n        <Form.Item\r\n          label={item.label}\r\n          name={item.name}\r\n          tooltip={item.tooltip}\r\n          rules={[{ required: item.required }]}\r\n          validateTrigger=\"onBlur\"\r\n        >\r\n          <TextArea\r\n            size=\"small\"\r\n            allowClear\r\n            disabled={item.disabled}\r\n            rows={8}\r\n            placeholder={item.placeholder}\r\n            onBlur={(e) => !formSubmit && callback(item.name, e.target.value)}\r\n          />\r\n        </Form.Item>\r\n      )}\r\n      {item.componentName === \"Switch\" && (\r\n        <Form.Item\r\n          label={item.label}\r\n          name={item.name}\r\n          tooltip={item.tooltip}\r\n          valuePropName=\"checked\"\r\n          rules={[{ required: item.required }]}\r\n        >\r\n          <Switch\r\n            size=\"small\"\r\n            disabled={item.disabled}\r\n            onChange={(e) => !formSubmit && callback(item.name, e)}\r\n          />\r\n        </Form.Item>\r\n      )}\r\n      {item.componentName === \"Slider\" && (\r\n        <Form.Item\r\n          label={item.label}\r\n          name={item.name}\r\n          tooltip={item.tooltip}\r\n          rules={[{ required: item.required }]}\r\n        >\r\n          <Slider\r\n            min={item.min || 0}\r\n            max={item.max || 100}\r\n            disabled={item.disabled}\r\n            step={item.step || 1}\r\n            onChangeComplete={(e) => !formSubmit && callback(item.name, e)}\r\n          />\r\n        </Form.Item>\r\n      )}\r\n      {item.componentName === \"Select\" && (\r\n        <Form.Item\r\n          label={item.label}\r\n          name={item.name}\r\n          tooltip={item.tooltip}\r\n          rules={[{ required: item.required }]}\r\n        >\r\n          <Select\r\n            size=\"small\"\r\n            allowClear\r\n            disabled={item.disabled}\r\n            placeholder={item.placeholder}\r\n            onChange={(e) => !formSubmit && callback(item.name, e)}\r\n          >\r\n            {item.options.map((subItem: any) => (\r\n              <Option key={subItem.code} value={subItem.code}>\r\n                <div\r\n                  className={`${\r\n                    item.name === \"iconStyleSelect\" ? \"cms-icon\" : \"\"\r\n                  }`}\r\n                  dangerouslySetInnerHTML={{ __html: subItem.name }}\r\n                ></div>\r\n              </Option>\r\n            ))}\r\n          </Select>\r\n        </Form.Item>\r\n      )}\r\n      {item.componentName === \"SketchPicker\" && (\r\n        <Form.Item\r\n          label={item.label}\r\n          name={item.name}\r\n          rules={[{ required: item.required }]}\r\n        >\r\n          <ColorPicker\r\n            size=\"small\"\r\n            allowClear\r\n            format=\"hex\"\r\n            showText\r\n            disabled={item.disabled}\r\n            onChangeComplete={(e) =>\r\n              !formSubmit\r\n                ? callback(item.name, `#${e.toHex()}`)\r\n                : form.setFieldValue(item.name, `#${e.toHex()}`)\r\n            }\r\n          />\r\n        </Form.Item>\r\n      )}\r\n      {item.componentName === \"JsonEdit\" && (\r\n        <Form.Item\r\n          name={item.name}\r\n          tooltip={item.tooltip}\r\n          rules={[{ required: item.required }]}\r\n        >\r\n          <Form.Item shouldUpdate noStyle>\r\n            <div style={{ paddingBottom: 10 }}>{item.label}:</div>\r\n            <JsonEditor\r\n              value={form.getFieldValue(item.name)}\r\n              onChange={(e) =>\r\n                !formSubmit\r\n                  ? callback(item.name, e)\r\n                  : form.setFieldValue(item.name, e)\r\n              }\r\n            />\r\n          </Form.Item>\r\n        </Form.Item>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BaseForm;\r\n","import { Collapse, Form, FormInstance } from \"antd\";\r\nimport React, { FC } from \"react\";\r\nimport BaseForm from \"../baseForm\";\r\n\r\nconst { Panel } = Collapse;\r\n\r\ninterface IDynamicForm {\r\n  datas: IAnyObject;\r\n  form: FormInstance<any>;\r\n  callback: Function;\r\n  formSubmit?: boolean;\r\n}\r\n\r\n// 判断数据是Array 或者 object\r\nconst judgeType = (data: any, type: string) => {\r\n  return Object.prototype.toString.call(data) === type;\r\n};\r\n\r\nconst DynamicForm: FC<IDynamicForm> = ({\r\n  datas,\r\n  form,\r\n  callback,\r\n  formSubmit,\r\n}) => {\r\n  return datas.map((item: any, index: number) => {\r\n    if (judgeType(item, \"[object Object]\")) {\r\n      const relationFields =\r\n        item.relationFields !== undefined ? item.relationFields.split(\",\") : [];\r\n      return (\r\n        <div key={index}>\r\n          {!relationFields.length ? (\r\n            <BaseForm\r\n              item={item}\r\n              form={form}\r\n              callback={callback}\r\n              formSubmit={formSubmit}\r\n            />\r\n          ) : (\r\n            <Form.Item noStyle shouldUpdate>\r\n              {({ getFieldValue }) => {\r\n                if (\r\n                  relationFields.every((subItem: string) =>\r\n                    item.relationValues.includes(String(getFieldValue(subItem)))\r\n                  )\r\n                ) {\r\n                  return (\r\n                    <BaseForm\r\n                      item={item}\r\n                      form={form}\r\n                      callback={callback}\r\n                      formSubmit={formSubmit}\r\n                    />\r\n                  );\r\n                }\r\n              }}\r\n            </Form.Item>\r\n          )}\r\n        </div>\r\n      );\r\n    }\r\n    if (judgeType(item, \"[object Array]\")) {\r\n      return (\r\n        <div key={index}>\r\n          {item.map((subItem: any, subIndex: number) => {\r\n            const relationFields =\r\n              subItem.relationFields !== undefined\r\n                ? subItem.relationFields.split(\",\")\r\n                : [];\r\n            return (\r\n              <Collapse\r\n                key={subIndex}\r\n                size=\"small\"\r\n                defaultActiveKey={[\"0-0\"]}\r\n                bordered={false}\r\n              >\r\n                {subItem.relationFields === undefined ? (\r\n                  <Panel header={subItem.name} key={`${index}-${subIndex}`}>\r\n                    <DynamicForm\r\n                      formSubmit={formSubmit}\r\n                      datas={subItem.list}\r\n                      form={form}\r\n                      callback={callback}\r\n                    />\r\n                  </Panel>\r\n                ) : (\r\n                  <Form.Item noStyle shouldUpdate>\r\n                    {({ getFieldValue }) => {\r\n                      if (\r\n                        relationFields.every((subbItem: string) =>\r\n                          subItem.relationValues.includes(\r\n                            String(getFieldValue(subbItem))\r\n                          )\r\n                        )\r\n                      ) {\r\n                        return (\r\n                          <Collapse\r\n                            key={subIndex}\r\n                            size=\"small\"\r\n                            bordered={false}\r\n                          >\r\n                            <Panel\r\n                              header={subItem.name}\r\n                              key={`${index}-${subIndex}`}\r\n                            >\r\n                              <DynamicForm\r\n                                formSubmit={formSubmit}\r\n                                datas={subItem.list}\r\n                                form={form}\r\n                                callback={callback}\r\n                              />\r\n                            </Panel>\r\n                          </Collapse>\r\n                        );\r\n                      }\r\n                    }}\r\n                  </Form.Item>\r\n                )}\r\n              </Collapse>\r\n            );\r\n          })}\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  });\r\n};\r\n\r\nexport default DynamicForm;\r\n","import React, { FC } from \"react\";\r\nimport { Form } from \"antd\";\r\nimport DynamicForm from \"../dynamicForm\";\r\nimport { widgetConfig } from \"@src/core/config/base\";\r\n\r\ninterface IConfigLayoutRightAsideWidget {\r\n  configureValue: IAnyObject;\r\n  onFinish: (data: IAnyObject) => void;\r\n}\r\n\r\nexport const ConfigLayoutRightAsideWidget: FC<\r\n  IConfigLayoutRightAsideWidget\r\n> = ({ configureValue, onFinish }) => {\r\n  const [form] = Form.useForm();\r\n\r\n  return (\r\n    <div className=\"cms-config-layout__widget\">\r\n      <Form\r\n        labelCol={{ flex: \"110px\" }}\r\n        labelAlign=\"left\"\r\n        form={form}\r\n        initialValues={configureValue}\r\n      >\r\n        <DynamicForm\r\n          datas={widgetConfig.configure || []}\r\n          form={form}\r\n          callback={(field: string, value: any) => {\r\n            const val =\r\n              value && !isNaN(value) && typeof value !== \"boolean\"\r\n                ? Number(value)\r\n                : value;\r\n            if (configureValue[field] !== val) {\r\n              onFinish({\r\n                [field]: val,\r\n              });\r\n            }\r\n          }}\r\n        />\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n","import { boxConfig, fontConfig } from \"../../base\";\r\n\r\nexport const baseText = {\r\n  // 配置名称\r\n  code: \"baseText\",\r\n  // 基础配置项\r\n  configure: [\r\n    [\r\n      {\r\n        name: \"基础设置\",\r\n        list: [\r\n          ...fontConfig.configure,\r\n          [\r\n            {\r\n              name: \"文字阴影\",\r\n              list: [\r\n                {\r\n                  componentName: \"InputNumber\",\r\n                  label: \"X轴偏移\",\r\n                  name: \"styleTextShadowX\",\r\n                  required: false,\r\n                  placeholder: \"请输入X轴偏移\",\r\n                  addonAfter: \"px\",\r\n                },\r\n                {\r\n                  componentName: \"InputNumber\",\r\n                  label: \"Y轴偏移\",\r\n                  name: \"styleTextShadowY\",\r\n                  required: false,\r\n                  placeholder: \"请输入Y轴偏移\",\r\n                  addonAfter: \"px\",\r\n                },\r\n                {\r\n                  componentName: \"InputNumber\",\r\n                  label: \"模糊值\",\r\n                  name: \"styleTextShadowF\",\r\n                  required: false,\r\n                  placeholder: \"请输入模糊值\",\r\n                  addonAfter: \"px\",\r\n                },\r\n                {\r\n                  componentName: \"SketchPicker\",\r\n                  label: \"颜色\",\r\n                  name: \"styleTextShadowC\",\r\n                  required: false,\r\n                  placeholder: \"请选择颜色\",\r\n                },\r\n              ],\r\n            },\r\n            ...boxConfig.configure,\r\n          ],\r\n        ],\r\n      },\r\n      {\r\n        name: \"icon图标\",\r\n        list: [\r\n          {\r\n            componentName: \"Select\",\r\n            label: \"图标\",\r\n            name: \"iconStyleSelect\",\r\n            required: false,\r\n            placeholder: \"\",\r\n            options: [\r\n              { code: \"&#xe621\", name: \"&#xe621\" },\r\n              { code: \"&#xe62e\", name: \"&#xe62e\" },\r\n              { code: \"&#xeb04\", name: \"&#xeb04\" },\r\n              { code: \"&#xec89\", name: \"&#xec89\" },\r\n              { code: \"&#xe668\", name: \"&#xe668\" },\r\n              { code: \"&#xe620\", name: \"&#xe620\" },\r\n              { code: \"&#xe652\", name: \"&#xe652\" },\r\n              { code: \"&#xe63d\", name: \"&#xe63d\" },\r\n              { code: \"&#xe65a\", name: \"&#xe65a\" },\r\n              { code: \"&#xe7de\", name: \"&#xe7de\" },\r\n              { code: \"&#xe7b0\", name: \"&#xe7b0\" },\r\n              { code: \"&#xe7b1\", name: \"&#xe7b1\" },\r\n            ],\r\n          },\r\n          {\r\n            componentName: \"InputNumber\",\r\n            label: \"字体大小\",\r\n            name: \"iconStyleFontSize\",\r\n            required: false,\r\n            min: 12,\r\n            placeholder: \"\",\r\n            addonAfter: \"px\",\r\n          },\r\n          {\r\n            componentName: \"SketchPicker\",\r\n            label: \"字体颜色\",\r\n            name: \"iconStyleColor\",\r\n            required: false,\r\n            placeholder: \"请选择字体颜色\",\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  ],\r\n};\r\n","import { boxConfig } from \"../../base\";\r\n\r\nexport const messageText = {\r\n  // 配置名称\r\n  code: \"messageText\",\r\n  // 基础配置项\r\n  configure: [\r\n    [\r\n      {\r\n        name: \"基础设置\",\r\n        list: [\r\n          {\r\n            componentName: \"SketchPicker\",\r\n            label: \"背景颜色\",\r\n            name: \"styleBackgroundColor\",\r\n            required: false,\r\n            placeholder: \"\",\r\n          },\r\n          {\r\n            componentName: \"InputNumber\",\r\n            label: \"字体大小\",\r\n            name: \"styleFontSize\",\r\n            required: false,\r\n            min: 12,\r\n            placeholder: \"\",\r\n            addonAfter: \"px\",\r\n          },\r\n          {\r\n            componentName: \"InputNumber\",\r\n            label: \"行高\",\r\n            name: \"styleLineHeight\",\r\n            required: false,\r\n            placeholder: \"\",\r\n            addonAfter: \"px\",\r\n          },\r\n          {\r\n            componentName: \"Select\",\r\n            label: \"字体样式\",\r\n            name: \"styleFontFamily\",\r\n            required: false,\r\n            placeholder: \"\",\r\n            options: [\r\n              { code: \"SimSun\", name: \"宋体\" },\r\n              { code: \"KaiTi\", name: \"楷体\" },\r\n              { code: \"Microsoft YaHei\", name: \"微软雅黑\" },\r\n              { code: \"STHeiti\", name: \"华文黑体\" },\r\n              { code: \"arial\", name: \"无衬线体\" },\r\n              { code: \"serif\", name: \"有衬线体\" },\r\n              { code: \"cursive\", name: \"草书\" },\r\n              { code: \"monospace\", name: \"等宽字体\" },\r\n              { code: \"courier\", name: \"打印字体\" },\r\n            ],\r\n          },\r\n          {\r\n            componentName: \"Select\",\r\n            label: \"文字粗细\",\r\n            name: \"styleFontWeight\",\r\n            required: false,\r\n            placeholder: \"\",\r\n            options: [\r\n              { code: \"normal\", name: \"正常\" },\r\n              { code: \"bold\", name: \"粗体\" },\r\n              { code: \"bolder\", name: \"特粗体\" },\r\n              { code: \"lighter\", name: \"细体\" },\r\n            ],\r\n          },\r\n          [...boxConfig.configure],\r\n        ],\r\n      },\r\n      {\r\n        name: \"icon图标\",\r\n        list: [\r\n          {\r\n            componentName: \"InputNumber\",\r\n            label: \"字体大小\",\r\n            name: \"iconStyleFontSize\",\r\n            required: false,\r\n            min: 12,\r\n            placeholder: \"\",\r\n            addonAfter: \"px\",\r\n          },\r\n          {\r\n            componentName: \"SketchPicker\",\r\n            label: \"字体颜色\",\r\n            name: \"iconStyleColor\",\r\n            required: false,\r\n            placeholder: \"请选择字体颜色\",\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  ],\r\n};\r\n","import { fontConfig } from \"../../base\";\r\n\r\nexport const dateText = {\r\n  // 配置名称\r\n  code: \"dateText\",\r\n  // 基础配置项\r\n  configure: [\r\n    {\r\n      componentName: \"Input\",\r\n      label: \"自定义格式\",\r\n      name: \"fmtDate\",\r\n      required: false,\r\n      placeholder: \"\",\r\n    },\r\n    ...fontConfig.configure,\r\n    [\r\n      {\r\n        name: \"文字阴影\",\r\n        list: [\r\n          {\r\n            componentName: \"InputNumber\",\r\n            label: \"X轴偏移\",\r\n            name: \"styleTextShadowX\",\r\n            required: false,\r\n            placeholder: \"请输入X轴偏移\",\r\n            addonAfter: \"px\",\r\n          },\r\n          {\r\n            componentName: \"InputNumber\",\r\n            label: \"Y轴偏移\",\r\n            name: \"styleTextShadowY\",\r\n            required: false,\r\n            placeholder: \"请输入Y轴偏移\",\r\n            addonAfter: \"px\",\r\n          },\r\n          {\r\n            componentName: \"InputNumber\",\r\n            label: \"模糊值\",\r\n            name: \"styleTextShadowF\",\r\n            required: false,\r\n            placeholder: \"请输入模糊值\",\r\n            addonAfter: \"px\",\r\n          },\r\n          {\r\n            componentName: \"SketchPicker\",\r\n            label: \"颜色\",\r\n            name: \"styleTextShadowC\",\r\n            required: false,\r\n            placeholder: \"请选择颜色\",\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  ],\r\n};\r\n","import { baseText, countUp, messageText, dateText } from \"./text\";\r\nimport { line } from \"./line\";\r\nimport { bar } from \"./bar\";\r\nimport { pie } from \"./pie\";\r\nimport { baseImage, baseBanner } from \"./image\";\r\nimport { table } from \"./table\";\r\nimport { formRadio, formSelect } from \"./form\";\r\n\r\nconst elementsConfig: any = {\r\n  baseText,\r\n  line,\r\n  bar,\r\n  countUp,\r\n  pie,\r\n  messageText,\r\n  baseImage,\r\n  baseBanner,\r\n  dateText,\r\n  table,\r\n  formRadio,\r\n  formSelect,\r\n};\r\n\r\nexport default elementsConfig;\r\n","import { echartsConfig, animateConfig } from \"../../base\";\r\n\r\nexport const line = {\r\n  // 配置名称\r\n  code: \"line\",\r\n  configure: [\r\n    [\r\n      {\r\n        name: \"基础设置\",\r\n        list: [\r\n          ...echartsConfig.line,\r\n          ...echartsConfig.seriesStack,\r\n          echartsConfig.seriesLabel,\r\n          echartsConfig.symbol,\r\n        ],\r\n      },\r\n      {\r\n        name: \"标题\",\r\n        list: echartsConfig.title,\r\n      },\r\n      {\r\n        name: \"图例\",\r\n        list: echartsConfig.legend,\r\n      },\r\n      {\r\n        name: \"网格\",\r\n        list: echartsConfig.grid,\r\n      },\r\n      {\r\n        name: \"X轴\",\r\n        list: echartsConfig.xAxis,\r\n      },\r\n      {\r\n        name: \"y轴\",\r\n        list: echartsConfig.yAxis,\r\n      },\r\n      {\r\n        name: \"自定义颜色\",\r\n        list: echartsConfig.echartColor,\r\n      },\r\n      ...animateConfig.configure,\r\n    ],\r\n  ],\r\n};\r\n","import { echartsConfig, animateConfig } from \"../../base\";\r\n\r\nexport const bar = {\r\n  // 配置名称\r\n  code: \"bar\",\r\n  configure: [\r\n    [\r\n      {\r\n        name: \"柱状设置\",\r\n        list: [\r\n          ...echartsConfig.seriesStack,\r\n          ...echartsConfig.bar,\r\n          echartsConfig.seriesLabel,\r\n        ],\r\n      },\r\n      {\r\n        name: \"标题\",\r\n        list: echartsConfig.title,\r\n      },\r\n      {\r\n        name: \"图例\",\r\n        list: echartsConfig.legend,\r\n      },\r\n      {\r\n        name: \"网格\",\r\n        list: echartsConfig.grid,\r\n      },\r\n      {\r\n        name: \"X轴\",\r\n        list: echartsConfig.xAxis,\r\n      },\r\n      {\r\n        name: \"y轴\",\r\n        list: echartsConfig.yAxis,\r\n      },\r\n      {\r\n        name: \"自定义颜色\",\r\n        list: echartsConfig.echartColor,\r\n      },\r\n      ...animateConfig.configure,\r\n    ],\r\n  ],\r\n};\r\n","export const countUp = {\r\n  // 配置名称\r\n  code: \"countUp\",\r\n  // 基础配置项\r\n  configure: [\r\n    [\r\n      {\r\n        name: \"基础设置\",\r\n        list: [\r\n          {\r\n            componentName: \"Select\",\r\n            label: \"水平对齐方式\",\r\n            name: \"styleJustifyContent\",\r\n            required: false,\r\n            placeholder: \"\",\r\n            options: [\r\n              { code: \"flex-start\", name: \"左对齐\" },\r\n              { code: \"flex-end\", name: \"右对齐\" },\r\n              { code: \"center\", name: \"居中\" },\r\n              { code: \"space-between\", name: \"两端对齐\" },\r\n              { code: \"space-around\", name: \"间隔相等\" },\r\n            ],\r\n          },\r\n          {\r\n            componentName: \"Select\",\r\n            label: \"垂直对齐方式\",\r\n            name: \"styleAlignItems\",\r\n            required: false,\r\n            placeholder: \"\",\r\n            options: [\r\n              { code: \"flex-start\", name: \"上对齐\" },\r\n              { code: \"flex-end\", name: \"下对齐\" },\r\n              { code: \"center\", name: \"居中\" },\r\n            ],\r\n          },\r\n          {\r\n            componentName: \"InputNumber\",\r\n            label: \"行高\",\r\n            name: \"styleLineHeight\",\r\n            required: false,\r\n            placeholder: \"\",\r\n            addonAfter: \"px\",\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        name: \"滚动区域\",\r\n        list: [\r\n          {\r\n            componentName: \"InputNumber\",\r\n            label: \"字体大小\",\r\n            name: \"countUpStyleFontSize\",\r\n            required: false,\r\n            min: 12,\r\n            placeholder: \"\",\r\n            addonAfter: \"px\",\r\n          },\r\n          {\r\n            componentName: \"SketchPicker\",\r\n            label: \"字体颜色\",\r\n            name: \"countUpStyleColor\",\r\n            required: false,\r\n            placeholder: \"请选择字体颜色\",\r\n          },\r\n          {\r\n            componentName: \"Select\",\r\n            label: \"字体样式\",\r\n            name: \"countUpStyleFontFamily\",\r\n            required: false,\r\n            placeholder: \"\",\r\n            options: [\r\n              { code: \"SimSun\", name: \"宋体\" },\r\n              { code: \"KaiTi\", name: \"楷体\" },\r\n              { code: \"Microsoft YaHei\", name: \"微软雅黑\" },\r\n              { code: \"STHeiti\", name: \"华文黑体\" },\r\n              { code: \"arial\", name: \"无衬线体\" },\r\n              { code: \"serif\", name: \"有衬线体\" },\r\n              { code: \"cursive\", name: \"草书\" },\r\n              { code: \"monospace\", name: \"等宽字体\" },\r\n              { code: \"courier\", name: \"打印字体\" },\r\n            ],\r\n          },\r\n          {\r\n            componentName: \"Select\",\r\n            label: \"文字粗细\",\r\n            name: \"countUpStyleFontWeight\",\r\n            required: false,\r\n            placeholder: \"\",\r\n            options: [\r\n              { code: \"normal\", name: \"正常\" },\r\n              { code: \"bold\", name: \"粗体\" },\r\n              { code: \"bolder\", name: \"特粗体\" },\r\n              { code: \"lighter\", name: \"细体\" },\r\n            ],\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        name: \"前置标签\",\r\n        list: [\r\n          {\r\n            componentName: \"Input\",\r\n            label: \"前置文本\",\r\n            name: \"addonBefore\",\r\n            required: false,\r\n            placeholder: \"请输入前置文本\",\r\n          },\r\n          {\r\n            componentName: \"InputNumber\",\r\n            label: \"字体大小\",\r\n            name: \"addonBeforeStyleFontSize\",\r\n            required: false,\r\n            min: 12,\r\n            placeholder: \"\",\r\n            addonAfter: \"px\",\r\n          },\r\n          {\r\n            componentName: \"SketchPicker\",\r\n            label: \"字体颜色\",\r\n            name: \"addonBeforeStyleColor\",\r\n            required: false,\r\n            placeholder: \"请选择字体颜色\",\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        name: \"后置标签\",\r\n        list: [\r\n          {\r\n            componentName: \"Input\",\r\n            label: \"后置文本\",\r\n            name: \"addonAfter\",\r\n            required: false,\r\n            placeholder: \"请输入后置文本\",\r\n          },\r\n          {\r\n            componentName: \"InputNumber\",\r\n            label: \"字体大小\",\r\n            name: \"addonAfterStyleFontSize\",\r\n            required: false,\r\n            min: 12,\r\n            placeholder: \"\",\r\n            addonAfter: \"px\",\r\n          },\r\n          {\r\n            componentName: \"SketchPicker\",\r\n            label: \"字体颜色\",\r\n            name: \"addonAfterStyleColor\",\r\n            required: false,\r\n            placeholder: \"请选择字体颜色\",\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  ],\r\n};\r\n","import { echartsConfig, animateConfig } from \"../../base\";\r\n\r\nexport const pie = {\r\n  // 配置名称\r\n  code: \"pie\",\r\n  configure: [\r\n    [\r\n      {\r\n        name: \"饼图设置\",\r\n        list: [\r\n          ...echartsConfig.pie,\r\n          echartsConfig.seriesLabel.map((item) => {\r\n            console.log(item, \"item\");\r\n            return {\r\n              ...item,\r\n              list: item.list.map((subItem) => {\r\n                if (subItem.name === \"seriesLabelPosition\") {\r\n                  return {\r\n                    ...subItem,\r\n                    options: [\r\n                      { code: \"outside\", name: \"outside\" },\r\n                      { code: \"inside\", name: \"inside\" },\r\n                      { code: \"center\", name: \"center\" },\r\n                    ],\r\n                  };\r\n                }\r\n                return subItem;\r\n              }),\r\n            };\r\n          }),\r\n          echartsConfig.seriesItemStyle,\r\n          echartsConfig.emphasis,\r\n        ],\r\n      },\r\n      {\r\n        name: \"标题\",\r\n        list: [...echartsConfig.title],\r\n      },\r\n      {\r\n        name: \"图例\",\r\n        list: [...echartsConfig.legend],\r\n      },\r\n      {\r\n        name: \"自定义颜色\",\r\n        list: [...echartsConfig.echartColor],\r\n      },\r\n      ...animateConfig.configure,\r\n    ],\r\n  ],\r\n};\r\n","import { boxConfig } from \"../../base\";\r\n\r\nexport const baseImage = {\r\n  // 配置名称\r\n  code: \"baseImage\",\r\n  // 基础配置项\r\n  configure: [boxConfig.configure],\r\n};\r\n","import { boxConfig, swiperConfig } from \"../../base\";\r\n\r\nexport const baseBanner = {\r\n  // 配置名称\r\n  code: \"baseBanner\",\r\n  // 基础配置项\r\n  configure: [swiperConfig.configure, boxConfig.configure],\r\n};\r\n","export const table = {\r\n  // 配置名称\r\n  code: \"table\",\r\n  // 基础配置项\r\n  configure: [\r\n    [\r\n      {\r\n        name: \"滚动设置\",\r\n        list: [\r\n          {\r\n            componentName: \"Switch\",\r\n            label: \"循环播放\",\r\n            name: \"loop\",\r\n            required: false,\r\n            placeholder: \"\",\r\n          },\r\n          {\r\n            componentName: \"Switch\",\r\n            label: \"自动播放\",\r\n            name: \"autoplay\",\r\n            required: false,\r\n            placeholder: \"\",\r\n          },\r\n          {\r\n            componentName: \"InputNumber\",\r\n            label: \"间距\",\r\n            name: \"spaceBetween\",\r\n            required: false,\r\n            min: 0,\r\n            placeholder: \"请输入间距\",\r\n            addonAfter: \"px\",\r\n          },\r\n          {\r\n            componentName: \"InputNumber\",\r\n            label: \"一屏幻灯片数量\",\r\n            name: \"slidesPerView\",\r\n            required: false,\r\n            min: 1,\r\n            placeholder: \"请输入一屏幻灯片数量\",\r\n            addonAfter: \"个\",\r\n          },\r\n          {\r\n            componentName: \"JsonEdit\",\r\n            label: \"Column数据\",\r\n            name: \"tableColumn\",\r\n            required: false,\r\n            placeholder: \"请输入Column数据\",\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n    [\r\n      {\r\n        name: \"进度条\",\r\n        list: [\r\n          {\r\n            componentName: \"SketchPicker\",\r\n            label: \"前景颜色\",\r\n            name: \"progressForegroundColor\",\r\n            required: false,\r\n            placeholder: \"\",\r\n          },\r\n          {\r\n            componentName: \"SketchPicker\",\r\n            label: \"背景颜色\",\r\n            name: \"progressBackgroundColor\",\r\n            required: false,\r\n            placeholder: \"\",\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        name: \"序号\",\r\n        list: [\r\n          {\r\n            componentName: \"Switch\",\r\n            label: \"使用排名图标\",\r\n            name: \"serialNumberRank\",\r\n            required: false,\r\n            placeholder: \"\",\r\n          },\r\n          {\r\n            componentName: \"InputNumber\",\r\n            label: \"字体大小\",\r\n            name: \"serialNumberFontSize\",\r\n            required: false,\r\n            min: 12,\r\n            placeholder: \"\",\r\n            addonAfter: \"px\",\r\n          },\r\n          {\r\n            componentName: \"SketchPicker\",\r\n            label: \"字体颜色\",\r\n            name: \"serialNumberColor\",\r\n            required: false,\r\n            placeholder: \"请选择字体颜色\",\r\n          },\r\n          {\r\n            componentName: \"SketchPicker\",\r\n            label: \"背景颜色\",\r\n            name: \"serialNumberBackgroundColor\",\r\n            required: false,\r\n            placeholder: \"请选择背景颜色\",\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        name: \"表头\",\r\n        list: [\r\n          {\r\n            componentName: \"Switch\",\r\n            label: \"是否显示\",\r\n            name: \"tableShowHeader\",\r\n            required: false,\r\n            placeholder: \"\",\r\n          },\r\n          {\r\n            componentName: \"SketchPicker\",\r\n            label: \"背景颜色\",\r\n            name: \"tableHeaderBackgroudColor\",\r\n            required: false,\r\n            placeholder: \"请选择背景颜色\",\r\n            relationFields: \"tableShowHeader\",\r\n            relationValues: \"true\",\r\n          },\r\n          {\r\n            componentName: \"SketchPicker\",\r\n            label: \"字体颜色\",\r\n            name: \"tableHeaderColor\",\r\n            required: false,\r\n            placeholder: \"请选择字体颜色\",\r\n            relationFields: \"tableShowHeader\",\r\n            relationValues: \"true\",\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        name: \"表体\",\r\n        list: [\r\n          {\r\n            componentName: \"SketchPicker\",\r\n            label: \"字体颜色\",\r\n            name: \"tableTbodyColor\",\r\n            required: false,\r\n            placeholder: \"请选择字体颜色\",\r\n          },\r\n          [\r\n            {\r\n              name: \"奇数行配置\",\r\n              list: [\r\n                {\r\n                  componentName: \"SketchPicker\",\r\n                  label: \"背景颜色\",\r\n                  name: \"tableTbodyOddBackgroudColor\",\r\n                  required: false,\r\n                  placeholder: \"\",\r\n                },\r\n                [\r\n                  {\r\n                    name: \"盒子阴影\",\r\n                    list: [\r\n                      {\r\n                        componentName: \"Switch\",\r\n                        label: \"内阴影\",\r\n                        name: \"tableTbodyOddBoxInset\",\r\n                        required: false,\r\n                        placeholder: \"\",\r\n                      },\r\n                      {\r\n                        componentName: \"InputNumber\",\r\n                        label: \"X轴偏移\",\r\n                        name: \"tableTbodyOddBoxShadowX\",\r\n                        required: false,\r\n                        placeholder: \"请输入X轴偏移\",\r\n                        addonAfter: \"px\",\r\n                      },\r\n                      {\r\n                        componentName: \"InputNumber\",\r\n                        label: \"Y轴偏移\",\r\n                        name: \"tableTbodyOddBoxShadowY\",\r\n                        required: false,\r\n                        placeholder: \"请输入Y轴偏移\",\r\n                        addonAfter: \"px\",\r\n                      },\r\n                      {\r\n                        componentName: \"InputNumber\",\r\n                        label: \"模糊值\",\r\n                        name: \"tableTbodyOddBoxShadowF\",\r\n                        required: false,\r\n                        placeholder: \"请输入模糊值\",\r\n                        addonAfter: \"px\",\r\n                      },\r\n                      {\r\n                        componentName: \"SketchPicker\",\r\n                        label: \"颜色\",\r\n                        name: \"tableTbodyOddBoxShadowC\",\r\n                        required: false,\r\n                        placeholder: \"请选择颜色\",\r\n                      },\r\n                    ],\r\n                  },\r\n                  {\r\n                    name: \"边框\",\r\n                    list: [\r\n                      {\r\n                        componentName: \"Select\",\r\n                        label: \"边框样式\",\r\n                        name: \"tableTbodyOddBorderStyle\",\r\n                        required: false,\r\n                        placeholder: \"请选择边框样式\",\r\n                        options: [\r\n                          { code: \"none\", name: \"无\" },\r\n                          { code: \"solid\", name: \"直线\" },\r\n                          { code: \"dashed\", name: \"破折线\" },\r\n                          { code: \"dotted\", name: \"点状线\" },\r\n                          { code: \"double\", name: \"双划线\" },\r\n                          { code: \"groove\", name: \"3D凹槽\" },\r\n                          { code: \"ridge\", name: \"3D垄状\" },\r\n                          { code: \"inset\", name: \"3D内嵌\" },\r\n                          { code: \"outset\", name: \"3D外嵌\" },\r\n                        ],\r\n                      },\r\n                      {\r\n                        componentName: \"InputNumber\",\r\n                        label: \"边框尺寸\",\r\n                        name: \"tableTbodyOddBorderWidth\",\r\n                        required: false,\r\n                        placeholder: \"请输入尺寸\",\r\n                        addonAfter: \"px\",\r\n                      },\r\n                      {\r\n                        componentName: \"SketchPicker\",\r\n                        label: \"颜色\",\r\n                        name: \"tableTbodyOddBorderColor\",\r\n                        required: false,\r\n                        placeholder: \"请选择边框颜色\",\r\n                      },\r\n                    ],\r\n                  },\r\n                ],\r\n              ],\r\n            },\r\n          ],\r\n          [\r\n            {\r\n              name: \"偶数行配置\",\r\n              list: [\r\n                {\r\n                  componentName: \"SketchPicker\",\r\n                  label: \"背景颜色\",\r\n                  name: \"tableTbodyEvenBackgroudColor\",\r\n                  required: false,\r\n                  placeholder: \"\",\r\n                },\r\n                [\r\n                  {\r\n                    name: \"盒子阴影\",\r\n                    list: [\r\n                      {\r\n                        componentName: \"Switch\",\r\n                        label: \"内阴影\",\r\n                        name: \"tableTbodyEvenBoxInset\",\r\n                        required: false,\r\n                        placeholder: \"\",\r\n                      },\r\n                      {\r\n                        componentName: \"InputNumber\",\r\n                        label: \"X轴偏移\",\r\n                        name: \"tableTbodyEvenBoxShadowX\",\r\n                        required: false,\r\n                        placeholder: \"请输入X轴偏移\",\r\n                        addonAfter: \"px\",\r\n                      },\r\n                      {\r\n                        componentName: \"InputNumber\",\r\n                        label: \"Y轴偏移\",\r\n                        name: \"tableTbodyEvenBoxShadowY\",\r\n                        required: false,\r\n                        placeholder: \"请输入Y轴偏移\",\r\n                        addonAfter: \"px\",\r\n                      },\r\n                      {\r\n                        componentName: \"InputNumber\",\r\n                        label: \"模糊值\",\r\n                        name: \"tableTbodyEvenBoxShadowF\",\r\n                        required: false,\r\n                        placeholder: \"请输入模糊值\",\r\n                        addonAfter: \"px\",\r\n                      },\r\n                      {\r\n                        componentName: \"SketchPicker\",\r\n                        label: \"颜色\",\r\n                        name: \"tableTbodyEvenBoxShadowC\",\r\n                        required: false,\r\n                        placeholder: \"请选择颜色\",\r\n                      },\r\n                    ],\r\n                  },\r\n                  {\r\n                    name: \"边框\",\r\n                    list: [\r\n                      {\r\n                        componentName: \"Select\",\r\n                        label: \"边框样式\",\r\n                        name: \"tableTbodyEvenBorderStyle\",\r\n                        required: false,\r\n                        placeholder: \"请选择边框样式\",\r\n                        options: [\r\n                          { code: \"none\", name: \"无\" },\r\n                          { code: \"solid\", name: \"直线\" },\r\n                          { code: \"dashed\", name: \"破折线\" },\r\n                          { code: \"dotted\", name: \"点状线\" },\r\n                          { code: \"double\", name: \"双划线\" },\r\n                          { code: \"groove\", name: \"3D凹槽\" },\r\n                          { code: \"ridge\", name: \"3D垄状\" },\r\n                          { code: \"inset\", name: \"3D内嵌\" },\r\n                          { code: \"outset\", name: \"3D外嵌\" },\r\n                        ],\r\n                      },\r\n                      {\r\n                        componentName: \"InputNumber\",\r\n                        label: \"边框尺寸\",\r\n                        name: \"tableTbodyEvenBorderWidth\",\r\n                        required: false,\r\n                        placeholder: \"请输入尺寸\",\r\n                        addonAfter: \"px\",\r\n                      },\r\n                      {\r\n                        componentName: \"SketchPicker\",\r\n                        label: \"颜色\",\r\n                        name: \"tableTbodyEvenBorderColor\",\r\n                        required: false,\r\n                        placeholder: \"请选择边框颜色\",\r\n                      },\r\n                    ],\r\n                  },\r\n                ],\r\n              ],\r\n            },\r\n          ],\r\n        ],\r\n      },\r\n    ],\r\n  ],\r\n};\r\n","import { elementDataConfig } from \"@src/core/config/base\";\r\nexport const formRadio = {\r\n  // 配置名称\r\n  code: \"formRadio\",\r\n  // 基础配置项\r\n  configure: [\r\n    [\r\n      {\r\n        name: \"基础设置\",\r\n        list: [\r\n          {\r\n            componentName: \"Select\",\r\n            label: \"大小\",\r\n            name: \"radioSize\",\r\n            required: false,\r\n            placeholder: \"\",\r\n            options: [\r\n              { code: \"large\", name: \"large\" },\r\n              { code: \"middle\", name: \"middle\" },\r\n              { code: \"small\", name: \"small\" },\r\n            ],\r\n          },\r\n          {\r\n            componentName: \"Select\",\r\n            label: \"类型\",\r\n            name: \"radioOptionType\",\r\n            required: false,\r\n            placeholder: \"\",\r\n            options: [\r\n              { code: \"default\", name: \"default\" },\r\n              { code: \"button\", name: \"button\" },\r\n            ],\r\n          },\r\n          {\r\n            componentName: \"Select\",\r\n            label: \"对齐方式\",\r\n            name: \"radioTextAlign\",\r\n            required: false,\r\n            placeholder: \"\",\r\n            options: [\r\n              { code: \"center\", name: \"居中\" },\r\n              { code: \"flex-start\", name: \"左对齐\" },\r\n              { code: \"flex-end\", name: \"右对齐\" },\r\n            ],\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  ],\r\n  data: [...elementDataConfig.configure],\r\n};\r\n","import { elementDataConfig } from \"@src/core/config/base\";\r\nexport const formSelect = {\r\n  // 配置名称\r\n  code: \"formSelect\",\r\n  // 基础配置项\r\n  configure: [\r\n    [\r\n      {\r\n        name: \"基础设置\",\r\n        list: [\r\n          {\r\n            componentName: \"Select\",\r\n            label: \"大小\",\r\n            name: \"radioSize\",\r\n            required: false,\r\n            placeholder: \"\",\r\n            options: [\r\n              { code: \"large\", name: \"large\" },\r\n              { code: \"middle\", name: \"middle\" },\r\n              { code: \"small\", name: \"small\" },\r\n            ],\r\n          },\r\n          {\r\n            componentName: \"Select\",\r\n            label: \"对齐方式\",\r\n            name: \"radioTextAlign\",\r\n            required: false,\r\n            placeholder: \"\",\r\n            options: [\r\n              { code: \"center\", name: \"居中\" },\r\n              { code: \"flex-start\", name: \"左对齐\" },\r\n              { code: \"flex-end\", name: \"右对齐\" },\r\n            ],\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  ],\r\n  data: [...elementDataConfig.configure],\r\n};\r\n","import React, { FC } from \"react\";\r\nimport { Form } from \"antd\";\r\nimport DynamicForm from \"../dynamicForm\";\r\nimport elements from \"@src/core/config/classification\";\r\n\r\ninterface IConfigLayoutRightAsideElement {\r\n  element?: elementsNameType;\r\n  configureValue: IAnyObject;\r\n  onFinish: (data: IAnyObject) => void;\r\n}\r\n\r\nexport const ConfigLayoutRightAsideElement: FC<\r\n  IConfigLayoutRightAsideElement\r\n> = ({ configureValue, onFinish, element }) => {\r\n  const [form] = Form.useForm();\r\n  return (\r\n    <div className=\"cms-config-layout__element\">\r\n      <Form\r\n        labelCol={{ flex: \"110px\" }}\r\n        labelAlign=\"left\"\r\n        form={form}\r\n        initialValues={configureValue}\r\n      >\r\n        <DynamicForm\r\n          datas={elements?.[element as elementsNameType]?.configure || []}\r\n          form={form}\r\n          callback={(field: string, value: any) => {\r\n            const val =\r\n              value && !isNaN(value) && typeof value !== \"boolean\"\r\n                ? Number(value)\r\n                : value;\r\n            if (configureValue[field] !== val) {\r\n              onFinish({\r\n                [field]: val,\r\n              });\r\n            }\r\n          }}\r\n        />\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n","import React, { FC, useCallback, useEffect, useState } from \"react\";\r\nimport { Button, Form, Select, Switch } from \"antd\";\r\nimport DynamicForm from \"../dynamicForm\";\r\nimport { elementDataConfig, widgetDataConfig } from \"@src/core/config/base\";\r\nimport { Tabs } from \"antd\";\r\n\r\nimport \"./index.scss\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\ninterface IConfigLayoutRightAsideData {\r\n  widgetDataValue: IAnyObject;\r\n  elementDataValue: IAnyObject;\r\n  widgetOnFinish: (data: IAnyObject) => void;\r\n  elementOnFinish: (data: IAnyObject) => void;\r\n  isShowWidgetDataConfig?: boolean;\r\n  paramFields?: string[];\r\n}\r\n\r\nexport const ConfigLayoutRightAsideData: FC<IConfigLayoutRightAsideData> = ({\r\n  widgetDataValue,\r\n  elementDataValue,\r\n  widgetOnFinish,\r\n  elementOnFinish,\r\n  isShowWidgetDataConfig,\r\n  paramFields,\r\n}) => {\r\n  const [elementForm] = Form.useForm();\r\n  const [widgetForm] = Form.useForm();\r\n  const [activeKey, setActiveKey] = useState(\"1\");\r\n  useEffect(() => {\r\n    if (elementDataValue) {\r\n      setActiveKey(\"1\");\r\n    } else {\r\n      setActiveKey(\"2\");\r\n    }\r\n  }, [elementDataValue]);\r\n\r\n  const onChange = useCallback(\r\n    (key: string) => {\r\n      if (elementDataValue) {\r\n        setActiveKey(key);\r\n      }\r\n    },\r\n    [elementDataValue]\r\n  );\r\n\r\n  return (\r\n    <div className=\"cms-config-layout__data\">\r\n      <Tabs activeKey={activeKey} centered onChange={onChange}>\r\n        <TabPane\r\n          tabKey=\"1\"\r\n          tab=\"组件\"\r\n          key=\"1\"\r\n          disabled={!Boolean(elementDataValue)}\r\n        >\r\n          <Form\r\n            layout=\"vertical\"\r\n            labelAlign=\"left\"\r\n            form={elementForm}\r\n            initialValues={elementDataValue}\r\n            onFinish={elementOnFinish}\r\n          >\r\n            {isShowWidgetDataConfig ? (\r\n              <Form.Item\r\n                label=\"使用微件数据\"\r\n                name=\"useInterface\"\r\n                tooltip=\"该组件使用微件的接口数据\"\r\n                valuePropName=\"checked\"\r\n              >\r\n                <Switch size=\"small\" />\r\n              </Form.Item>\r\n            ) : null}\r\n            <DynamicForm\r\n              formSubmit\r\n              datas={elementDataConfig.configure || []}\r\n              form={elementForm}\r\n              callback={(field: string, value: any) => {\r\n                const val =\r\n                  value && !isNaN(value) && typeof value !== \"boolean\"\r\n                    ? Number(value)\r\n                    : value;\r\n                if (elementDataValue[field] !== val) {\r\n                  elementOnFinish({\r\n                    [field]: val,\r\n                  });\r\n                }\r\n              }}\r\n            />\r\n            {paramFields?.length ? (\r\n              <Form.Item\r\n                label=\"接口参数字段\"\r\n                name=\"paramName\"\r\n                tooltip=\"从组组件的参数中选择\"\r\n              >\r\n                <Select placeholder=\"请选择\">\r\n                  {paramFields.map((item) => (\r\n                    <Select.Option key={item}>{item}</Select.Option>\r\n                  ))}\r\n                </Select>\r\n              </Form.Item>\r\n            ) : null}\r\n            <Form.Item>\r\n              <Button type=\"primary\" htmlType=\"submit\" block>\r\n                保存\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </TabPane>\r\n        {isShowWidgetDataConfig ? (\r\n          <TabPane\r\n            tabKey=\"2\"\r\n            tab=\"微件\"\r\n            key=\"2\"\r\n            disabled={!Boolean(widgetDataValue)}\r\n          >\r\n            <Form\r\n              layout=\"vertical\"\r\n              labelAlign=\"left\"\r\n              form={widgetForm}\r\n              initialValues={widgetDataValue}\r\n              onFinish={widgetOnFinish}\r\n            >\r\n              <DynamicForm\r\n                formSubmit\r\n                datas={widgetDataConfig.configure || []}\r\n                form={widgetForm}\r\n                callback={(field: string, value: any) => {\r\n                  const val =\r\n                    value && !isNaN(value) && typeof value !== \"boolean\"\r\n                      ? Number(value)\r\n                      : value;\r\n                  if (widgetDataValue[field] !== val) {\r\n                    widgetOnFinish({\r\n                      [field]: val,\r\n                    });\r\n                  }\r\n                }}\r\n              />\r\n              <Form.Item>\r\n                <Button type=\"primary\" htmlType=\"submit\" block>\r\n                  保存\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>\r\n          </TabPane>\r\n        ) : null}\r\n      </Tabs>\r\n    </div>\r\n  );\r\n};\r\n","import React, { FC } from \"react\";\r\nimport { Form } from \"antd\";\r\nimport DynamicForm from \"../dynamicForm\";\r\nimport { pageConfig } from \"@src/core/config/base\";\r\n\r\ninterface IConfigLayoutRightAsidePage {\r\n  configureValue: IAnyObject;\r\n  onFinish: (data: IAnyObject) => void;\r\n}\r\n\r\nexport const ConfigLayoutRightAsidePage: FC<IConfigLayoutRightAsidePage> = ({\r\n  configureValue,\r\n  onFinish,\r\n}) => {\r\n  const [form] = Form.useForm();\r\n  return (\r\n    <div className=\"cms-config-layout__element\">\r\n      <Form\r\n        labelCol={{ flex: \"80px\" }}\r\n        labelAlign=\"left\"\r\n        form={form}\r\n        initialValues={configureValue}\r\n      >\r\n        <DynamicForm\r\n          datas={pageConfig.configure || []}\r\n          form={form}\r\n          callback={(field: string, value: any) => {\r\n            const val =\r\n              value && !isNaN(value) && typeof value !== \"boolean\"\r\n                ? Number(value)\r\n                : value;\r\n            if (configureValue[field] !== val) {\r\n              onFinish({\r\n                [field]: val,\r\n              });\r\n            }\r\n          }}\r\n        />\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n","import React, { FC, useState } from \"react\";\r\nimport { Button, Empty, Form, Popover } from \"antd\";\r\nimport DynamicForm from \"../dynamicForm\";\r\nimport { projectConfig } from \"@src/core/config/base\";\r\nimport \"./index.scss\";\r\nimport { IPage } from \"@src/service\";\r\nimport ModifyNameDialog from \"@src/compoents/modifyNameDialog\";\r\nimport { EllipsisOutlined } from \"@ant-design/icons\";\r\n\r\ninterface IConfigLayoutRightAsideProject {\r\n  configureValue: IAnyObject;\r\n  onFinish: (data: IAnyObject) => void;\r\n  pages: IPage[];\r\n  pageId: string | undefined;\r\n  addPageHandler: (name: string) => void;\r\n  modifyPageHandler: (data: IAnyObject) => void;\r\n  selectPageHandler: (pageId: string) => void;\r\n  deletePageHandler: (pageId: string) => void;\r\n}\r\n\r\nexport const ConfigLayoutRightAsideProject: FC<\r\n  IConfigLayoutRightAsideProject\r\n> = ({\r\n  configureValue,\r\n  onFinish,\r\n  pages,\r\n  pageId,\r\n  addPageHandler,\r\n  modifyPageHandler,\r\n  selectPageHandler,\r\n  deletePageHandler,\r\n}) => {\r\n  const [form] = Form.useForm();\r\n  const [pageDialogStatus, setPageDialogStatus] = useState(false);\r\n  const [selectPage, setSelectPage] = useState(() => {\r\n    return {\r\n      name: \"\",\r\n      pageId,\r\n    };\r\n  });\r\n  return (\r\n    <div className=\"cms-config-layout__project\">\r\n      <ModifyNameDialog\r\n        onClose={() => setPageDialogStatus(false)}\r\n        name={selectPage.name}\r\n        open={pageDialogStatus}\r\n        modifyNameSuccessHander={(pageName) => {\r\n          if (selectPage.name && selectPage.pageId) {\r\n            modifyPageHandler({\r\n              name: pageName,\r\n              pageId: selectPage.pageId,\r\n            });\r\n          } else {\r\n            addPageHandler(pageName);\r\n          }\r\n        }}\r\n        pageType={\"page\"}\r\n      />\r\n      <div className=\"page\">\r\n        <div className=\"page-header\">页面列表</div>\r\n        <div className=\"page-body\">\r\n          {pages.length ? (\r\n            <ul className=\"pag-list\">\r\n              {pages.map((item) => (\r\n                <li\r\n                  className={`page-item ${\r\n                    item.pageId === pageId ? \"is-active\" : \"\"\r\n                  }`}\r\n                  key={item.pageId}\r\n                >\r\n                  <div\r\n                    className=\"name\"\r\n                    onClick={() => {\r\n                      if (item.pageId !== pageId) {\r\n                        selectPageHandler(item.pageId);\r\n                      }\r\n                    }}\r\n                  >\r\n                    {item.name}\r\n                  </div>\r\n                  <div className=\"controls\">\r\n                    <Popover\r\n                      content={\r\n                        <div className=\"project-controls\">\r\n                          <p\r\n                            onClick={() => {\r\n                              setSelectPage((state) => ({\r\n                                ...state,\r\n                                name: item.name,\r\n                                pageId: item.pageId,\r\n                              }));\r\n                              setPageDialogStatus(true);\r\n                            }}\r\n                          >\r\n                            编辑\r\n                          </p>\r\n                          <p onClick={() => deletePageHandler(item.pageId)}>\r\n                            删除\r\n                          </p>\r\n                        </div>\r\n                      }\r\n                    >\r\n                      <EllipsisOutlined />\r\n                    </Popover>\r\n                  </div>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          ) : (\r\n            <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n          )}\r\n        </div>\r\n        <div className=\"page-footer\">\r\n          <Button\r\n            type=\"primary\"\r\n            block\r\n            onClick={() => {\r\n              setSelectPage((state) => ({\r\n                ...state,\r\n                name: \"\",\r\n              }));\r\n              setPageDialogStatus(true);\r\n            }}\r\n          >\r\n            添加页面\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <Form\r\n        style={{ display: pages.length ? \"block\" : \"none\" }}\r\n        labelCol={{ flex: \"80px\" }}\r\n        labelAlign=\"left\"\r\n        form={form}\r\n        initialValues={configureValue}\r\n      >\r\n        <DynamicForm\r\n          datas={projectConfig.configure || []}\r\n          form={form}\r\n          callback={(field: string, value: any) => {\r\n            const val =\r\n              value && !isNaN(value) && typeof value !== \"boolean\"\r\n                ? Number(value)\r\n                : value;\r\n            if (configureValue[field] !== val) {\r\n              onFinish({\r\n                [field]: val,\r\n              });\r\n            }\r\n          }}\r\n        />\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n","import React, { FC, useMemo } from \"react\";\r\nimport { Form, Select } from \"antd\";\r\nimport { IWidget } from \"@src/service\";\r\n\r\ninterface IConfigLayoutRightAsideLinkage {\r\n  currentWidgetId: string;\r\n  widgets: IWidget[];\r\n  onFinish: (data: IAnyObject) => void;\r\n}\r\n\r\nexport const ConfigLayoutRightAsideLinkage: FC<\r\n  IConfigLayoutRightAsideLinkage\r\n> = ({ currentWidgetId, onFinish, widgets }) => {\r\n  const [form] = Form.useForm();\r\n\r\n  const linkageIds = useMemo(() => {\r\n    return (\r\n      widgets\r\n        .find((item) => item.widgetId === currentWidgetId)\r\n        ?.configuration?.dataValue?.linkageIds?.split(\",\") || undefined\r\n    );\r\n  }, [currentWidgetId, widgets]);\r\n\r\n  return (\r\n    <div className=\"cms-config-layout__element\" style={{ paddingTop: 10 }}>\r\n      <Form\r\n        labelCol={{ flex: \"60px\" }}\r\n        labelAlign=\"left\"\r\n        form={form}\r\n        initialValues={{\r\n          linkageIds: linkageIds,\r\n        }}\r\n      >\r\n        <Form.Item label=\"微件关联\" name=\"linkageIds\" validateTrigger=\"onBlur\">\r\n          <Select\r\n            mode=\"multiple\"\r\n            placeholder=\"请选择联动组件\"\r\n            onChange={(e) => onFinish({ linkageIds: e ? e?.join(\",\") : \"\" })}\r\n          >\r\n            {widgets\r\n              .filter((item) => item.widgetId !== currentWidgetId)\r\n              .map((item) => (\r\n                <Select.Option key={item.widgetId} value={item.widgetId}>\r\n                  {item.name}\r\n                </Select.Option>\r\n              ))}\r\n          </Select>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n","import React, { FC } from \"react\";\r\nimport \"./index.scss\";\r\ninterface IConfigLayoutMask {}\r\n\r\nexport const ConfigLayoutMask: FC<IConfigLayoutMask> = () => {\r\n  return <div className=\"cms-config-layout__mask\"></div>;\r\n};\r\n","import React, { FC, useMemo } from \"react\";\r\n\r\ninterface IAuxiliaryLine {\r\n  gap: number;\r\n  column: number;\r\n  width: number;\r\n  height: number;\r\n  row: number;\r\n  borderColor?: string;\r\n}\r\n\r\nconst AuxiliaryLine: FC<IAuxiliaryLine> = ({\r\n  gap,\r\n  column,\r\n  width,\r\n  height,\r\n  row,\r\n  borderColor = \"rgba(255, 255, 255, 0.2)\",\r\n}) => {\r\n  const style = useMemo(() => {\r\n    return {\r\n      display: \"grid\",\r\n      gap: `${gap}px`,\r\n      gridTemplateColumns: `repeat(${column}, ${\r\n        (width - (column + 1) * gap) / column\r\n      }px)`,\r\n      gridTemplateRows: `repeat(${row},  ${\r\n        (height - (row + 1) * gap) / row\r\n      }px)`,\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      padding: `${gap}px`,\r\n    };\r\n  }, [column, gap, height, row, width]);\r\n  return (\r\n    <div className=\"cms-grid-layout__auxiliaryLine\" style={style}>\r\n      {new Array(column * row).fill(null).map((_, index) => (\r\n        <div\r\n          key={index}\r\n          style={{\r\n            borderColor: borderColor || \"rgba(255, 255, 255, 0.2)\",\r\n          }}\r\n        ></div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuxiliaryLine;\r\n","import { useDebounce } from \"ahooks\";\r\nimport React, {\r\n  FC,\r\n  ReactNode,\r\n  useCallback,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\n\r\ninterface IResizeObserver {\r\n  render: (width: number, height: number) => ReactNode;\r\n}\r\n\r\nconst BoundingClientRect: FC<IResizeObserver> = ({ render }) => {\r\n  const [boundingClientRect, setBoundingClientRect] = useState({\r\n    width: 0,\r\n    height: 0,\r\n  });\r\n\r\n  const debouncedValue = useDebounce(boundingClientRect, {\r\n    wait: 50,\r\n    trailing: true,\r\n  });\r\n\r\n  // 目标元素\r\n  const target = useRef<HTMLDivElement>(null);\r\n\r\n  // 动态计算目标元素的宽高\r\n  const getClientRect = useCallback(() => {\r\n    if (!target.current) return;\r\n    const { width, height } = (\r\n      target.current as HTMLDivElement\r\n    )?.getBoundingClientRect();\r\n\r\n    setBoundingClientRect({\r\n      width,\r\n      height,\r\n    });\r\n  }, []);\r\n  useEffect(() => {\r\n    getClientRect();\r\n    const resizeObserver = new ResizeObserver((entries: string | any[]) => {\r\n      if (!Array.isArray(entries) || !entries.length) {\r\n        return;\r\n      }\r\n      getClientRect();\r\n    });\r\n\r\n    resizeObserver.observe(target.current as HTMLDivElement);\r\n    return () => {\r\n      resizeObserver.disconnect();\r\n    };\r\n  }, [getClientRect]);\r\n  return (\r\n    <div ref={target} style={{ width: \"100%\", height: \"100%\" }}>\r\n      {render(debouncedValue.width, debouncedValue.height)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BoundingClientRect;\r\n","import { dragStore } from \"@src/compoents/dragdrop/drag\";\r\nimport React, { memo, ReactNode, useMemo } from \"react\";\r\nimport ReactGridLayout, { Layout } from \"react-grid-layout\";\r\nimport \"react-grid-layout/css/styles.css\";\r\nimport \"./index.scss\";\r\nimport AuxiliaryLine from \"./components/auxiliaryLine\";\r\nimport BoundingClientRect from \"@src/compoents/boundingClientRect\";\r\nimport { ConfigLayoutMask } from \"../configLayout\";\r\ninterface IGridLayout {\r\n  configureValue?: IAnyObject;\r\n  groupName?: string;\r\n  row?: number;\r\n  column?: number;\r\n  datas?: IAnyObject[];\r\n  gap?: number;\r\n  isDroppable?: boolean;\r\n  isResizable?: boolean;\r\n  staticed?: boolean;\r\n  selectedId?: string;\r\n  render?: (data: IAnyObject, realDdata?: IAnyObject) => ReactNode;\r\n  onDrop?: (item: Layout, data: any) => void;\r\n  onDragStop?: (item: Layout) => void;\r\n  onResizeStop?: (item: Layout) => void;\r\n  onClose?: (item: IAnyObject) => void;\r\n  transformScale?: number;\r\n}\r\n\r\nconst GridLayout = memo((props: IGridLayout) => {\r\n  const {\r\n    configureValue,\r\n    groupName = \"elements\",\r\n    row = 3,\r\n    column = 4,\r\n    datas,\r\n    gap = 10,\r\n    isDroppable = true,\r\n    isResizable = true,\r\n    staticed = false,\r\n    render,\r\n    onDrop,\r\n    onDragStop,\r\n    onResizeStop,\r\n    onClose,\r\n    selectedId,\r\n    transformScale = 1,\r\n  } = props;\r\n\r\n  const layout = useMemo(() => {\r\n    let arr: Layout[] = [];\r\n    arr =\r\n      datas?.map((item: IAnyObject) => {\r\n        return {\r\n          i: item.widgetId || item.elementId,\r\n          w: item.row,\r\n          h: item.column,\r\n          x: item.x,\r\n          y: item.y,\r\n          static: staticed,\r\n        };\r\n      }) || [];\r\n    return arr;\r\n  }, [datas, staticed]);\r\n  return (\r\n    <BoundingClientRect\r\n      render={(width, height) => {\r\n        return (\r\n          <div className=\"cms-grid-layout__main\">\r\n            {!staticed ? (\r\n              <AuxiliaryLine\r\n                gap={gap}\r\n                column={column}\r\n                width={width}\r\n                height={height}\r\n                row={row}\r\n                borderColor={configureValue?.auxiliaryLineBorderColor}\r\n              />\r\n            ) : null}\r\n\r\n            <ReactGridLayout\r\n              className=\"cms-grid-layout\"\r\n              layout={layout}\r\n              isDroppable={isDroppable}\r\n              isResizable={isResizable}\r\n              rowHeight={(height - gap * (row + 1)) / row}\r\n              maxRows={row}\r\n              width={width}\r\n              cols={column}\r\n              transformScale={transformScale}\r\n              // verticalCompact={false}\r\n              compactType={null}\r\n              preventCollision\r\n              margin={[gap, gap]}\r\n              onDrop={(data, item, e) => {\r\n                const dragData = dragStore.get(groupName as string);\r\n                console.log(\"onDrop\");\r\n                if (item.x <= column && item.y <= row) {\r\n                  onDrop?.(item, dragData);\r\n                }\r\n              }}\r\n              onResizeStop={(data, oldItem, newItem) => {\r\n                console.log(\"resize\");\r\n                if (oldItem.w !== newItem.w || oldItem.h !== newItem.h) {\r\n                  onResizeStop?.(newItem);\r\n                }\r\n              }}\r\n              onDragStop={(data, oldItem, newItem) => {\r\n                console.log(\"onDragStop\");\r\n                if (oldItem.x !== newItem.x || oldItem.y !== newItem.y) {\r\n                  onDragStop?.(newItem);\r\n                }\r\n              }}\r\n            >\r\n              {datas?.map((item, index) => (\r\n                <div\r\n                  key={item.widgetId || item.elementId}\r\n                  className=\"cms-grid-layout__item\"\r\n                >\r\n                  {!staticed ? (\r\n                    <div\r\n                      className=\"cms-grid-layout__close\"\r\n                      onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        e.preventDefault();\r\n                        onClose?.(item);\r\n                      }}\r\n                    ></div>\r\n                  ) : null}\r\n                  {selectedId &&\r\n                  (selectedId === item.widgetId ||\r\n                    selectedId === item.elementId) ? (\r\n                    <ConfigLayoutMask />\r\n                  ) : null}\r\n                  <div className=\"cms-grid-layout__item--content\">\r\n                    {render?.(item)}\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </ReactGridLayout>\r\n          </div>\r\n        );\r\n      }}\r\n    ></BoundingClientRect>\r\n  );\r\n});\r\n\r\nexport default GridLayout;\r\n","import React, { FC, HtmlHTMLAttributes, ReactNode } from \"react\";\r\nimport \"./index.scss\";\r\nimport { getStyles } from \"@src/utils\";\r\ninterface IPreviewLayout extends HtmlHTMLAttributes<HTMLDivElement> {\r\n  data: IAnyObject;\r\n  header: ReactNode;\r\n  body: ReactNode;\r\n}\r\n\r\nconst PreviewLayout: FC<IPreviewLayout> = ({\r\n  data,\r\n  header,\r\n  body,\r\n  id,\r\n  style,\r\n}) => {\r\n  return (\r\n    <div\r\n      className=\"cms-preview-layout\"\r\n      style={{\r\n        ...getStyles(data?.configuration?.configureValue || {}),\r\n        ...style,\r\n      }}\r\n      id={id}\r\n    >\r\n      {data?.configuration?.configureValue?.headerShow ? (\r\n        <div\r\n          className=\"cms-preview-layout__header\"\r\n          style={{\r\n            ...getStyles(\r\n              data?.configuration?.configureValue || {},\r\n              \"headerStyle\"\r\n            ),\r\n            height: !(\r\n              data?.configuration?.configureValue?.bodyShow ||\r\n              data?.configuration?.configureValue?.bodyShow === undefined\r\n            )\r\n              ? \"100%\"\r\n              : `${\r\n                  data?.configuration?.configureValue?.headerStyleHeight || 40\r\n                }px`,\r\n          }}\r\n        >\r\n          {header}\r\n        </div>\r\n      ) : null}\r\n      {data?.configuration?.configureValue?.bodyShow ||\r\n      data?.configuration?.configureValue?.bodyShow === undefined ? (\r\n        <div\r\n          className=\"cms-preview-layout__body\"\r\n          style={getStyles(\r\n            data?.configuration?.configureValue || {},\r\n            \"bodyStyle\"\r\n          )}\r\n        >\r\n          {body}\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PreviewLayout;\r\n"],"names":["dragStore","constructor","moveItem","Map","set","key","data","this","remove","delete","get","echarts","memo","props","theme","group","initOptions","option","updateOptions","loading","loadingOptions","autoresize","dom","useRef","chart","timmer","currentIndex","autoPlayHandler","useCallback","series","length","current","clearInterval","setInterval","_","_chart$current","_chart$current2","_chart$current3","dataLen","dispatchAction","type","seriesIndex","dataIndex","mouseHander","e","_chart$current4","_chart$current5","init","initChart","showLoading","hideLoading","setOption","tooltip","trigger","backgroundColor","borderColor","padding","textStyle","color","fontSize","cleanup","off","dispose","undefined","useEffect","onResize","resizeObserver","ResizeObserver","entries","callback","_chart$current6","Array","isArray","resize","observe","disconnect","on","React","className","ref","style","width","height","prevProps","nextProps","JSON","stringify","_ref","datas","selectedId","onChange","configureValue","getStyles","map","item","pageId","onClick","name","open","onClose","title","pageType","Modal","onCancel","centered","footer","position","_diffData$configurati","diffData","setDiffData","useState","RenderWidget","configuration","isDroppable","isResizable","staticed","onChangeParams","widgetId","state","_state$configuration","_state$configuration2","_state$configuration3","dataValue","params","widget","_diffData$configurati2","RenderPage","widgets","copy","parse","index","findIndex","_copy$widgets$index","_copy$widgets$index2","_copy$widgets$index2$","_copy$widgets$index3","_copy$widgets$index3$","_copy$widgets$index3$2","page","_diffData$configurati3","_data$configuration","setPageId","_data$pages","_data$pages$","pages","currentPage","useMemo","find","_currentPage$widgets","_widgets$index","_widgets$index2","_widgets$index2$confi","_widgets$index3","_widgets$index3$confi","_widgets$index3$confi2","Navigation","project","onDrop","onDragStop","onResizeStop","transformScale","getlinkageParams","parentParams","i","_widgets$i","_widgets$i$configurat","_widgets$i$configurat2","_widgets$i2","_widgets$i2$configura","_widgets$i2$configura2","_widgets$i3","_widgets$i3$configura","_widgets$i3$configura2","linkageIds","includes","PreviewLayout","header","GridLayout","filter","render","linkageParams","row","column","horizontalNumber","body","verticalNumber","method","url","setData","setLoading","success","setSuccess","getData","async","waitTime","axios","then","res","catch","options","field","getOption","handleEchartsOption","currentData","legendData","xAxisData","yAxisData","handleData","legend","xAxis","yAxis","line","Echarts","currentColor","bar","itemStyle","borderRadius","barBorderRadius","barGradation","barOrient","offset","tinycolor","lighten","toString","darken","formatter","arr","legendTotal","total","target","value","push","toFixed","join","rich","a","b","align","pie","borderWidth","seriesItemStyleColorBorderWidth","seriesItemStyleBorderColor","seriesItemStyleColorBorderRadius","center","seriesHorizontalPosition","seriesVerticalPosition","emphasis","scaleSize","emphasisScaleSize","label","show","emphasisLabelFontSize","fontWeight","emphasisLabelFontWeight","emphasisLabelColor","shadowBlur","emphasisStyleShadowBlur","shadowOffsetX","emphasisStyleShadowOffsetX","shadowOffsetY","emphasisStyleShadowOffsetY","shadowColor","emphasisStyleShadowColor","BaseImage","baseTextStyle","Image","src","loop","spaceBetween","slidesPerView","rows","pagination","navigation","autoplay","direction","modules","Autoplay","Pagination","swiperRef","setTimeout","_swiperRef$current","_swiperRef$current$sw","_swiperRef$current$sw2","_swiperRef$current2","_swiperRef$current2$s","_swiperRef$current2$s2","swiper","start","stop","Swiper","Math","ceil","fill","SwiperSlide","subIndex","display","alignItems","marginTop","BaseBanner","CustomSwiper","alt","background","tableHeaderBackgroudColor","tableHeaderColor","tableShowHeader","tableColumn","flex","justifyContent","tableTbodyColor","subItem","serialNumberRank","renderItem","components","progressBackgroundColor","progressForegroundColor","BaseText","iconStyle","iconStyleSelect","dangerouslySetInnerHTML","__html","Line","Bar","CountUp","countupRef","countUpAnimRef","countUpTextStyle","addonBeforeTextStyle","addonAfterTextStyle","initCountUp","countUpModule","decimalPlaces","error","addonBefore","addonAfter","Pie","MessageText","Marquee","pauseOnHover","gradient","DateText","timer","text","setText","fmtDate","Date","getTime","getText","Table","FormRadio","other","defaultValue","_other$params","paramName","radioTextAlign","Radio","size","radioSize","_other$onChangeHandle","onChangeHandler","call","optionType","radioOptionType","FormSelect","Select","Option","realData","isRender","setIsRender","clearTimeout","element","elements","capitalizeFirstLetter","_data$configuration$d","useInterface","_data$configuration2","_data$configuration2$","mock","_data$configuration3","_data$configuration3$","_data$configuration4","_data$configuration4$","_data$configuration5","_data$configuration5$","Request","left","right","top","bottom","zIndex","Spin","transform","WIDGET_HEADER_COLUMN","WIDGET_HEADER_ROW","gap","WIDGET_HEADER_GAP","subData","_data$configuration6","_data$configuration6$","RenderElement","WIDGET_BODY_COLUMN","WIDGET_BODY_ROW","WIDGET_BODY_GAP","_data$configuration7","_data$configuration7$","modifyNameSuccessHander","PAGETYPENAME","destroyOnClose","Form","onFinish","values","message","initialValues","autoComplete","Item","rules","required","Input","placeholder","Button","htmlType","block","ConfigLayoutHeader","logo","previewHandler","publishHandler","$t","useContext","LocaleContext","navigate","useNavigate","isModalNameOpen","setIsModalNameOpen","ModifyNameDialog","Ruler","from","keys","ConfigLayoutMain","children","id","scale","setScale","Rule","transformOrigin","Slider","min","max","CloseOutlined","ALLTABS","icon","ConfigLayoutLeftAside","navs","setCurrent","tabs","setTabs","Tooltip","placement","borderRight","Box","groupName","draggable","onDragStart","onDragEnd","ALLELEMENTS","ConfigLayoutLeftAsideElements","_elementsList$filter","_elementsList$filter2","getElements","elementsList","elementsLoading","ELEMETSTYPE","DragItem","code","preview","Empty","image","PRESENTED_IMAGE_SIMPLE","ConfigLayoutLeftAsideWidget","_widgetsList$filter","_widgetsList$filter2","getWidgets","widgetsLoading","widgetsList","ConfigLayoutLeftAsidePage","getPages","pagesList","pagesLoading","web","ConfigLayoutRightAside","borderLeft","renderTree","elementId","onSelected","pid","projectId","onEditHandler","onDeleteHandler","setSelect","_item$pages","_item$widgets","_item$elements","_item$pages2","_item$widgets2","_item$elements2","FolderOpenOutlined","FolderOutlined","Popover","content","pId","EllipsisOutlined","ConfigLayoutRightAsideLayer","select","editorRef","editorObj","initEditor","totalOptions","mode","_editorObj$current","JSONEditor","destroy","form","formSubmit","componentName","validateTrigger","allowClear","disabled","onBlur","InputNumber","TextArea","valuePropName","Switch","step","onChangeComplete","ColorPicker","format","showText","setFieldValue","toHex","shouldUpdate","noStyle","paddingBottom","JsonEditor","getFieldValue","Panel","Collapse","judgeType","Object","prototype","DynamicForm","relationFields","split","_ref2","every","relationValues","String","BaseForm","defaultActiveKey","bordered","list","_ref3","subbItem","ConfigLayoutRightAsideWidget","useForm","labelCol","labelAlign","widgetConfig","configure","val","isNaN","Number","baseText","fontConfig","boxConfig","messageText","dateText","echartsConfig","seriesStack","seriesLabel","symbol","grid","echartColor","animateConfig","countUp","seriesItemStyle","baseImage","baseBanner","swiperConfig","table","formRadio","elementDataConfig","formSelect","ConfigLayoutRightAsideElement","_elements","TabPane","Tabs","ConfigLayoutRightAsideData","widgetDataValue","elementDataValue","widgetOnFinish","elementOnFinish","isShowWidgetDataConfig","paramFields","elementForm","widgetForm","activeKey","setActiveKey","tabKey","tab","Boolean","layout","widgetDataConfig","ConfigLayoutRightAsidePage","pageConfig","ConfigLayoutRightAsideProject","addPageHandler","modifyPageHandler","selectPageHandler","deletePageHandler","pageDialogStatus","setPageDialogStatus","selectPage","setSelectPage","pageName","projectConfig","ConfigLayoutRightAsideLinkage","currentWidgetId","_widgets$find","_widgets$find$configu","_widgets$find$configu2","_widgets$find$configu3","paddingTop","ConfigLayoutMask","gridTemplateColumns","gridTemplateRows","boundingClientRect","setBoundingClientRect","debouncedValue","useDebounce","wait","trailing","getClientRect","_target$current","getBoundingClientRect","w","h","x","y","static","BoundingClientRect","AuxiliaryLine","auxiliaryLineBorderColor","ReactGridLayout","rowHeight","maxRows","cols","compactType","preventCollision","margin","dragData","oldItem","newItem","stopPropagation","preventDefault","_data$configuration8","_data$configuration8$","_data$configuration9","headerShow","bodyShow","headerStyleHeight"],"sourceRoot":""}