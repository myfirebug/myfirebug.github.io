{"version":3,"file":"static/js/95.1d6257db47.chunk.js","mappings":"iTAYO,MAAMA,EAAkBC,iBAA8B,IAAvBC,EAAYC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,IACnD,OAAO,IAAIG,SAASC,IAClBC,YAAW,KACTD,GAAQ,EAAK,GACZL,EAAK,GAEZ,EAEaO,EAAWR,iBAA8B,IAAvBC,EAAYC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,UACtCH,EAAgBE,EACxB,EAqKA,UAnKyBQ,KACvB,MAAMC,GAAYC,EAAAA,EAAAA,UACZC,GAAWC,EAAAA,EAAAA,OAEVC,EAAMC,IAAWC,EAAAA,EAAAA,WAAS,IAC1BC,EAAQC,IAAaF,EAAAA,EAAAA,aAEtB,kBAAEG,EAAiB,WAAEC,EAAU,aAAEC,IAAiBC,EAAAA,EAAAA,OAExDC,EAAAA,EAAAA,YAAU,KACRH,GAAY,GACX,CAACA,IAEJ,MAAMI,EAAiC,CACrC,CACEC,MAAO,KACPC,UAAW,QAEb,CACED,MAAO,KACPC,UAAW,MACXC,QAAQ,EACRC,OAAQA,CAACC,EAAMC,EAAQC,EAAGC,IACjBC,EAAAA,cAAA,OAAKC,IAAKL,EAAgBM,IAAI,MAGzC,CACEV,MAAO,KACPC,UAAW,OACXU,UAAU,EACVC,UAAU,EACVC,UAAW,SACXC,MAAO,IACPC,UAAW,CACTC,IAAK,CAAEZ,KAAM,KAAMa,OAAQ,IAC3Bb,KAAM,CACJA,KAAM,KACNa,OAAQ,QAEVC,MAAO,CACLd,KAAM,KACNa,OAAQ,SAEVE,MAAO,CACLf,KAAM,KACNa,OAAQ,SAEVG,KAAM,CACJhB,KAAM,MACNa,OAAQ,QAEVI,IAAK,CACHjB,KAAM,MACNa,OAAQ,OAEVK,IAAK,CACHlB,KAAM,KACNa,OAAQ,SAId,CACEjB,MAAO,OACPC,UAAW,QACXC,QAAQ,EACRY,MAAO,KAET,CACEd,MAAO,OACPC,UAAW,aACXY,UAAW,OACXU,cAAc,EACdT,MAAO,KAET,CACEd,MAAO,OACPC,UAAW,aACXY,UAAW,YACXW,aAAa,GAEf,CACExB,MAAO,KACPa,UAAW,SACXY,IAAK,SACLX,MAAO,IACPX,OAAQA,CAACC,EAAMC,EAAQC,EAAGC,IACxBC,EAAAA,cAAA,OAAKkB,UAAU,UACblB,EAAAA,cAAA,QACEiB,IAAI,OACJE,QAASA,KACPrC,GAAQ,GACRG,EAAUY,EAAO,GAEpB,MAGiB,IAAjBA,EAAOuB,MACNpB,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,QACEiB,IAAI,WACJE,QAASA,KACPxC,EACG,mCAAkCkB,EAAOwB,WAC3C,GAEJ,MAGDrB,EAAAA,cAAA,QAAMiB,IAAI,UAAS,OAEnB,QAMZ,OACEjB,EAAAA,cAAA,OAAKkB,UAAU,eACblB,EAAAA,cAACsB,EAAAA,EAAQ,CACP/B,QAASA,EACTd,UAAWA,EAQX8C,OAAO,WACPC,WAAYtC,EACZuC,SAAUrC,EACVsC,QAAStC,EACTuC,QAAS,CACPC,QAAS,CACPC,YAAa,MAGjBC,WAAY,CACVC,SAAU,GACVC,SAAWC,IACb,GACAC,cAAc,SACdC,YAAY,OACZC,cAAeA,IAAM,CACnBpC,EAAAA,cAACqC,EAAAA,GAAM,CACLpB,IAAI,SACJqB,KAAMtC,EAAAA,cAACuC,EAAAA,EAAY,MACnBpB,QAASA,IAAMxC,EAAS,0BACxB6D,KAAK,WACN,SAKLxC,EAAAA,cAACyC,EAAAA,EAAmB,CAClBC,KAAM7D,EACN8D,QAASA,IAAM7D,GAAQ,GACvB8D,KAAM5D,IAEJ,C","sources":["webpack://large-screen-configuration/./src/pages/widgets/index.tsx"],"sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport type { ActionType, ProColumns } from \"@ant-design/pro-components\";\r\nimport { ProTable } from \"@ant-design/pro-components\";\r\nimport React, { useRef, FC, useEffect, useState } from \"react\";\r\nimport { IWidget } from \"@src/service\";\r\nimport \"./index.scss\";\r\nimport { Button } from \"antd\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { widgets } from \"@src/core/hook\";\r\nimport WidgetPreviewDialog from \"@src/compoents/widgetPreviewDialog\";\r\n\r\nexport const waitTimePromise = async (time: number = 100) => {\r\n  return new Promise((resolve) => {\r\n    setTimeout(() => {\r\n      resolve(true);\r\n    }, time);\r\n  });\r\n};\r\n\r\nexport const waitTime = async (time: number = 100) => {\r\n  await waitTimePromise(time);\r\n};\r\n\r\nconst Widgets: FC<any> = () => {\r\n  const actionRef = useRef<ActionType>();\r\n  const navigate = useNavigate();\r\n\r\n  const [show, setShow] = useState(false);\r\n  const [widget, setWidget] = useState<IWidget>();\r\n\r\n  const { filterWidgetsList, getWidgets, filterHandle } = widgets();\r\n\r\n  useEffect(() => {\r\n    getWidgets();\r\n  }, [getWidgets]);\r\n\r\n  const columns: ProColumns<IWidget>[] = [\r\n    {\r\n      title: \"名称\",\r\n      dataIndex: \"name\",\r\n    },\r\n    {\r\n      title: \"图片\",\r\n      dataIndex: \"url\",\r\n      search: false,\r\n      render: (text, record, _, action) => {\r\n        return <img src={text as string} alt=\"\" />;\r\n      },\r\n    },\r\n    {\r\n      title: \"类型\",\r\n      dataIndex: \"type\",\r\n      onFilter: true,\r\n      ellipsis: true,\r\n      valueType: \"select\",\r\n      width: 100,\r\n      valueEnum: {\r\n        all: { text: \"全部\", status: \"\" },\r\n        text: {\r\n          text: \"文本\",\r\n          status: \"text\",\r\n        },\r\n        image: {\r\n          text: \"图片\",\r\n          status: \"image\",\r\n        },\r\n        table: {\r\n          text: \"表格\",\r\n          status: \"table\",\r\n        },\r\n        line: {\r\n          text: \"折线图\",\r\n          status: \"line\",\r\n        },\r\n        bar: {\r\n          text: \"柱状图\",\r\n          status: \"bar\",\r\n        },\r\n        pie: {\r\n          text: \"饼图\",\r\n          status: \"pie\",\r\n        },\r\n      },\r\n    },\r\n    {\r\n      title: \"使用次数\",\r\n      dataIndex: \"count\",\r\n      search: false,\r\n      width: 100,\r\n    },\r\n    {\r\n      title: \"创建时间\",\r\n      dataIndex: \"createTime\",\r\n      valueType: \"date\",\r\n      hideInSearch: true,\r\n      width: 150,\r\n    },\r\n    {\r\n      title: \"创建时间\",\r\n      dataIndex: \"createTime\",\r\n      valueType: \"dateRange\",\r\n      hideInTable: true,\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      valueType: \"option\",\r\n      key: \"option\",\r\n      width: 120,\r\n      render: (text, record, _, action) => (\r\n        <div className=\"option\">\r\n          <span\r\n            key=\"view\"\r\n            onClick={() => {\r\n              setShow(true);\r\n              setWidget(record);\r\n            }}\r\n          >\r\n            预览\r\n          </span>\r\n          {record.count === 0 ? (\r\n            <>\r\n              <span\r\n                key=\"editable\"\r\n                onClick={() => {\r\n                  navigate(\r\n                    `/widgets/configuration?widgetId=${record.widgetId}`\r\n                  );\r\n                }}\r\n              >\r\n                编辑\r\n              </span>\r\n              <span key=\"delete\">删除</span>\r\n            </>\r\n          ) : null}\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"cms-widgets\">\r\n      <ProTable<IWidget>\r\n        columns={columns}\r\n        actionRef={actionRef}\r\n        // request={async (params) => {\r\n        //   await waitTime(2000);\r\n        //   return API.widgetsService.widgets({ params }).then((res) => {\r\n        //     console.log(res, \"res\");\r\n        //     return res;\r\n        //   });\r\n        // }}\r\n        rowKey=\"widgetId\"\r\n        dataSource={filterWidgetsList}\r\n        onSubmit={filterHandle}\r\n        onReset={filterHandle}\r\n        options={{\r\n          setting: {\r\n            listsHeight: 400,\r\n          },\r\n        }}\r\n        pagination={{\r\n          pageSize: 20,\r\n          onChange: (page) => console.log(page),\r\n        }}\r\n        dateFormatter=\"string\"\r\n        headerTitle=\"微件列表\"\r\n        toolBarRender={() => [\r\n          <Button\r\n            key=\"button\"\r\n            icon={<PlusOutlined />}\r\n            onClick={() => navigate(\"/widgets/configuration\")}\r\n            type=\"primary\"\r\n          >\r\n            新建\r\n          </Button>,\r\n        ]}\r\n      />\r\n      <WidgetPreviewDialog\r\n        open={show}\r\n        onClose={() => setShow(false)}\r\n        data={widget as IWidget}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Widgets;\r\n"],"names":["waitTimePromise","async","time","arguments","length","undefined","Promise","resolve","setTimeout","waitTime","Widgets","actionRef","useRef","navigate","useNavigate","show","setShow","useState","widget","setWidget","filterWidgetsList","getWidgets","filterHandle","widgets","useEffect","columns","title","dataIndex","search","render","text","record","_","action","React","src","alt","onFilter","ellipsis","valueType","width","valueEnum","all","status","image","table","line","bar","pie","hideInSearch","hideInTable","key","className","onClick","count","widgetId","ProTable","rowKey","dataSource","onSubmit","onReset","options","setting","listsHeight","pagination","pageSize","onChange","page","dateFormatter","headerTitle","toolBarRender","Button","icon","PlusOutlined","type","WidgetPreviewDialog","open","onClose","data"],"sourceRoot":""}