{"version":3,"file":"static/js/9118.fac72d7bb7.chunk.js","mappings":"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","sources":["webpack://large-screen-configuration/./src/compoents/widgetPreviewDialog/index.tsx","webpack://large-screen-configuration/./src/compoents/dragdrop/moveMask/index.tsx","webpack://large-screen-configuration/./src/compoents/dragdrop/previewItem/index.tsx","webpack://large-screen-configuration/./src/compoents/dragdrop/dragContent/index.tsx","webpack://large-screen-configuration/./src/layout/widgetLayout/index.tsx","webpack://large-screen-configuration/./src/pages/widgets/edit/index copy.tsx"],"sourcesContent":["import React, { FC, useCallback } from \"react\";\r\nimport { Modal, ModalProps } from \"antd\";\r\nimport { IElement, IWidget } from \"@src/service\";\r\nimport PreviewLayout from \"@src/layout/previewLayout\";\r\nimport { capitalizeFirstLetter } from \"@src/utils\";\r\nimport {\r\n  WIDGET_BODY_COLUMN,\r\n  WIDGET_BODY_GAP,\r\n  WIDGET_BODY_ROW,\r\n  WIDGET_HEADER_COLUMN,\r\n  WIDGET_HEADER_GAP,\r\n  WIDGET_HEADER_ROW,\r\n} from \"@src/core/enums/access.enums\";\r\nimport elements from \"@src/elements\";\r\nimport GridLayout from \"@src/layout/gridLayout\";\r\n\r\ninterface IWidgetPreviewDialog extends ModalProps {\r\n  onClose: () => void;\r\n  data: IWidget;\r\n}\r\n\r\nconst WidgetPreviewDialog: FC<IWidgetPreviewDialog> = ({\r\n  open,\r\n  onClose,\r\n  data,\r\n}) => {\r\n  const renderPreview = useCallback((data: IAnyObject) => {\r\n    if (data.element && elements[capitalizeFirstLetter(data.element)]) {\r\n      return React.createElement(\r\n        elements[capitalizeFirstLetter(data.element)],\r\n        {\r\n          options: data.configuration.configureValue,\r\n          data: data.configuration?.dataValue?.mock,\r\n          field: data.configuration?.dataValue?.field,\r\n        }\r\n      );\r\n    }\r\n    return <div>你访问的组件不存在请联系售后人员</div>;\r\n  }, []);\r\n  return (\r\n    <Modal\r\n      open={open}\r\n      onClose={onClose}\r\n      onCancel={onClose}\r\n      footer={null}\r\n      title={`微件预览`}\r\n      destroyOnClose\r\n      width={630}\r\n    >\r\n      <PreviewLayout\r\n        data={data}\r\n        style={{ width: \"600px\", height: \"400px\" }}\r\n        header={\r\n          <GridLayout\r\n            datas={\r\n              data?.elements.filter(\r\n                (item: IElement) => item.position === \"header\"\r\n              ) || []\r\n            }\r\n            isDroppable={false}\r\n            isResizable={false}\r\n            column={WIDGET_HEADER_COLUMN}\r\n            row={WIDGET_HEADER_ROW}\r\n            gap={WIDGET_HEADER_GAP}\r\n            render={renderPreview}\r\n            staticed\r\n          />\r\n        }\r\n        body={\r\n          <GridLayout\r\n            datas={\r\n              data?.elements.filter(\r\n                (item: IElement) => item.position === \"body\"\r\n              ) || []\r\n            }\r\n            isDroppable={false}\r\n            isResizable={false}\r\n            column={WIDGET_BODY_COLUMN}\r\n            row={WIDGET_BODY_ROW}\r\n            gap={WIDGET_BODY_GAP}\r\n            render={renderPreview}\r\n            staticed\r\n          />\r\n        }\r\n      />\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default WidgetPreviewDialog;\r\n","import React, { FC, HtmlHTMLAttributes, ReactNode, useMemo } from \"react\";\r\nimport { getItemSizeStyle } from \"../drag\";\r\nimport \"./index.scss\";\r\n\r\ninterface IMoveMask extends HtmlHTMLAttributes<HTMLDivElement> {\r\n  /** 容器格子宽 */\r\n  width: number;\r\n  /** 容器格子高 */\r\n  height: number;\r\n  /** 格子间隔 */\r\n  gap: number;\r\n  /** 拖拽元素列数 */\r\n  column: number;\r\n  /** 拖拽元素行数 */\r\n  row: number;\r\n  /** 拖拽元素 x 坐标 */\r\n  x: number;\r\n  /** 拖拽元素 y 坐标 */\r\n  y: number;\r\n  children: ReactNode;\r\n}\r\n\r\nconst MoveMask: FC<IMoveMask> = ({\r\n  width = 0,\r\n  height = 0,\r\n  gap = 0,\r\n  column = 0,\r\n  row = 0,\r\n  x = 0,\r\n  y = 0,\r\n  style,\r\n  children,\r\n}) => {\r\n  // 获取遮罩层样式\r\n  const maskStyle = useMemo(() => {\r\n    return getItemSizeStyle(width, height, x, y, gap, column, row);\r\n  }, [column, gap, height, row, width, x, y]);\r\n  return (\r\n    <div className=\"cms-drag__moveMask\" style={{ ...maskStyle, ...style }}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MoveMask;\r\n","import React, {\r\n  HtmlHTMLAttributes,\r\n  useCallback,\r\n  useMemo,\r\n  useState,\r\n  memo,\r\n  ReactNode,\r\n} from \"react\";\r\nimport \"./index.scss\";\r\nimport { dragStore } from \"../drag\";\r\ninterface IPreviewItem extends HtmlHTMLAttributes<HTMLDivElement> {\r\n  data: IAnyObject;\r\n  onResizeStart?: () => void;\r\n  onResizeing?: (e: React.DragEvent<HTMLDivElement>) => void;\r\n  onResizeEnd?: () => void;\r\n  groupName?: string;\r\n  /**\r\n   * @param id 刪除的数据ID\r\n   * @returns\r\n   */\r\n  onCloseHander?: (id: string) => void;\r\n  children: ReactNode;\r\n  isShowCloseBtn?: boolean;\r\n}\r\n\r\nconst PreviewItem = memo((props: IPreviewItem) => {\r\n  const {\r\n    data,\r\n    style,\r\n    groupName,\r\n    onResizeStart,\r\n    onResizeing,\r\n    onResizeEnd,\r\n    onCloseHander,\r\n    children,\r\n    isShowCloseBtn,\r\n  } = props;\r\n  const [moveing, setMoveing] = useState(false);\r\n  const [resizeing, setResizeing] = useState(false);\r\n  const previewStyles = useMemo(() => {\r\n    return {\r\n      gridArea: `${data.y} / ${data.x} / ${data.y + data.row}/ ${\r\n        data.x + data.column\r\n      }`,\r\n      ...(moveing\r\n        ? {\r\n            opacity: 0,\r\n            // 将当前元素移出容器外,将元素占位空置出来\r\n            transform: `translate(-999999999px, -9999999999px)`,\r\n          }\r\n        : {}),\r\n      ...(resizeing ? { opacity: 0.5 } : {}),\r\n    };\r\n  }, [data.column, data.row, data.x, data.y, moveing, resizeing]);\r\n  // 移动开始\r\n  const onDragStart = useCallback(\r\n    (e: React.DragEvent<HTMLDivElement>) => {\r\n      dragStore.set(groupName as string, {\r\n        ...data,\r\n        pageX: e.pageX,\r\n        pageY: e.pageY,\r\n      });\r\n      setTimeout(() => {\r\n        setMoveing(true);\r\n      }, 0);\r\n      setResizeing(false);\r\n    },\r\n    [data, groupName]\r\n  );\r\n  // 移动结束\r\n  const onDragEnd = useCallback(\r\n    (e: React.DragEvent<HTMLDivElement>) => {\r\n      setMoveing(false);\r\n      dragStore.remove(groupName as string);\r\n    },\r\n    [groupName]\r\n  );\r\n\r\n  const onMouseDown = useCallback(\r\n    (e: React.DragEvent<HTMLDivElement>) => {\r\n      dragStore.set(groupName as string, data);\r\n      setResizeing(true);\r\n      onResizeStart?.();\r\n    },\r\n    [data, groupName, onResizeStart]\r\n  );\r\n\r\n  const onMouseMove = useCallback(\r\n    (e: React.DragEvent<HTMLDivElement>) => {\r\n      e.preventDefault();\r\n      onResizeing?.(e);\r\n    },\r\n    [onResizeing]\r\n  );\r\n\r\n  const onMouseUp = useCallback(\r\n    (e: any) => {\r\n      onResizeEnd?.();\r\n      e.target.style.width = \"100%\";\r\n      e.target.style.height = \"100%\";\r\n      setResizeing(false);\r\n    },\r\n    [onResizeEnd]\r\n  );\r\n  return (\r\n    <div\r\n      className=\"cms-drag__preview--item\"\r\n      style={{ ...previewStyles, ...style }}\r\n      onDragStart={onDragStart}\r\n      draggable\r\n      onDragEnd={onDragEnd}\r\n      onMouseDown={onMouseDown}\r\n      onMouseMove={onMouseMove}\r\n      onMouseUp={onMouseUp}\r\n    >\r\n      {children}\r\n      {isShowCloseBtn ? (\r\n        <div\r\n          className=\"close\"\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            onCloseHander?.(data.elementId);\r\n          }}\r\n        ></div>\r\n      ) : (\r\n        \"none\"\r\n      )}\r\n      {/* <div className=\"resize\"></div> */}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default PreviewItem;\r\n","import React, {\r\n  memo,\r\n  ReactNode,\r\n  useCallback,\r\n  useEffect,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport \"./index.scss\";\r\nimport { booleanWithin, dragStore } from \"../drag\";\r\nimport MoveMask from \"../moveMask\";\r\nimport { guid } from \"@src/utils\";\r\nimport PreviewItem from \"../previewItem\";\r\n\r\ninterface IDragContent {\r\n  // 辅助线配置\r\n  auxiliaryLineConfig?: IAnyObject;\r\n  datas: IAnyObject[];\r\n  /** 拖拽分组标识 */\r\n  groupName?: string;\r\n  /** 容器需要分隔列数 */\r\n  column: number;\r\n  /** 容器需要分隔行数 */\r\n  row: number;\r\n  /** 容器格子间隔 */\r\n  gap: number;\r\n  /** 是否显示拖拽预占位层 */\r\n  mask?: boolean;\r\n  /** drop时对比的id字段 */\r\n  field?: string;\r\n  /**\r\n   * @param isAdd 是否新增\r\n   * @param data 数据\r\n   * @returns\r\n   */\r\n  onDropHandler?: (isAdd: boolean, data: IAnyObject) => void;\r\n  /**\r\n   * @param data 改变的数据\r\n   * @returns\r\n   */\r\n  onResizeEndHandler?: (data: IAnyObject) => void;\r\n  /**\r\n   * @param id 刪除的数据ID\r\n   * @returns\r\n   */\r\n  onCloseHander?: (id: string) => void;\r\n\r\n  renderPreview?: (data: IAnyObject) => ReactNode;\r\n}\r\n\r\nconst DragContent = memo((props: IDragContent) => {\r\n  const {\r\n    groupName,\r\n    column,\r\n    row,\r\n    gap,\r\n    mask = true,\r\n    field = \"id\",\r\n    onDropHandler,\r\n    datas,\r\n    onResizeEndHandler,\r\n    onCloseHander,\r\n    renderPreview,\r\n    auxiliaryLineConfig,\r\n  } = props;\r\n  // 目标元素\r\n  const target = useRef<HTMLDivElement>(null);\r\n  // 宽高\r\n  const [clientRect, setClientRect] = useState({\r\n    width: 0,\r\n    height: 0,\r\n    x: 0,\r\n    y: 0,\r\n  });\r\n  const [resizeEnd, setResizeEnd] = useState(false);\r\n  // 拖拽中的元素\r\n  const [current, setCuurent] = useState<IAnyObject>({});\r\n  // 动态计算目标元素的宽高\r\n  const getClientRect = useCallback(() => {\r\n    if (!target.current) return;\r\n    const { width, height, x, y } = (\r\n      target.current as HTMLDivElement\r\n    )?.getBoundingClientRect();\r\n    setClientRect({\r\n      width: (width - (column - 1) * gap) / column,\r\n      height: (height - (row - 1) * gap) / row,\r\n      x: x,\r\n      y: y,\r\n    });\r\n  }, [column, gap, row]);\r\n  useEffect(() => {\r\n    getClientRect();\r\n    const resizeObserver = new ResizeObserver((entries) => {\r\n      if (!Array.isArray(entries) || !entries.length) {\r\n        return;\r\n      }\r\n      getClientRect();\r\n    });\r\n\r\n    resizeObserver.observe(target.current as HTMLDivElement);\r\n    return () => {\r\n      resizeObserver.disconnect();\r\n    };\r\n  }, [getClientRect]);\r\n  // 判断是否可放置\r\n  const isPutDown = useMemo(() => {\r\n    const currentXy: [number, number, number, number] = [\r\n      current.x,\r\n      current.y,\r\n      current.x + current.column - 1,\r\n      current.y + current.row - 1,\r\n    ];\r\n    return booleanWithin([0, 0, column, row], currentXy);\r\n    // return (\r\n    //   booleanWithin([0, 0, column, row], currentXy) &&\r\n    //   datas.every(\r\n    //     (item) =>\r\n    //       item[field] === current[field] ||\r\n    //       !booleanIntersects(\r\n    //         [item.x - 1, item.y - 1, item.x + item.column, item.y + item.row],\r\n    //         currentXy\r\n    //       )\r\n    //   )\r\n    // );\r\n  }, [column, current, row]);\r\n\r\n  // 计算 x 坐标\r\n  const getX = useCallback(\r\n    (num: number) =>\r\n      parseInt(String((num - clientRect.x) / (clientRect.width + gap))) + 1,\r\n    [clientRect.width, clientRect.x, gap]\r\n  );\r\n  // 计算 y 坐标\r\n  const getY = useCallback(\r\n    (num: number) =>\r\n      parseInt(String((num - clientRect.y) / (clientRect.height + gap))) + 1,\r\n    [clientRect.height, clientRect.y, gap]\r\n  );\r\n  // 计算列数\r\n  const getColumn = useCallback(\r\n    (num: number) => Math.max(1, Math.ceil(num / (clientRect.width + gap))),\r\n    [clientRect.width, gap]\r\n  );\r\n  // 计算行数\r\n  const getRow = useCallback(\r\n    (num: number) => Math.max(1, Math.ceil(num / (clientRect.height + gap))),\r\n    [clientRect.height, gap]\r\n  );\r\n  // 进入放置目标\r\n  const onDragEnter = useCallback(\r\n    (e: React.DragEvent<HTMLDivElement>) => {\r\n      e.preventDefault();\r\n      const dragData = dragStore.get(groupName as string);\r\n      if (dragData) {\r\n        setCuurent((state) => ({\r\n          ...state,\r\n          ...dragData,\r\n          x: getX(e.pageX),\r\n          y: getY(e.pageY),\r\n          show: true,\r\n        }));\r\n      }\r\n      console.log(\"onDragEnter\");\r\n    },\r\n    [getX, getY, groupName]\r\n  );\r\n  // 在目标中移动\r\n  const onDragOver = useCallback(\r\n    (e: React.DragEvent<HTMLDivElement>) => {\r\n      e.preventDefault();\r\n      const dragData = dragStore.get(groupName as string);\r\n      if (dragData) {\r\n        setCuurent((state) => ({\r\n          ...state,\r\n          ...dragData,\r\n          x: getX(e.pageX),\r\n          y: getY(e.pageY),\r\n          show: true,\r\n        }));\r\n      }\r\n      console.log(\"onDragOver\");\r\n    },\r\n    [getX, getY, groupName]\r\n  );\r\n  // 离开目标\r\n  const onDragLeave = useCallback(\r\n    (e: React.DragEvent<HTMLDivElement>) => {\r\n      e.preventDefault();\r\n      setCuurent((state) => ({\r\n        ...state,\r\n        show: false,\r\n        [field]: undefined,\r\n      }));\r\n      console.log(\"onDragLeave\");\r\n    },\r\n    [field]\r\n  );\r\n  // 放置在目标上\r\n  const onDrop = useCallback(\r\n    (e: React.DragEvent<HTMLDivElement>) => {\r\n      const dragData = dragStore.get(groupName as string);\r\n      e.preventDefault();\r\n      setCuurent((state) => ({\r\n        ...state,\r\n        show: false,\r\n      }));\r\n      if (isPutDown) {\r\n        onDropHandler &&\r\n          onDropHandler(!Boolean(dragData && dragData[field]), {\r\n            ...dragData,\r\n            ...current,\r\n            [field]: dragData && dragData[field] ? dragData[field] : guid(),\r\n          });\r\n      }\r\n      console.log(\"onDrop\");\r\n    },\r\n    [current, field, groupName, isPutDown, onDropHandler]\r\n  );\r\n  // 调整大小开始\r\n  const onResizeStart = useCallback(() => {\r\n    const dragData = dragStore.get(groupName as string);\r\n    if (dragData) {\r\n      setResizeEnd(false);\r\n      setCuurent((state) => ({\r\n        ...state,\r\n        ...dragData,\r\n        show: true,\r\n      }));\r\n    }\r\n  }, [groupName]);\r\n  // 调正大小时\r\n  const onResizeing = useCallback(\r\n    (e: any) => {\r\n      setResizeEnd(false);\r\n      setCuurent((state) => ({\r\n        ...state,\r\n        column: getColumn(e.target.offsetWidth),\r\n        row: getRow(e.target.offsetHeight),\r\n      }));\r\n    },\r\n    [getColumn, getRow]\r\n  );\r\n  // 调整大小结束\r\n  const onResizeEnd = useCallback(() => {\r\n    setResizeEnd(true);\r\n    setCuurent((state) => ({\r\n      ...state,\r\n      show: false,\r\n    }));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const dragData = dragStore.get(groupName as string);\r\n    if (resizeEnd && isPutDown) {\r\n      if (\r\n        dragData?.column !== current.column ||\r\n        dragData?.row !== current.row\r\n      ) {\r\n        console.log(dragData, current, groupName, \"update onResizeEndHandler\");\r\n        onResizeEndHandler?.(current);\r\n        setResizeEnd(false);\r\n      }\r\n    }\r\n  }, [onResizeEndHandler, current, groupName, resizeEnd, isPutDown]);\r\n\r\n  return (\r\n    <div\r\n      ref={target}\r\n      className=\"cms-drag__content\"\r\n      onDragEnter={onDragEnter}\r\n      onDragOver={onDragOver}\r\n      onDragLeave={onDragLeave}\r\n      onDrop={onDrop}\r\n    >\r\n      <div\r\n        className=\"cms-drag__content--container\"\r\n        style={{\r\n          display: auxiliaryLineConfig?.show ? \"grid\" : \"none\",\r\n          gap: `${gap}px`,\r\n          gridTemplateColumns: `repeat(${column}, ${clientRect.width}px)`,\r\n          gridTemplateRows: `repeat(${row},  ${clientRect.height}px)`,\r\n          width: \"100%\",\r\n          height: \"100%\",\r\n        }}\r\n      >\r\n        {new Array(column * row).fill(null).map((_, index) => (\r\n          <div\r\n            key={index}\r\n            style={{\r\n              borderColor:\r\n                auxiliaryLineConfig?.borderColor || \"rgba(255, 255, 255, 0.2)\",\r\n            }}\r\n          ></div>\r\n        ))}\r\n      </div>\r\n      <div\r\n        className=\"cms-drag__preview\"\r\n        style={{\r\n          display: \"grid\",\r\n          gap: `${gap}px`,\r\n          gridTemplateColumns: `repeat(${column}, ${clientRect.width}px)`,\r\n          gridTemplateRows: `repeat(${row},  ${clientRect.height}px)`,\r\n          width: \"100%\",\r\n          height: \"100%\",\r\n        }}\r\n      >\r\n        {datas.map((item) => (\r\n          <PreviewItem\r\n            key={item[field]}\r\n            data={item}\r\n            groupName={groupName}\r\n            style={{\r\n              pointerEvents:\r\n                current.show && item[field] !== current[field] ? \"none\" : \"all\",\r\n              resize: auxiliaryLineConfig?.show ? \"both\" : \"none\",\r\n            }}\r\n            onResizeStart={onResizeStart}\r\n            onResizeing={onResizeing}\r\n            onResizeEnd={onResizeEnd}\r\n            onCloseHander={onCloseHander}\r\n            isShowCloseBtn={auxiliaryLineConfig?.show}\r\n          >\r\n            {renderPreview?.(item)}\r\n          </PreviewItem>\r\n        ))}\r\n\r\n        {mask ? (\r\n          <MoveMask\r\n            style={{\r\n              display: current?.show ? \"flex\" : \"none\",\r\n              background: isPutDown\r\n                ? \"var(--cms-divider-color)\"\r\n                : \"var(--cms-color-help)\",\r\n            }}\r\n            width={clientRect.width}\r\n            height={clientRect.height}\r\n            gap={gap}\r\n            column={current?.column}\r\n            row={current?.row}\r\n            x={current?.x}\r\n            y={current?.y}\r\n          >\r\n            {isPutDown ? \"可放置\" : \"不可放置\"}\r\n          </MoveMask>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default DragContent;\r\n","import React, { FC, HtmlHTMLAttributes, ReactNode } from \"react\";\r\nimport \"./index.scss\";\r\ninterface IWidgetLayout extends HtmlHTMLAttributes<HTMLDivElement> {\r\n  header: ReactNode;\r\n  body: ReactNode;\r\n  headerStyles: IAnyObject;\r\n  bodyStyles: IAnyObject;\r\n}\r\n\r\nconst WidgetLayout: FC<IWidgetLayout> = ({\r\n  header,\r\n  body,\r\n  style,\r\n  headerStyles,\r\n  bodyStyles,\r\n  id,\r\n}) => {\r\n  return (\r\n    <div className=\"cms-widget\" style={style} id={id}>\r\n      <div className=\"cms-widget__header\" style={headerStyles}>\r\n        {header}\r\n      </div>\r\n      <div className=\"cms-widget__body\" style={bodyStyles}>\r\n        {body}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WidgetLayout;\r\n","import React, {\r\n  FC,\r\n  useCallback,\r\n  useEffect,\r\n  useMemo,\r\n  useReducer,\r\n  useState,\r\n} from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport DragContent from \"@src/compoents/dragdrop/dragContent\";\r\nimport elements from \"@src/elements\";\r\nimport {\r\n  ConfigLayoutHeader,\r\n  ConfigLayoutMain,\r\n  ConfigLayoutLeftAside,\r\n  ConfigLayoutRightAside,\r\n  ConfigLayoutLeftAsideElements,\r\n  ConfigLayoutRightAsideLayer,\r\n  ConfigLayoutRightAsideWidget,\r\n  ConfigLayoutRightAsideElement,\r\n  ConfigLayoutRightAsideData,\r\n  ConfigLayoutMask,\r\n} from \"@src/layout/configLayout\";\r\n\r\nimport { widgetConfig } from \"@src/core/config/base\";\r\n\r\nimport \"@src/layout/configLayout/index.scss\";\r\nimport WidgetLayout from \"@src/layout/widgetLayout\";\r\nimport { initialState, widgetReducer } from \"./store/reducers\";\r\nimport { IElement, IWidget } from \"@src/service\";\r\nimport { capitalizeFirstLetter, guid, getStyles } from \"@src/utils\";\r\nimport \"animate.css\";\r\nimport {\r\n  CACHE_WIDGETS,\r\n  ELEMETSTYPE,\r\n  WIDGET_BODY_COLUMN,\r\n  WIDGET_BODY_GAP,\r\n  WIDGET_BODY_ROW,\r\n  WIDGET_HEADER_COLUMN,\r\n  WIDGET_HEADER_GAP,\r\n  WIDGET_HEADER_ROW,\r\n} from \"@src/core/enums/access.enums\";\r\nimport WidgetPreviewDialog from \"@src/compoents/widgetPreviewDialog\";\r\nimport localforage from \"localforage\";\r\nimport html2canvas from \"html2canvas\";\r\nimport { Button, Form, message, Modal, Select } from \"antd\";\r\ninterface IConfigLayout {}\r\n\r\nconst ConfigLayout: FC<IConfigLayout> = () => {\r\n  let location = useLocation();\r\n  const navigate = useNavigate();\r\n  const [layout, dispatch] = useReducer(widgetReducer, initialState);\r\n  const [show, setShow] = useState(false);\r\n  const [isShowAuxiliaryLine, setIsShowAuxiliaryLine] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const queryParams = new URLSearchParams(location.search);\r\n    // 编辑\r\n    if (queryParams.size) {\r\n      const widgetId = queryParams.get(\"widgetId\");\r\n      if (widgetId) {\r\n        localforage.getItem(CACHE_WIDGETS, (err, value) => {\r\n          if (value) {\r\n            const curr = (value as IWidget[]).find(\r\n              (item) => item.widgetId === widgetId\r\n            );\r\n            if (curr) {\r\n              dispatch({\r\n                type: \"WIDGET\",\r\n                data: curr,\r\n              });\r\n            } else {\r\n              console.log(\"找不到微件ID\");\r\n            }\r\n          }\r\n        });\r\n      }\r\n    } else {\r\n      // 新增\r\n      dispatch({\r\n        type: \"WIDGET\",\r\n        data: {\r\n          name: \"未命名微件\",\r\n          url: \"\",\r\n          id: \"\",\r\n          createTime: \"\",\r\n          type: \"text\",\r\n          count: 0,\r\n          x: 0,\r\n          y: 0,\r\n          column: 1,\r\n          row: 1,\r\n          widgetId: guid(),\r\n          configuration: {\r\n            configureValue: widgetConfig.configureValue,\r\n            dataValue: widgetConfig.dataValue,\r\n          },\r\n          elements: [],\r\n        },\r\n      });\r\n    }\r\n  }, [location]);\r\n\r\n  const onDropHandler = (\r\n    position: \"header\" | \"body\",\r\n    isAdd: boolean,\r\n    data: IAnyObject\r\n  ) => {\r\n    // 新增\r\n    if (isAdd) {\r\n      dispatch({\r\n        type: \"ADD_ELEMENT\",\r\n        data: {\r\n          ...data,\r\n          position: position,\r\n        } as IElement,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: \"MODIFY_ELEMENT\",\r\n        data: {\r\n          ...data,\r\n          position: position,\r\n        } as IElement,\r\n      });\r\n    }\r\n  };\r\n\r\n  const onResizeEndHandler = useCallback((data: IAnyObject) => {\r\n    dispatch({\r\n      type: \"MODIFY_ELEMENT\",\r\n      data: { ...data },\r\n    });\r\n  }, []);\r\n\r\n  const onCloseHander = useCallback((id: string) => {\r\n    console.log(id, \"onCloseHander\");\r\n    dispatch({\r\n      type: \"DELETE_ELEMENT\",\r\n      id,\r\n    });\r\n  }, []);\r\n\r\n  const renderPreview = useCallback(\r\n    (data: IAnyObject) => {\r\n      if (data.element && elements[capitalizeFirstLetter(data.element)]) {\r\n        return (\r\n          <>\r\n            {layout?.elementId === data.elementId &&\r\n            layout?.selectedType === \"element\" ? (\r\n              <ConfigLayoutMask />\r\n            ) : null}\r\n\r\n            {React.createElement(\r\n              elements[capitalizeFirstLetter(data.element)],\r\n              {\r\n                options: data.configuration.configureValue,\r\n                data: data.configuration?.dataValue?.mock,\r\n                field: data.configuration?.dataValue?.field,\r\n              }\r\n            )}\r\n          </>\r\n        );\r\n      }\r\n      return <div>你访问的组件不存在请联系售后人员</div>;\r\n    },\r\n    [layout?.elementId, layout?.selectedType]\r\n  );\r\n  // 判断右侧边栏所需模块\r\n  const rightAside = useMemo(() => {\r\n    let arr: PageType[] = [];\r\n    if (layout?.widgetId) {\r\n      if (layout?.elementId) {\r\n        arr = [\"layer\", \"element\", \"data\"];\r\n      } else {\r\n        arr = [\"layer\", \"data\"];\r\n      }\r\n    } else {\r\n      arr = [\"layer\"];\r\n    }\r\n    return arr;\r\n  }, [layout?.elementId, layout?.widgetId]);\r\n\r\n  const onSelected = useCallback(\r\n    (type: \"page\" | \"widget\" | \"element\", id: string) => {\r\n      if (type === \"element\" && id && layout?.elementId !== id) {\r\n        dispatch({\r\n          type: \"SELECT_ELEMENT\",\r\n          id: id,\r\n        });\r\n      }\r\n    },\r\n    [layout?.elementId]\r\n  );\r\n  const types = useMemo(() => {\r\n    let arr: any[] = [];\r\n    for (let field in ELEMETSTYPE) {\r\n      arr.push({\r\n        label: ELEMETSTYPE[field],\r\n        value: field,\r\n      });\r\n    }\r\n    return arr;\r\n  }, []);\r\n  const onFinish = (values: any) => {\r\n    message.success(\"发布成功\");\r\n    navigate(-1);\r\n    console.log(\r\n      JSON.stringify({\r\n        ...layout?.widget,\r\n        ...values,\r\n      })\r\n    );\r\n  };\r\n\r\n  const currentElement = useMemo(() => {\r\n    return layout?.widget.elements.find(\r\n      (item) => item.elementId === layout?.elementId\r\n    );\r\n  }, [layout?.elementId, layout?.widget.elements]);\r\n\r\n  const onChnage = useCallback((data: PageType | \"\") => {\r\n    dispatch({\r\n      type: \"SELECTED_TYPE\",\r\n      data,\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"cms-config-layout\">\r\n      <ConfigLayoutHeader\r\n        logo=\"&#xe634;\"\r\n        name={layout?.widget.name}\r\n        pageType=\"widget\"\r\n        modifyNameSuccessHander={(name) => {\r\n          dispatch({\r\n            type: \"MODIFY_WIDGET\",\r\n            data: {\r\n              name: name,\r\n            },\r\n          });\r\n        }}\r\n        previewHandler={() => setShow(true)}\r\n        publishHandler={() => {\r\n          setIsShowAuxiliaryLine(false);\r\n          setTimeout(() => {\r\n            html2canvas(document.getElementById(\"js_widget\") as HTMLElement, {\r\n              allowTaint: true,\r\n              scale: 0.5,\r\n              backgroundColor: \"rgb(9, 5, 72)\",\r\n            }).then((canvas) => {\r\n              try {\r\n                dispatch({\r\n                  type: \"MODIFY_WIDGET\",\r\n                  data: {\r\n                    url: canvas?.toDataURL(),\r\n                  },\r\n                });\r\n              } catch (e) {\r\n                message.error(\"存在跨域资源，缩略图获取失败\");\r\n              }\r\n            });\r\n          }, 10);\r\n        }}\r\n      />\r\n      <div className=\"cms-config-layout__content\">\r\n        <ConfigLayoutLeftAside\r\n          navs={[\"element\"]}\r\n          render={(data) => {\r\n            if (data === \"element\") {\r\n              return <ConfigLayoutLeftAsideElements />;\r\n            }\r\n            return null;\r\n          }}\r\n        />\r\n        <ConfigLayoutMain>\r\n          <WidgetLayout\r\n            id=\"js_widget\"\r\n            style={getStyles(\r\n              layout?.widget?.configuration?.configureValue || {}\r\n            )}\r\n            headerStyles={{\r\n              ...getStyles(\r\n                layout?.widget?.configuration?.configureValue || {},\r\n                \"headerStyle\"\r\n              ),\r\n              display: layout?.widget?.configuration?.configureValue?.headerShow\r\n                ? \"block\"\r\n                : \"none\",\r\n            }}\r\n            bodyStyles={getStyles(\r\n              layout?.widget?.configuration?.configureValue || {},\r\n              \"bodyStyle\"\r\n            )}\r\n            header={\r\n              <DragContent\r\n                auxiliaryLineConfig={{\r\n                  show: isShowAuxiliaryLine,\r\n                  borderColor:\r\n                    layout?.widget?.configuration?.configureValue\r\n                      ?.auxiliaryLineBorderColor,\r\n                }}\r\n                column={WIDGET_HEADER_COLUMN}\r\n                row={WIDGET_HEADER_ROW}\r\n                gap={WIDGET_HEADER_GAP}\r\n                groupName=\"elements\"\r\n                field=\"elementId\"\r\n                datas={\r\n                  layout?.widget.elements.filter(\r\n                    (item) => item.position === \"header\"\r\n                  ) || []\r\n                }\r\n                onDropHandler={(isAdd, data) =>\r\n                  onDropHandler(\"header\", isAdd, data)\r\n                }\r\n                onResizeEndHandler={onResizeEndHandler}\r\n                onCloseHander={onCloseHander}\r\n                renderPreview={renderPreview}\r\n              />\r\n            }\r\n            body={\r\n              <DragContent\r\n                auxiliaryLineConfig={{\r\n                  show: isShowAuxiliaryLine,\r\n                  borderColor:\r\n                    layout?.widget?.configuration?.configureValue\r\n                      ?.auxiliaryLineBorderColor,\r\n                }}\r\n                column={WIDGET_BODY_COLUMN}\r\n                row={WIDGET_BODY_ROW}\r\n                gap={WIDGET_BODY_GAP}\r\n                groupName=\"elements\"\r\n                field=\"elementId\"\r\n                datas={\r\n                  layout?.widget.elements.filter(\r\n                    (item) => item.position === \"body\"\r\n                  ) || []\r\n                }\r\n                onDropHandler={(isAdd, data) =>\r\n                  onDropHandler(\"body\", isAdd, data)\r\n                }\r\n                onResizeEndHandler={onResizeEndHandler}\r\n                onCloseHander={onCloseHander}\r\n                renderPreview={renderPreview}\r\n              />\r\n            }\r\n          />\r\n        </ConfigLayoutMain>\r\n        <ConfigLayoutRightAside\r\n          navs={rightAside}\r\n          render={(data) => {\r\n            if (data === \"layer\") {\r\n              return (\r\n                <ConfigLayoutRightAsideLayer\r\n                  datas={layout?.widget ? [layout?.widget] : []}\r\n                  widgetId={layout?.widgetId}\r\n                  elementId={layout?.elementId}\r\n                  onSelected={onSelected}\r\n                />\r\n              );\r\n            } else if (data === \"widget\") {\r\n              return (\r\n                <ConfigLayoutRightAsideWidget\r\n                  configureValue={\r\n                    (layout?.widget?.configuration\r\n                      ?.configureValue as IAnyObject) || {}\r\n                  }\r\n                  onFinish={(data: IAnyObject) => {\r\n                    const configuration = JSON.parse(\r\n                      JSON.stringify(layout?.widget?.configuration)\r\n                    );\r\n                    dispatch({\r\n                      type: \"MODIFY_WIDGET\",\r\n                      data: {\r\n                        configuration: {\r\n                          ...configuration,\r\n                          configureValue: {\r\n                            ...configuration.configureValue,\r\n                            ...data,\r\n                          },\r\n                        },\r\n                      },\r\n                    });\r\n                  }}\r\n                />\r\n              );\r\n            } else if (data === \"element\") {\r\n              return (\r\n                <ConfigLayoutRightAsideElement\r\n                  element={currentElement?.element}\r\n                  configureValue={\r\n                    currentElement?.configuration.configureValue || {}\r\n                  }\r\n                  onFinish={(data: IAnyObject) => {\r\n                    const currentElement = JSON.parse(\r\n                      JSON.stringify(\r\n                        layout?.widget?.elements.find(\r\n                          (item) => item.elementId === layout.elementId\r\n                        )\r\n                      )\r\n                    );\r\n                    if (currentElement) {\r\n                      dispatch({\r\n                        type: \"MODIFY_ELEMENT\",\r\n                        data: {\r\n                          ...currentElement,\r\n                          configuration: {\r\n                            ...currentElement.configuration,\r\n                            configureValue: {\r\n                              ...currentElement.configuration.configureValue,\r\n                              ...data,\r\n                            },\r\n                          },\r\n                        },\r\n                      });\r\n                    }\r\n                  }}\r\n                />\r\n              );\r\n            } else if (data === \"data\") {\r\n              return (\r\n                <ConfigLayoutRightAsideData\r\n                  widgetDataValue={layout?.widget?.configuration?.dataValue}\r\n                  widgetOnFinish={(data: IAnyObject) => {\r\n                    const widget = layout?.widget;\r\n                    console.log(widget, \"123\");\r\n                    dispatch({\r\n                      type: \"MODIFY_WIDGET\",\r\n                      data: {\r\n                        ...widget,\r\n                        configuration: {\r\n                          ...widget?.configuration,\r\n                          dataValue: {\r\n                            ...widget?.configuration?.dataValue,\r\n                            ...data,\r\n                          },\r\n                        },\r\n                      },\r\n                    });\r\n                  }}\r\n                  elementDataValue={currentElement?.configuration.dataValue}\r\n                  elementOnFinish={(data: IAnyObject) => {\r\n                    const currentElement = JSON.parse(\r\n                      JSON.stringify(\r\n                        layout?.widget?.elements.find(\r\n                          (item) => item.elementId === layout.elementId\r\n                        )\r\n                      )\r\n                    );\r\n                    if (currentElement) {\r\n                      dispatch({\r\n                        type: \"MODIFY_ELEMENT\",\r\n                        data: {\r\n                          ...currentElement,\r\n                          configuration: {\r\n                            ...currentElement.configuration,\r\n                            dataValue: {\r\n                              ...currentElement.configuration.dataValue,\r\n                              ...data,\r\n                            },\r\n                          },\r\n                        },\r\n                      });\r\n                    }\r\n                  }}\r\n                />\r\n              );\r\n            }\r\n            return <div>{data}</div>;\r\n          }}\r\n          onChange={onChnage}\r\n        />\r\n      </div>\r\n\r\n      <WidgetPreviewDialog\r\n        open={show}\r\n        onClose={() => setShow(false)}\r\n        data={layout?.widget as IWidget}\r\n      />\r\n      <Modal\r\n        open={!isShowAuxiliaryLine}\r\n        title=\"发布微件\"\r\n        footer={null}\r\n        width={400}\r\n        maskClosable={false}\r\n        onCancel={() => setIsShowAuxiliaryLine(true)}\r\n      >\r\n        <Form\r\n          autoComplete=\"off\"\r\n          initialValues={layout?.widget}\r\n          labelCol={{ flex: \"60px\" }}\r\n          onFinish={onFinish}\r\n        >\r\n          <Form.Item<any> name=\"name\" label=\"微件名称\">\r\n            <Form.Item<any> noStyle>{layout?.widget?.name}</Form.Item>\r\n          </Form.Item>\r\n          <Form.Item<any> name=\"url\" label=\"缩略图\">\r\n            <Form.Item<any> noStyle>\r\n              <img\r\n                src={layout?.widget?.url as string}\r\n                alt=\"缩略图\"\r\n                style={{ borderRadius: \"5px\", width: \"100%\" }}\r\n              />\r\n            </Form.Item>\r\n          </Form.Item>\r\n          <Form.Item<any>\r\n            name=\"type\"\r\n            label=\"类型\"\r\n            rules={[{ required: true, message: \"请选择类型\" }]}\r\n          >\r\n            <Select showSearch placeholder=\"请选择类型\" options={types} />\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\" block>\r\n              发布\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConfigLayout;\r\n"],"names":["_ref","open","onClose","data","renderPreview","useCallback","_data$configuration","_data$configuration$d","_data$configuration2","_data$configuration2$","element","elements","capitalizeFirstLetter","React","options","configuration","configureValue","dataValue","mock","field","Modal","onCancel","footer","title","destroyOnClose","width","PreviewLayout","style","height","header","GridLayout","datas","filter","item","position","isDroppable","isResizable","column","WIDGET_HEADER_COLUMN","row","WIDGET_HEADER_ROW","gap","WIDGET_HEADER_GAP","render","staticed","body","WIDGET_BODY_COLUMN","WIDGET_BODY_ROW","WIDGET_BODY_GAP","x","y","children","maskStyle","useMemo","getItemSizeStyle","className","memo","props","groupName","onResizeStart","onResizeing","onResizeEnd","onCloseHander","isShowCloseBtn","moveing","setMoveing","useState","resizeing","setResizeing","previewStyles","gridArea","opacity","transform","onDragStart","e","dragStore","set","pageX","pageY","setTimeout","onDragEnd","remove","onMouseDown","onMouseMove","preventDefault","onMouseUp","target","draggable","onClick","elementId","mask","onDropHandler","onResizeEndHandler","auxiliaryLineConfig","useRef","clientRect","setClientRect","resizeEnd","setResizeEnd","current","setCuurent","getClientRect","_target$current","getBoundingClientRect","useEffect","resizeObserver","ResizeObserver","entries","Array","isArray","length","observe","disconnect","isPutDown","currentXy","booleanWithin","getX","num","parseInt","String","getY","getColumn","Math","max","ceil","getRow","onDragEnter","dragData","get","state","show","onDragOver","onDragLeave","undefined","onDrop","Boolean","guid","offsetWidth","offsetHeight","ref","display","gridTemplateColumns","gridTemplateRows","fill","map","_","index","key","borderColor","PreviewItem","pointerEvents","resize","MoveMask","background","headerStyles","bodyStyles","id","ConfigLayout","_layout$widget","_layout$widget$config","_layout$widget2","_layout$widget2$confi","_layout$widget3","_layout$widget3$confi","_layout$widget3$confi2","_layout$widget4","_layout$widget4$confi","_layout$widget5","_layout$widget5$confi","_layout$widget5$confi2","_layout$widget6","_layout$widget6$confi","_layout$widget6$confi2","_layout$widget12","_layout$widget13","location","useLocation","navigate","useNavigate","layout","dispatch","useReducer","widgetReducer","initialState","setShow","isShowAuxiliaryLine","setIsShowAuxiliaryLine","queryParams","URLSearchParams","search","size","widgetId","localforage","CACHE_WIDGETS","err","value","curr","find","type","name","url","createTime","count","widgetConfig","isAdd","selectedType","ConfigLayoutMask","rightAside","arr","onSelected","types","ELEMETSTYPE","push","label","currentElement","widget","onChnage","ConfigLayoutHeader","logo","pageType","modifyNameSuccessHander","previewHandler","publishHandler","html2canvas","document","getElementById","allowTaint","scale","backgroundColor","then","canvas","toDataURL","message","error","ConfigLayoutLeftAside","navs","ConfigLayoutLeftAsideElements","ConfigLayoutMain","WidgetLayout","getStyles","headerShow","DragContent","auxiliaryLineBorderColor","ConfigLayoutRightAside","ConfigLayoutRightAsideLayer","ConfigLayoutRightAsideWidget","_layout$widget7","_layout$widget7$confi","onFinish","_layout$widget8","JSON","parse","stringify","ConfigLayoutRightAsideElement","_layout$widget9","ConfigLayoutRightAsideData","widgetDataValue","_layout$widget10","_layout$widget10$conf","widgetOnFinish","_widget$configuration","elementDataValue","elementOnFinish","_layout$widget11","onChange","WidgetPreviewDialog","maskClosable","Form","autoComplete","initialValues","labelCol","flex","values","success","Item","noStyle","src","alt","borderRadius","rules","required","Select","showSearch","placeholder","Button","htmlType","block"],"sourceRoot":""}