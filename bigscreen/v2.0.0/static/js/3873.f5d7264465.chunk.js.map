{"version":3,"file":"static/js/3873.f5d7264465.chunk.js","mappings":"wJAEA,EADuB,CAAE,KAAQ,CAAE,IAAO,MAAO,MAAS,CAAE,QAAW,gBAAiB,UAAa,SAAW,SAAY,CAAC,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,+RAAmS,KAAQ,YAAa,MAAS,Y,QCM3d,EAAmB,SAA0BA,EAAOC,GACtD,OAAoB,gBAAoBC,EAAA,GAAU,OAAS,CAAC,EAAGF,EAAO,CACpEC,IAAKA,EACLE,KAAM,IAEV,EAIA,MAA4B,aAAiB,E,+DCyC7C,UA/CwBC,EAAGC,WAAUC,QAAOC,cAC1C,MAAOC,EAAKC,IAAUC,EAAAA,EAAAA,WAAS,IACtBC,KAAKC,MAAMC,OAAOC,WAAa,OAElCC,GAAcC,EAAAA,EAAAA,cAAY,KAC9B,MAAMC,EAAcJ,OAAOC,WAC3BL,EAAOE,KAAKC,MAAMK,EAAc,KAAK,GACpC,IAQH,OAPAC,EAAAA,EAAAA,YAAU,KACRH,IACAF,OAAOM,iBAAiB,SAAUJ,GAC3B,KACLF,OAAOO,oBAAoB,SAAUL,EAAY,IAElD,CAACA,IAEFM,EAAAA,cAAA,OAAKC,UAAU,wBACZjB,GAAYgB,EAAAA,cAAA,OAAKC,UAAU,gBAAgBjB,GAC5CgB,EAAAA,cAAA,OAAKC,UAAU,8BACZf,EACCc,EAAAA,cAACE,EAAAA,EAAQ,CAACC,QAAM,IACdlB,EAAMmB,OACRnB,EAAMoB,KAAI,CAACC,EAAMC,IACfP,EAAAA,cAAA,OACEQ,IAAKD,EACLN,UAAU,uBACVQ,MAAO,CAAEC,MAAQ,eAAcvB,cAE/Ba,EAAAA,cAAA,OAAKC,UAAU,WACbD,EAAAA,cAAA,OAAKW,IAAKL,EAAKM,OAAQC,IAAI,MAE7Bb,EAAAA,cAAA,OAAKC,UAAU,QAAQK,EAAKQ,MAC5Bd,EAAAA,cAAA,OAAKC,UAAU,QAAO,MAChBK,EAAKS,YAAcT,EAAKU,YAE9BhB,EAAAA,cAAA,OAAKC,UAAU,QAAO,QAAMK,EAAKW,MAAM,KACvCjB,EAAAA,cAAA,OAAKC,UAAU,cAAa,QAAMK,EAAKY,eAI3ClB,EAAAA,cAACmB,EAAAA,EAAK,CAACC,MAAOD,EAAAA,EAAME,0BAGpB,C","sources":["webpack://cli/./node_modules/@ant-design/icons-svg/es/asn/DotChartOutlined.js","webpack://cli/./node_modules/@ant-design/icons/es/icons/DotChartOutlined.js","webpack://cli/./src/pages/components/components/list/index.tsx"],"sourcesContent":["// This icon file is generated automatically.\nvar DotChartOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M888 792H200V168c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v688c0 4.4 3.6 8 8 8h752c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zM288 604a64 64 0 10128 0 64 64 0 10-128 0zm118-224a48 48 0 1096 0 48 48 0 10-96 0zm158 228a96 96 0 10192 0 96 96 0 10-192 0zm148-314a56 56 0 10112 0 56 56 0 10-112 0z\" } }] }, \"name\": \"dot-chart\", \"theme\": \"outlined\" };\nexport default DotChartOutlined;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport DotChartOutlinedSvg from \"@ant-design/icons-svg/es/asn/DotChartOutlined\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar DotChartOutlined = function DotChartOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: DotChartOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  DotChartOutlined.displayName = 'DotChartOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(DotChartOutlined);","import React, { FC, ReactNode, useCallback, useEffect, useState } from \"react\";\r\nimport \"./index.scss\";\r\nimport { IComponentsItem } from \"@src/service\";\r\nimport { Empty, Skeleton } from \"antd\";\r\ninterface IList {\r\n  children: ReactNode;\r\n  loading: boolean;\r\n  datas: IComponentsItem[];\r\n}\r\n\r\nconst List: FC<IList> = ({ children, datas, loading }) => {\r\n  const [cel, setCel] = useState(() => {\r\n    return Math.floor(window.innerWidth / 280);\r\n  });\r\n  const sizeHandler = useCallback(() => {\r\n    const windowWidth = window.innerWidth;\r\n    setCel(Math.floor(windowWidth / 280));\r\n  }, []);\r\n  useEffect(() => {\r\n    sizeHandler();\r\n    window.addEventListener(\"resize\", sizeHandler);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", sizeHandler);\r\n    };\r\n  }, [sizeHandler]);\r\n  return (\r\n    <div className=\"cms-components__list\">\r\n      {children && <div className=\"cms-selector\">{children}</div>}\r\n      <div className=\"cms-components__list--body\">\r\n        {loading ? (\r\n          <Skeleton active />\r\n        ) : datas.length ? (\r\n          datas.map((item, index) => (\r\n            <div\r\n              key={index}\r\n              className=\"cms-components__item\"\r\n              style={{ width: `calc(100% / ${cel} - 20px)` }}\r\n            >\r\n              <div className=\"picture\">\r\n                <img src={item.images} alt=\"\" />\r\n              </div>\r\n              <div className=\"name\">{item.name}</div>\r\n              <div className=\"type\">\r\n                类型：{item.level2Type || item.level1Type}\r\n              </div>\r\n              <div className=\"type\">使用次数：{item.count}次</div>\r\n              <div className=\"createtime\">创建时间：{item.createTime}</div>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default List;\r\n"],"names":["props","ref","AntdIcon","icon","List","children","datas","loading","cel","setCel","useState","Math","floor","window","innerWidth","sizeHandler","useCallback","windowWidth","useEffect","addEventListener","removeEventListener","React","className","Skeleton","active","length","map","item","index","key","style","width","src","images","alt","name","level2Type","level1Type","count","createTime","Empty","image","PRESENTED_IMAGE_SIMPLE"],"sourceRoot":""}