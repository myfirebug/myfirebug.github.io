{"version":3,"file":"static/js/5465.eed83e6367.chunk.js","mappings":"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","sources":["webpack://large-screen-configuration/./src/compoents/widgetPreviewDialog/index.tsx","webpack://large-screen-configuration/./src/pages/widgets/edit/index.tsx"],"sourcesContent":["import React, { FC, useCallback } from \"react\";\r\nimport { Modal, ModalProps } from \"antd\";\r\nimport { IElement, IWidget } from \"@src/service\";\r\nimport PreviewLayout from \"@src/layout/previewLayout\";\r\nimport { capitalizeFirstLetter } from \"@src/utils\";\r\nimport {\r\n  WIDGET_BODY_COLUMN,\r\n  WIDGET_BODY_GAP,\r\n  WIDGET_BODY_ROW,\r\n  WIDGET_HEADER_COLUMN,\r\n  WIDGET_HEADER_GAP,\r\n  WIDGET_HEADER_ROW,\r\n} from \"@src/core/enums/access.enums\";\r\nimport elements from \"@src/elements\";\r\nimport GridLayout from \"@src/layout/gridLayout\";\r\n\r\ninterface IWidgetPreviewDialog extends ModalProps {\r\n  onClose: () => void;\r\n  data: IWidget;\r\n}\r\n\r\nconst WidgetPreviewDialog: FC<IWidgetPreviewDialog> = ({\r\n  open,\r\n  onClose,\r\n  data,\r\n}) => {\r\n  const renderPreview = useCallback((data: IAnyObject) => {\r\n    if (data.element && elements[capitalizeFirstLetter(data.element)]) {\r\n      return React.createElement(\r\n        elements[capitalizeFirstLetter(data.element)],\r\n        {\r\n          options: data.configuration.configureValue,\r\n          data: data.configuration?.dataValue?.mock,\r\n          field: data.configuration?.dataValue?.field,\r\n        }\r\n      );\r\n    }\r\n    return <div>你访问的组件不存在请联系售后人员</div>;\r\n  }, []);\r\n  return (\r\n    <Modal\r\n      open={open}\r\n      onClose={onClose}\r\n      onCancel={onClose}\r\n      footer={null}\r\n      title={`微件预览`}\r\n      destroyOnClose\r\n      width={630}\r\n    >\r\n      <PreviewLayout\r\n        data={data}\r\n        style={{ width: \"600px\", height: \"400px\" }}\r\n        header={\r\n          <GridLayout\r\n            datas={\r\n              data?.elements.filter(\r\n                (item: IElement) => item.position === \"header\"\r\n              ) || []\r\n            }\r\n            isDroppable={false}\r\n            isResizable={false}\r\n            column={WIDGET_HEADER_COLUMN}\r\n            row={WIDGET_HEADER_ROW}\r\n            gap={WIDGET_HEADER_GAP}\r\n            render={renderPreview}\r\n            staticed\r\n          />\r\n        }\r\n        body={\r\n          <GridLayout\r\n            datas={\r\n              data?.elements.filter(\r\n                (item: IElement) => item.position === \"body\"\r\n              ) || []\r\n            }\r\n            isDroppable={false}\r\n            isResizable={false}\r\n            column={WIDGET_BODY_COLUMN}\r\n            row={WIDGET_BODY_ROW}\r\n            gap={WIDGET_BODY_GAP}\r\n            render={renderPreview}\r\n            staticed\r\n          />\r\n        }\r\n      />\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default WidgetPreviewDialog;\r\n","import React, {\r\n  FC,\r\n  useCallback,\r\n  useEffect,\r\n  useMemo,\r\n  useReducer,\r\n  useState,\r\n} from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport elements from \"@src/elements\";\r\nimport {\r\n  ConfigLayoutHeader,\r\n  ConfigLayoutMain,\r\n  ConfigLayoutLeftAside,\r\n  ConfigLayoutRightAside,\r\n  ConfigLayoutLeftAsideElements,\r\n  ConfigLayoutRightAsideLayer,\r\n  ConfigLayoutRightAsideWidget,\r\n  ConfigLayoutRightAsideElement,\r\n  ConfigLayoutRightAsideData,\r\n  ConfigLayoutMask,\r\n} from \"@src/layout/configLayout\";\r\n\r\nimport { widgetConfig } from \"@src/core/config/base\";\r\n\r\nimport \"@src/layout/configLayout/index.scss\";\r\nimport PreviewLayout from \"@src/layout/previewLayout\";\r\nimport { initialState, widgetReducer } from \"./store/reducers\";\r\nimport { IElement, IWidget } from \"@src/service\";\r\nimport { capitalizeFirstLetter, guid } from \"@src/utils\";\r\nimport \"animate.css\";\r\nimport {\r\n  CACHE_WIDGETS,\r\n  ELEMETSTYPE,\r\n  WIDGET_BODY_COLUMN,\r\n  WIDGET_BODY_GAP,\r\n  WIDGET_BODY_ROW,\r\n  WIDGET_HEADER_COLUMN,\r\n  WIDGET_HEADER_GAP,\r\n  WIDGET_HEADER_ROW,\r\n} from \"@src/core/enums/access.enums\";\r\nimport WidgetPreviewDialog from \"@src/compoents/widgetPreviewDialog\";\r\nimport localforage from \"localforage\";\r\nimport html2canvas from \"html2canvas\";\r\nimport { Button, Form, message, Modal, Select } from \"antd\";\r\nimport GridLayout from \"@src/layout/gridLayout\";\r\nimport { Layout } from \"react-grid-layout\";\r\ninterface IConfigLayout {}\r\n\r\nconst ConfigLayout: FC<IConfigLayout> = () => {\r\n  let location = useLocation();\r\n  const navigate = useNavigate();\r\n  const [layout, dispatch] = useReducer(widgetReducer, initialState);\r\n  const [show, setShow] = useState(false);\r\n  const [isShowAuxiliaryLine, setIsShowAuxiliaryLine] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const queryParams = new URLSearchParams(location.search);\r\n    // 编辑\r\n    if (queryParams.size) {\r\n      const widgetId = queryParams.get(\"widgetId\");\r\n      if (widgetId) {\r\n        localforage.getItem(CACHE_WIDGETS, (err, value) => {\r\n          if (value) {\r\n            const curr = (value as IWidget[]).find(\r\n              (item) => item.widgetId === widgetId\r\n            );\r\n            if (curr) {\r\n              dispatch({\r\n                type: \"WIDGET\",\r\n                data: curr,\r\n              });\r\n            } else {\r\n              console.log(\"找不到微件ID\");\r\n            }\r\n          }\r\n        });\r\n      }\r\n    } else {\r\n      // 新增\r\n      dispatch({\r\n        type: \"WIDGET\",\r\n        data: {\r\n          name: \"未命名微件\",\r\n          url: \"\",\r\n          id: \"\",\r\n          createTime: \"\",\r\n          type: \"text\",\r\n          count: 0,\r\n          x: 0,\r\n          y: 0,\r\n          column: 1,\r\n          row: 1,\r\n          widgetId: guid(),\r\n          configuration: {\r\n            configureValue: widgetConfig.configureValue,\r\n            dataValue: widgetConfig.dataValue,\r\n          },\r\n          elements: [],\r\n        },\r\n      });\r\n    }\r\n  }, [location]);\r\n\r\n  // 编辑组件\r\n  const onDragStop = useCallback((item: Layout) => {\r\n    dispatch({\r\n      type: \"MODIFY_ELEMENT\",\r\n      data: {\r\n        x: item.x,\r\n        y: item.y,\r\n        elementId: item.i,\r\n      },\r\n    });\r\n  }, []);\r\n  // 改变组件大小\r\n  const onResizeStop = useCallback((item: Layout) => {\r\n    dispatch({\r\n      type: \"MODIFY_ELEMENT\",\r\n      data: {\r\n        row: item.w,\r\n        column: item.h,\r\n        elementId: item.i,\r\n      },\r\n    });\r\n  }, []);\r\n  // 新增组件\r\n  const onDrop = useCallback(\r\n    (item: Layout, data: IAnyObject, position: \"header\" | \"body\") => {\r\n      dispatch({\r\n        type: \"ADD_ELEMENT\",\r\n        data: {\r\n          ...data,\r\n          x: item.x,\r\n          y: item.y,\r\n          position: position,\r\n          elementId: guid(),\r\n        } as IElement,\r\n      });\r\n    },\r\n    []\r\n  );\r\n  // 渲染组件\r\n  const renderPreview = useCallback(\r\n    (data: IAnyObject) => {\r\n      if (data.element && elements[capitalizeFirstLetter(data.element)]) {\r\n        return (\r\n          <>\r\n            {layout?.elementId === data.elementId &&\r\n            layout?.selectedType === \"element\" ? (\r\n              <ConfigLayoutMask />\r\n            ) : null}\r\n\r\n            {React.createElement(\r\n              elements[capitalizeFirstLetter(data.element)],\r\n              {\r\n                options: data.configuration.configureValue,\r\n                data: data.configuration?.dataValue?.mock,\r\n                field: data.configuration?.dataValue?.field,\r\n              }\r\n            )}\r\n          </>\r\n        );\r\n      }\r\n      return <div>你访问的组件不存在请联系售后人员</div>;\r\n    },\r\n    [layout?.elementId, layout?.selectedType]\r\n  );\r\n  // 判断右侧边栏所需模块\r\n  const rightAside = useMemo(() => {\r\n    let arr: PageType[] = [];\r\n    if (layout?.widgetId) {\r\n      if (layout?.elementId) {\r\n        arr = [\"layer\", \"element\", \"widget\", \"data\"];\r\n      } else {\r\n        arr = [\"layer\", \"widget\", \"data\"];\r\n      }\r\n    } else {\r\n      arr = [\"layer\", \"widget\"];\r\n    }\r\n    return arr;\r\n  }, [layout?.elementId, layout?.widgetId]);\r\n  // 选中组件\r\n  const onSelected = useCallback(\r\n    (type: \"page\" | \"widget\" | \"element\", id: string) => {\r\n      if (type === \"element\" && id && layout?.elementId !== id) {\r\n        dispatch({\r\n          type: \"SELECT_ELEMENT\",\r\n          id: id,\r\n        });\r\n      }\r\n    },\r\n    [layout?.elementId]\r\n  );\r\n  // 组件类型\r\n  const types = useMemo(() => {\r\n    let arr: any[] = [];\r\n    for (let field in ELEMETSTYPE) {\r\n      arr.push({\r\n        label: ELEMETSTYPE[field],\r\n        value: field,\r\n      });\r\n    }\r\n    return arr;\r\n  }, []);\r\n  // 发布\r\n  const onFinish = (values: any) => {\r\n    message.success(\"发布成功\");\r\n    navigate(-1);\r\n    console.log(\r\n      JSON.stringify({\r\n        ...layout?.widget,\r\n        ...values,\r\n      })\r\n    );\r\n  };\r\n  // 当前选中微件\r\n  const currentWidget = useMemo(() => {\r\n    return layout?.widget;\r\n  }, [layout?.widget]);\r\n  // 当前选中组件\r\n  const currentElement = useMemo(() => {\r\n    return currentWidget?.elements.find(\r\n      (item) => item.elementId === layout?.elementId\r\n    );\r\n  }, [layout?.elementId, currentWidget]);\r\n  // 改变\r\n  const onChange = useCallback((data: PageType | \"\") => {\r\n    dispatch({\r\n      type: \"SELECTED_TYPE\",\r\n      data,\r\n    });\r\n  }, []);\r\n\r\n  // 删除组件\r\n  const onClose = useCallback((item: IAnyObject) => {\r\n    dispatch({\r\n      type: \"DELETE_ELEMENT\",\r\n      id: item.elementId,\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"cms-config-layout\">\r\n      <ConfigLayoutHeader\r\n        logo=\"&#xe634;\"\r\n        name={layout?.widget.name}\r\n        pageType=\"widget\"\r\n        modifyNameSuccessHander={(name) => {\r\n          dispatch({\r\n            type: \"MODIFY_WIDGET\",\r\n            data: {\r\n              name: name,\r\n            },\r\n          });\r\n        }}\r\n        previewHandler={() => setShow(true)}\r\n        publishHandler={() => {\r\n          setIsShowAuxiliaryLine(false);\r\n          setTimeout(() => {\r\n            html2canvas(document.getElementById(\"js_widget\") as HTMLElement, {\r\n              allowTaint: true,\r\n              scale: 0.5,\r\n              backgroundColor: \"rgb(9, 5, 72)\",\r\n            }).then((canvas) => {\r\n              try {\r\n                dispatch({\r\n                  type: \"MODIFY_WIDGET\",\r\n                  data: {\r\n                    url: canvas?.toDataURL(),\r\n                  },\r\n                });\r\n              } catch (e) {\r\n                message.error(\"存在跨域资源，缩略图获取失败\");\r\n              }\r\n            });\r\n          }, 10);\r\n        }}\r\n      />\r\n      <div className=\"cms-config-layout__content\">\r\n        <ConfigLayoutLeftAside\r\n          navs={[\"element\"]}\r\n          render={(data) => {\r\n            if (data === \"element\") {\r\n              return <ConfigLayoutLeftAsideElements />;\r\n            }\r\n            return null;\r\n          }}\r\n        />\r\n        <ConfigLayoutMain>\r\n          <div\r\n            style={{\r\n              position: \"relative\",\r\n              width: `${\r\n                currentWidget?.configuration?.configureValue\r\n                  ?.widgetConfigWidth || 600\r\n              }px`,\r\n              height: `${\r\n                currentWidget?.configuration?.configureValue\r\n                  ?.widgetConfigHeight || 400\r\n              }px`,\r\n            }}\r\n            id=\"js_widget\"\r\n          >\r\n            <PreviewLayout\r\n              header={\r\n                <GridLayout\r\n                  column={WIDGET_HEADER_COLUMN}\r\n                  row={WIDGET_HEADER_ROW}\r\n                  gap={WIDGET_HEADER_GAP}\r\n                  datas={\r\n                    currentWidget?.elements.filter(\r\n                      (item) => item.position === \"header\"\r\n                    ) || []\r\n                  }\r\n                  render={renderPreview}\r\n                  onDrop={(item, data) => onDrop(item, data, \"header\")}\r\n                  onDragStop={onDragStop}\r\n                  onResizeStop={onResizeStop}\r\n                  isDroppable={isShowAuxiliaryLine}\r\n                  isResizable={isShowAuxiliaryLine}\r\n                  staticed={!isShowAuxiliaryLine}\r\n                  onClose={onClose}\r\n                />\r\n              }\r\n              body={\r\n                <GridLayout\r\n                  column={WIDGET_BODY_COLUMN}\r\n                  row={WIDGET_BODY_ROW}\r\n                  gap={WIDGET_BODY_GAP}\r\n                  datas={\r\n                    currentWidget?.elements.filter(\r\n                      (item) => item.position === \"body\"\r\n                    ) || []\r\n                  }\r\n                  render={renderPreview}\r\n                  onDrop={(item, data) => onDrop(item, data, \"body\")}\r\n                  onDragStop={onDragStop}\r\n                  onResizeStop={onResizeStop}\r\n                  isDroppable={isShowAuxiliaryLine}\r\n                  isResizable={isShowAuxiliaryLine}\r\n                  staticed={!isShowAuxiliaryLine}\r\n                  onClose={onClose}\r\n                />\r\n              }\r\n              data={layout?.widget || {}}\r\n            />\r\n          </div>\r\n        </ConfigLayoutMain>\r\n        <ConfigLayoutRightAside\r\n          navs={rightAside}\r\n          render={(data) => {\r\n            if (data === \"layer\") {\r\n              return (\r\n                <ConfigLayoutRightAsideLayer\r\n                  datas={layout?.widget ? [layout?.widget] : []}\r\n                  widgetId={layout?.widgetId}\r\n                  elementId={layout?.elementId}\r\n                  onSelected={onSelected}\r\n                />\r\n              );\r\n            } else if (data === \"widget\") {\r\n              return (\r\n                <ConfigLayoutRightAsideWidget\r\n                  configureValue={\r\n                    (layout?.widget?.configuration\r\n                      ?.configureValue as IAnyObject) || {}\r\n                  }\r\n                  onFinish={(data: IAnyObject) => {\r\n                    const configuration = JSON.parse(\r\n                      JSON.stringify(layout?.widget?.configuration)\r\n                    );\r\n                    dispatch({\r\n                      type: \"MODIFY_WIDGET\",\r\n                      data: {\r\n                        configuration: {\r\n                          ...configuration,\r\n                          configureValue: {\r\n                            ...configuration.configureValue,\r\n                            ...data,\r\n                          },\r\n                        },\r\n                      },\r\n                    });\r\n                  }}\r\n                />\r\n              );\r\n            } else if (data === \"element\") {\r\n              return (\r\n                <ConfigLayoutRightAsideElement\r\n                  element={currentElement?.element}\r\n                  configureValue={\r\n                    currentElement?.configuration.configureValue || {}\r\n                  }\r\n                  onFinish={(data: IAnyObject) => {\r\n                    const currentElement = JSON.parse(\r\n                      JSON.stringify(\r\n                        layout?.widget?.elements.find(\r\n                          (item) => item.elementId === layout.elementId\r\n                        )\r\n                      )\r\n                    );\r\n                    if (currentElement) {\r\n                      dispatch({\r\n                        type: \"MODIFY_ELEMENT\",\r\n                        data: {\r\n                          ...currentElement,\r\n                          configuration: {\r\n                            ...currentElement.configuration,\r\n                            configureValue: {\r\n                              ...currentElement.configuration.configureValue,\r\n                              ...data,\r\n                            },\r\n                          },\r\n                        },\r\n                      });\r\n                    }\r\n                  }}\r\n                />\r\n              );\r\n            } else if (data === \"data\") {\r\n              return (\r\n                <ConfigLayoutRightAsideData\r\n                  widgetDataValue={layout?.widget?.configuration?.dataValue}\r\n                  widgetOnFinish={(data: IAnyObject) => {\r\n                    const widget = layout?.widget;\r\n                    dispatch({\r\n                      type: \"MODIFY_WIDGET\",\r\n                      data: {\r\n                        ...widget,\r\n                        configuration: {\r\n                          ...widget?.configuration,\r\n                          dataValue: {\r\n                            ...widget?.configuration?.dataValue,\r\n                            ...data,\r\n                          },\r\n                        },\r\n                      },\r\n                    });\r\n                  }}\r\n                  elementDataValue={currentElement?.configuration.dataValue}\r\n                  elementOnFinish={(data: IAnyObject) => {\r\n                    const currentElement = JSON.parse(\r\n                      JSON.stringify(\r\n                        layout?.widget?.elements.find(\r\n                          (item) => item.elementId === layout.elementId\r\n                        )\r\n                      )\r\n                    );\r\n                    if (currentElement) {\r\n                      dispatch({\r\n                        type: \"MODIFY_ELEMENT\",\r\n                        data: {\r\n                          ...currentElement,\r\n                          configuration: {\r\n                            ...currentElement.configuration,\r\n                            dataValue: {\r\n                              ...currentElement.configuration.dataValue,\r\n                              ...data,\r\n                            },\r\n                          },\r\n                        },\r\n                      });\r\n                    }\r\n                  }}\r\n                />\r\n              );\r\n            }\r\n            return <div>{data}</div>;\r\n          }}\r\n          onChange={onChange}\r\n        />\r\n      </div>\r\n\r\n      <WidgetPreviewDialog\r\n        open={show}\r\n        onClose={() => setShow(false)}\r\n        data={layout?.widget as IWidget}\r\n      />\r\n      <Modal\r\n        open={!isShowAuxiliaryLine}\r\n        title=\"发布微件\"\r\n        footer={null}\r\n        width={400}\r\n        maskClosable={false}\r\n        onCancel={() => setIsShowAuxiliaryLine(true)}\r\n      >\r\n        <Form\r\n          autoComplete=\"off\"\r\n          initialValues={layout?.widget}\r\n          labelCol={{ flex: \"60px\" }}\r\n          onFinish={onFinish}\r\n        >\r\n          <Form.Item<any> name=\"name\" label=\"微件名称\">\r\n            <Form.Item<any> noStyle>{layout?.widget?.name}</Form.Item>\r\n          </Form.Item>\r\n          <Form.Item<any> name=\"url\" label=\"缩略图\">\r\n            <Form.Item<any> noStyle>\r\n              <img\r\n                src={layout?.widget?.url as string}\r\n                alt=\"缩略图\"\r\n                style={{ borderRadius: \"5px\", width: \"100%\" }}\r\n              />\r\n            </Form.Item>\r\n          </Form.Item>\r\n          <Form.Item<any>\r\n            name=\"type\"\r\n            label=\"类型\"\r\n            rules={[{ required: true, message: \"请选择类型\" }]}\r\n          >\r\n            <Select showSearch placeholder=\"请选择类型\" options={types} />\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\" block>\r\n              发布\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConfigLayout;\r\n"],"names":["_ref","open","onClose","data","renderPreview","useCallback","_data$configuration","_data$configuration$d","_data$configuration2","_data$configuration2$","element","elements","capitalizeFirstLetter","React","options","configuration","configureValue","dataValue","mock","field","Modal","onCancel","footer","title","destroyOnClose","width","PreviewLayout","style","height","header","GridLayout","datas","filter","item","position","isDroppable","isResizable","column","WIDGET_HEADER_COLUMN","row","WIDGET_HEADER_ROW","gap","WIDGET_HEADER_GAP","render","staticed","body","WIDGET_BODY_COLUMN","WIDGET_BODY_ROW","WIDGET_BODY_GAP","ConfigLayout","_currentWidget$config","_currentWidget$config2","_currentWidget$config3","_currentWidget$config4","_layout$widget6","_layout$widget7","location","useLocation","navigate","useNavigate","layout","dispatch","useReducer","widgetReducer","initialState","show","setShow","useState","isShowAuxiliaryLine","setIsShowAuxiliaryLine","useEffect","queryParams","URLSearchParams","search","size","widgetId","get","localforage","CACHE_WIDGETS","err","value","curr","find","type","name","url","id","createTime","count","x","y","guid","widgetConfig","onDragStop","elementId","i","onResizeStop","w","h","onDrop","selectedType","ConfigLayoutMask","rightAside","useMemo","arr","onSelected","types","ELEMETSTYPE","push","label","currentWidget","widget","currentElement","onChange","className","ConfigLayoutHeader","logo","pageType","modifyNameSuccessHander","previewHandler","publishHandler","setTimeout","html2canvas","document","getElementById","allowTaint","scale","backgroundColor","then","canvas","toDataURL","e","message","error","ConfigLayoutLeftAside","navs","ConfigLayoutLeftAsideElements","ConfigLayoutMain","widgetConfigWidth","widgetConfigHeight","ConfigLayoutRightAside","ConfigLayoutRightAsideLayer","ConfigLayoutRightAsideWidget","_layout$widget","_layout$widget$config","onFinish","_layout$widget2","JSON","parse","stringify","ConfigLayoutRightAsideElement","_layout$widget3","ConfigLayoutRightAsideData","widgetDataValue","_layout$widget4","_layout$widget4$confi","widgetOnFinish","_widget$configuration","elementDataValue","elementOnFinish","_layout$widget5","WidgetPreviewDialog","maskClosable","Form","autoComplete","initialValues","labelCol","flex","values","success","Item","noStyle","src","alt","borderRadius","rules","required","Select","showSearch","placeholder","Button","htmlType","block"],"sourceRoot":""}