{"version":3,"file":"static/js/771.15546d49d7.chunk.js","mappings":"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","sources":["webpack://cli/./src/pages/login/index.tsx"],"sourcesContent":["import React, { useEffect, useRef, FC } from \"react\";\r\nimport { Button, Form, Input } from \"antd\";\r\nimport { LockOutlined, UserOutlined } from \"@ant-design/icons\";\r\nimport { ILoginForm } from \"@src/service\";\r\nimport { useLogin } from \"@src/core/hook\";\r\nimport { setToken } from \"@src/store/actions/token\";\r\nimport \"./index.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { ALL_STATE } from \"@src/store/actionType\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\ninterface ILogin {\r\n  token: string;\r\n  setToken: (data: string) => void;\r\n}\r\n\r\nconst Login: FC<ILogin> = ({ setToken, token }) => {\r\n  const navigate = useNavigate();\r\n  const { loginLoading, login } = useLogin();\r\n  const particles = useRef<HTMLDivElement>(null);\r\n  useEffect(() => {\r\n    if (particles.current) {\r\n      window.particlesJS?.(particles.current.id, {\r\n        particles: {\r\n          number: {\r\n            value: 80,\r\n            density: {\r\n              enable: true,\r\n              value_area: 800,\r\n            },\r\n          },\r\n          color: {\r\n            value: \"#ffffff\",\r\n          },\r\n          shape: {\r\n            type: \"circle\",\r\n            stroke: {\r\n              width: 0,\r\n              color: \"#000000\",\r\n            },\r\n            polygon: {\r\n              nb_sides: 5,\r\n            },\r\n            image: {\r\n              src: \"img/github.svg\",\r\n              width: 100,\r\n              height: 100,\r\n            },\r\n          },\r\n          opacity: {\r\n            value: 0.2,\r\n            random: false,\r\n            anim: {\r\n              enable: false,\r\n              speed: 1,\r\n              opacity_min: 0.1,\r\n              sync: false,\r\n            },\r\n          },\r\n          size: {\r\n            value: 5,\r\n            random: true,\r\n            anim: {\r\n              enable: false,\r\n              speed: 60,\r\n              size_min: 0.1,\r\n              sync: false,\r\n            },\r\n          },\r\n          line_linked: {\r\n            enable: true,\r\n            distance: 300,\r\n            color: \"#ffffff\",\r\n            opacity: 0.1,\r\n            width: 2,\r\n          },\r\n          move: {\r\n            enable: true,\r\n            speed: 6,\r\n            direction: \"none\",\r\n            random: false,\r\n            straight: false,\r\n            out_mode: \"out\",\r\n            bounce: false,\r\n            attract: {\r\n              enable: false,\r\n              rotateX: 600,\r\n              rotateY: 1200,\r\n            },\r\n          },\r\n        },\r\n        interactivity: {\r\n          detect_on: \"canvas\",\r\n          events: {\r\n            onhover: {\r\n              enable: false,\r\n              mode: \"repulse\",\r\n            },\r\n            onclick: {\r\n              enable: true,\r\n              mode: \"push\",\r\n            },\r\n            resize: true,\r\n          },\r\n          modes: {\r\n            grab: {\r\n              distance: 800,\r\n              line_linked: {\r\n                opacity: 0.7,\r\n              },\r\n            },\r\n            bubble: {\r\n              distance: 800,\r\n              size: 40,\r\n              duration: 2,\r\n              opacity: 0.5,\r\n              speed: 3,\r\n            },\r\n            repulse: {\r\n              distance: 400,\r\n              duration: 0.4,\r\n            },\r\n            push: {\r\n              particles_nb: 4,\r\n            },\r\n            remove: {\r\n              particles_nb: 2,\r\n            },\r\n          },\r\n        },\r\n        retina_detect: true,\r\n      });\r\n    }\r\n  }, [particles]);\r\n\r\n  useEffect(() => {\r\n    if (token) {\r\n      navigate(\"/home\");\r\n    }\r\n  }, [token, navigate]);\r\n\r\n  const onFinish = async (values: ILoginForm) => {\r\n    login(values, setToken);\r\n  };\r\n\r\n  return (\r\n    <div className=\"cms-login\">\r\n      <div className=\"cms-login__mask\" ref={particles} id=\"js_particles\"></div>\r\n      <div className=\"cms-login__left\">\r\n        <h1>欢迎来到智能大屏后台管理系统</h1>\r\n        <p>您的大屏配置助手，快来体验吧！</p>\r\n      </div>\r\n      <div className=\"cms-login__right\">\r\n        <h2>账户登录</h2>\r\n        <Form\r\n          name=\"basic\"\r\n          wrapperCol={{ span: 24 }}\r\n          onFinish={onFinish}\r\n          autoComplete=\"off\"\r\n        >\r\n          <Form.Item<ILoginForm>\r\n            label=\"\"\r\n            name=\"username\"\r\n            rules={[{ required: true, message: \"请输入用户名\" }]}\r\n          >\r\n            <Input\r\n              allowClear\r\n              size=\"large\"\r\n              placeholder=\"用户名\"\r\n              prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item<ILoginForm>\r\n            label=\"\"\r\n            name=\"password\"\r\n            rules={[{ required: true, message: \"请输入密码\" }]}\r\n          >\r\n            <Input.Password\r\n              allowClear\r\n              size=\"large\"\r\n              placeholder=\"密码\"\r\n              prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              block\r\n              size=\"large\"\r\n              loading={loginLoading}\r\n            >\r\n              登录\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: ALL_STATE) => ({\r\n  token: state.token,\r\n});\r\n\r\n// 将 对应action 插入到组件的 props 中\r\nconst mapDispatchToProps = {\r\n  setToken: setToken,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n"],"names":["mapDispatchToProps","setToken","connect","state","token","_ref","navigate","useNavigate","loginLoading","login","useLogin","particles","useRef","useEffect","_window$particlesJS","_window","current","window","particlesJS","call","id","number","value","density","enable","value_area","color","shape","type","stroke","width","polygon","nb_sides","image","src","height","opacity","random","anim","speed","opacity_min","sync","size","size_min","line_linked","distance","move","direction","straight","out_mode","bounce","attract","rotateX","rotateY","interactivity","detect_on","events","onhover","mode","onclick","resize","modes","grab","bubble","duration","repulse","push","particles_nb","remove","retina_detect","React","className","ref","Form","name","wrapperCol","span","onFinish","async","values","autoComplete","Item","label","rules","required","message","Input","allowClear","placeholder","prefix","UserOutlined","Password","LockOutlined","Button","htmlType","block","loading"],"sourceRoot":""}