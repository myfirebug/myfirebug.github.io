{"version":3,"file":"static/js/8216.7e6921c6ec.chunk.js","mappings":"8TAaO,MAAMA,EAAkBC,iBAA8B,IAAvBC,EAAYC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,IACnD,OAAO,IAAIG,SAASC,IAClBC,YAAW,KACTD,GAAQ,EAAK,GACZL,EAAK,GAEZ,EAEaO,EAAWR,iBAA8B,IAAvBC,EAAYC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,UACtCH,EAAgBE,EACxB,EAgIA,UA9H0BQ,KAAM,IAAAC,EAAAC,EAAAC,EAAAC,EAC9B,MAAM,GAAEC,IAAOC,EAAAA,EAAAA,YAAWC,EAAAA,GACpBC,GAAYC,EAAAA,EAAAA,UACZC,GAAWC,EAAAA,EAAAA,OAEVC,EAAMC,IAAWC,EAAAA,EAAAA,WAAS,IAC1BC,EAAMC,IAAWF,EAAAA,EAAAA,aAElB,SAAEG,EAAQ,iBAAEC,EAAgB,gBAAEC,IAAoBC,EAAAA,EAAAA,OACxDC,EAAAA,EAAAA,YAAU,KACRJ,GAAU,GACT,CAACA,IAEJ,MAAMK,EAA+B,CACnC,CACEC,MAAOlB,EAAG,aACVmB,UAAW,QAEb,CACED,MAAOlB,EAAG,gBACVmB,UAAW,QACXC,QAAQ,EACRC,MAAO,KAET,CACEH,MAAOlB,EAAG,eACVmB,UAAW,cACXC,QAAQ,EACRC,MAAO,KAET,CACEH,MAAOlB,EAAG,oBACVmB,UAAW,aACXG,UAAW,OACXC,cAAc,EACdF,MAAO,KAET,CACEH,MAAOlB,EAAG,oBACVmB,UAAW,aACXG,UAAW,YACXE,aAAa,GAEf,CACEN,MAAOlB,EAAG,kBACVsB,UAAW,SACXG,IAAK,SACLJ,MAAO,IACPK,OAAQA,CAACC,EAAMC,EAAQC,EAAGC,IACxBC,EAAAA,cAAA,OAAKC,UAAU,UACK,IAAjBJ,EAAOK,MACNF,EAAAA,cAAA,QACEN,IAAI,WACJS,QAASA,KACP7B,EAAU,kCAAiCuB,EAAOO,KAAK,GAGxDnC,EAAG,mBAEJ,KACJ+B,EAAAA,cAAA,QACEN,IAAI,OACJS,QAASA,KACP1B,GAAQ,GACRG,EAAQiB,EAAO,GAGhB5B,EAAG,sBAOd,OACE+B,EAAAA,cAAA,OAAKC,UAAU,YAEbD,EAAAA,cAACK,EAAAA,EAAa,CACZC,KAAM3B,EACN4B,SAAS,OACTpB,MAAM,OACNqB,KAAMhC,EACNiC,QAASA,IAAMhC,GAAQ,GACvBa,OAAOX,SAAmB,QAAfd,EAAJc,EAAM+B,qBAAa,IAAA7C,GAAgB,QAAhBC,EAAnBD,EAAqB8C,sBAAc,IAAA7C,OAA/B,EAAJA,EAAqC8C,oBAAqB,KACjEC,QAAQlC,SAAmB,QAAfZ,EAAJY,EAAM+B,qBAAa,IAAA3C,GAAgB,QAAhBC,EAAnBD,EAAqB4C,sBAAc,IAAA3C,OAA/B,EAAJA,EAAqC8C,qBAAsB,MAErEd,EAAAA,cAACe,EAAAA,EAAQ,CACP7B,QAASA,EACTd,UAAWA,EAQX4C,OAAO,SACPC,WAAYlC,EACZmC,SAAUpC,EACVqC,QAASrC,EACTsC,QAAS,CACPC,QAAS,CACPC,YAAa,MAGjBC,WAAY,CACVC,SAAU,GACVC,SAAW9C,IACb,GACA+C,cAAc,SACdC,YAAa1D,EAAG,eAChB2D,cAAeA,IAAM,CACnB5B,EAAAA,cAAC6B,EAAAA,GAAM,CACLnC,IAAI,SACJoC,KAAM9B,EAAAA,cAAC+B,EAAAA,EAAY,MACnB5B,QAASA,IAAM7B,EAAS,2BACxB0D,KAAK,WAEJ/D,EAAG,wBAIN,C","sources":["webpack://large-screen-configuration/./src/pages/web/pageList/index.tsx"],"sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport type { ActionType, ProColumns } from \"@ant-design/pro-components\";\r\nimport { ProTable } from \"@ant-design/pro-components\";\r\nimport React, { useRef, FC, useEffect, useState, useContext } from \"react\";\r\nimport { IPage } from \"@src/service\";\r\nimport \"./index.scss\";\r\nimport { Button } from \"antd\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { web } from \"@src/core/hook\";\r\nimport PreviewDialog from \"@src/compoents/previewDialog\";\r\nimport { LocaleContext } from \"@src/core/i18n/localeContent\";\r\n\r\nexport const waitTimePromise = async (time: number = 100) => {\r\n  return new Promise((resolve) => {\r\n    setTimeout(() => {\r\n      resolve(true);\r\n    }, time);\r\n  });\r\n};\r\n\r\nexport const waitTime = async (time: number = 100) => {\r\n  await waitTimePromise(time);\r\n};\r\n\r\nconst PageList: FC<any> = () => {\r\n  const { $t } = useContext(LocaleContext);\r\n  const actionRef = useRef<ActionType>();\r\n  const navigate = useNavigate();\r\n\r\n  const [show, setShow] = useState(false);\r\n  const [page, setPage] = useState<IPage>();\r\n\r\n  const { getPages, pageFilterHandle, filterPagesList } = web();\r\n  useEffect(() => {\r\n    getPages();\r\n  }, [getPages]);\r\n\r\n  const columns: ProColumns<IPage>[] = [\r\n    {\r\n      title: $t(\"page_name\" /*名称*/),\r\n      dataIndex: \"name\",\r\n    },\r\n    {\r\n      title: $t(\"page_use_num\" /*使用次数*/),\r\n      dataIndex: \"count\",\r\n      search: false,\r\n      width: 100,\r\n    },\r\n    {\r\n      title: $t(\"page_screen\" /*屏幕占比*/),\r\n      dataIndex: \"screenRatio\",\r\n      search: false,\r\n      width: 100,\r\n    },\r\n    {\r\n      title: $t(\"page_create_time\" /*创建时间*/),\r\n      dataIndex: \"createTime\",\r\n      valueType: \"date\",\r\n      hideInSearch: true,\r\n      width: 150,\r\n    },\r\n    {\r\n      title: $t(\"page_create_time\" /*创建时间*/),\r\n      dataIndex: \"createTime\",\r\n      valueType: \"dateRange\",\r\n      hideInTable: true,\r\n    },\r\n    {\r\n      title: $t(\"page_operation\" /*操作*/),\r\n      valueType: \"option\",\r\n      key: \"option\",\r\n      width: 100,\r\n      render: (text, record, _, action) => (\r\n        <div className=\"option\">\r\n          {record.count === 0 ? (\r\n            <span\r\n              key=\"editable\"\r\n              onClick={() => {\r\n                navigate(`/web/page/configuration?pageId=${record.id}`);\r\n              }}\r\n            >\r\n              {$t(\"operation_edit\" /*编辑*/)}\r\n            </span>\r\n          ) : null}\r\n          <span\r\n            key=\"view\"\r\n            onClick={() => {\r\n              setShow(true);\r\n              setPage(record);\r\n            }}\r\n          >\r\n            {$t(\"operation_view\" /*预览*/)}\r\n          </span>\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"cms-page\">\r\n      {/* 页面预览 */}\r\n      <PreviewDialog\r\n        data={page}\r\n        pageType=\"page\"\r\n        title=\"页面预览\"\r\n        open={show}\r\n        onClose={() => setShow(false)}\r\n        width={page?.configuration?.configureValue?.widgetConfigWidth || 1366}\r\n        height={page?.configuration?.configureValue?.widgetConfigHeight || 768}\r\n      />\r\n      <ProTable<IPage>\r\n        columns={columns}\r\n        actionRef={actionRef}\r\n        // request={async (params) => {\r\n        //   await waitTime(2000);\r\n        //   return API.widgetsService.widgets({ params }).then((res) => {\r\n        //     console.log(res, \"res\");\r\n        //     return res;\r\n        //   });\r\n        // }}\r\n        rowKey=\"pageId\"\r\n        dataSource={filterPagesList}\r\n        onSubmit={pageFilterHandle}\r\n        onReset={pageFilterHandle}\r\n        options={{\r\n          setting: {\r\n            listsHeight: 400,\r\n          },\r\n        }}\r\n        pagination={{\r\n          pageSize: 20,\r\n          onChange: (page) => console.log(page),\r\n        }}\r\n        dateFormatter=\"string\"\r\n        headerTitle={$t(\"widget_list\" /*页面模版列表*/)}\r\n        toolBarRender={() => [\r\n          <Button\r\n            key=\"button\"\r\n            icon={<PlusOutlined />}\r\n            onClick={() => navigate(\"/web/page/configuration\")}\r\n            type=\"primary\"\r\n          >\r\n            {$t(\"operation_create\" /*新建*/)}\r\n          </Button>,\r\n        ]}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PageList;\r\n"],"names":["waitTimePromise","async","time","arguments","length","undefined","Promise","resolve","setTimeout","waitTime","PageList","_page$configuration","_page$configuration$c","_page$configuration2","_page$configuration2$","$t","useContext","LocaleContext","actionRef","useRef","navigate","useNavigate","show","setShow","useState","page","setPage","getPages","pageFilterHandle","filterPagesList","web","useEffect","columns","title","dataIndex","search","width","valueType","hideInSearch","hideInTable","key","render","text","record","_","action","React","className","count","onClick","id","PreviewDialog","data","pageType","open","onClose","configuration","configureValue","widgetConfigWidth","height","widgetConfigHeight","ProTable","rowKey","dataSource","onSubmit","onReset","options","setting","listsHeight","pagination","pageSize","onChange","dateFormatter","headerTitle","toolBarRender","Button","icon","PlusOutlined","type"],"sourceRoot":""}