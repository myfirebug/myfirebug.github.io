{"version":3,"file":"static/js/9641.078731ddc4.chunk.js","mappings":"wSAWO,MAAMA,EAAkBC,iBAA8B,IAAvBC,EAAYC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,IACnD,OAAO,IAAIG,SAASC,IAClBC,YAAW,KACTD,GAAQ,EAAK,GACZL,EAAK,GAEZ,EAEaO,EAAWR,iBAA8B,IAAvBC,EAAYC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,UACtCH,EAAgBE,EACxB,EA4FA,UA1F6BQ,KAC3B,MAAMC,GAAYC,EAAAA,EAAAA,UACZC,GAAWC,EAAAA,EAAAA,OAEX,YAAEC,EAAW,qBAAEC,EAAoB,mBAAEC,IAAuBC,EAAAA,EAAAA,OAClEC,EAAAA,EAAAA,YAAU,KACRJ,GAAa,GACZ,CAACA,IAEJ,MAAMK,EAAkC,CACtC,CACEC,MAAO,KACPC,UAAW,QAEb,CACED,MAAO,OACPC,UAAW,aACXC,UAAW,OACXC,cAAc,EACdC,MAAO,KAET,CACEJ,MAAO,OACPC,UAAW,aACXC,UAAW,YACXG,aAAa,GAEf,CACEL,MAAO,KACPE,UAAW,SACXI,IAAK,SACLF,MAAO,IACPG,OAAQA,CAACC,EAAMC,EAAQC,EAAGC,IACxBC,EAAAA,cAAA,OAAKC,UAAU,UACbD,EAAAA,cAAA,QACEN,IAAI,WACJQ,QAASA,KACPtB,EAAU,qCAAoCiB,EAAOM,YAAY,GAEpE,MAGDH,EAAAA,cAAA,QAAMN,IAAI,QAAO,SAMzB,OACEM,EAAAA,cAAA,OAAKC,UAAU,eACbD,EAAAA,cAACI,EAAAA,EAAQ,CACPjB,QAASA,EACTT,UAAWA,EAQX2B,OAAO,YACPC,WAAYtB,EACZuB,SAAUxB,EACVyB,QAASzB,EACT0B,QAAS,CACPC,QAAS,CACPC,YAAa,MAGjBC,WAAY,CACVC,SAAU,GACVC,SAAWC,IACb,GACAC,cAAc,SACdC,YAAY,OACZC,cAAeA,IAAM,CACnBlB,EAAAA,cAACmB,EAAAA,GAAM,CACLzB,IAAI,SACJ0B,KAAMpB,EAAAA,cAACqB,EAAAA,EAAY,MACnBnB,QAASA,IAAMtB,EAAS,8BACxB0C,KAAK,WACN,SAKD,C","sources":["webpack://large-screen-configuration/./src/pages/web/projectList/index.tsx"],"sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport type { ActionType, ProColumns } from \"@ant-design/pro-components\";\r\nimport { ProTable } from \"@ant-design/pro-components\";\r\nimport React, { useRef, FC, useEffect } from \"react\";\r\nimport { IProject } from \"@src/service\";\r\nimport \"./index.scss\";\r\nimport { Button } from \"antd\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { web } from \"@src/core/hook\";\r\n\r\nexport const waitTimePromise = async (time: number = 100) => {\r\n  return new Promise((resolve) => {\r\n    setTimeout(() => {\r\n      resolve(true);\r\n    }, time);\r\n  });\r\n};\r\n\r\nexport const waitTime = async (time: number = 100) => {\r\n  await waitTimePromise(time);\r\n};\r\n\r\nconst ProjectList: FC<any> = () => {\r\n  const actionRef = useRef<ActionType>();\r\n  const navigate = useNavigate();\r\n\r\n  const { getProjects, projectsFilterHandle, filterProjectsList } = web();\r\n  useEffect(() => {\r\n    getProjects();\r\n  }, [getProjects]);\r\n\r\n  const columns: ProColumns<IProject>[] = [\r\n    {\r\n      title: \"名称\",\r\n      dataIndex: \"name\",\r\n    },\r\n    {\r\n      title: \"创建时间\",\r\n      dataIndex: \"createTime\",\r\n      valueType: \"date\",\r\n      hideInSearch: true,\r\n      width: 150,\r\n    },\r\n    {\r\n      title: \"创建时间\",\r\n      dataIndex: \"createTime\",\r\n      valueType: \"dateRange\",\r\n      hideInTable: true,\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      valueType: \"option\",\r\n      key: \"option\",\r\n      width: 100,\r\n      render: (text, record, _, action) => (\r\n        <div className=\"option\">\r\n          <span\r\n            key=\"editable\"\r\n            onClick={() => {\r\n              navigate(`/web/project/configuration?pageId=${record.projectId}`);\r\n            }}\r\n          >\r\n            编辑\r\n          </span>\r\n          <span key=\"view\">预览</span>\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"cms-project\">\r\n      <ProTable<IProject>\r\n        columns={columns}\r\n        actionRef={actionRef}\r\n        // request={async (params) => {\r\n        //   await waitTime(2000);\r\n        //   return API.widgetsService.widgets({ params }).then((res) => {\r\n        //     console.log(res, \"res\");\r\n        //     return res;\r\n        //   });\r\n        // }}\r\n        rowKey=\"projectId\"\r\n        dataSource={filterProjectsList}\r\n        onSubmit={projectsFilterHandle}\r\n        onReset={projectsFilterHandle}\r\n        options={{\r\n          setting: {\r\n            listsHeight: 400,\r\n          },\r\n        }}\r\n        pagination={{\r\n          pageSize: 20,\r\n          onChange: (page) => console.log(page),\r\n        }}\r\n        dateFormatter=\"string\"\r\n        headerTitle=\"项目列表\"\r\n        toolBarRender={() => [\r\n          <Button\r\n            key=\"button\"\r\n            icon={<PlusOutlined />}\r\n            onClick={() => navigate(\"/web/project/configuration\")}\r\n            type=\"primary\"\r\n          >\r\n            新建\r\n          </Button>,\r\n        ]}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectList;\r\n"],"names":["waitTimePromise","async","time","arguments","length","undefined","Promise","resolve","setTimeout","waitTime","ProjectList","actionRef","useRef","navigate","useNavigate","getProjects","projectsFilterHandle","filterProjectsList","web","useEffect","columns","title","dataIndex","valueType","hideInSearch","width","hideInTable","key","render","text","record","_","action","React","className","onClick","projectId","ProTable","rowKey","dataSource","onSubmit","onReset","options","setting","listsHeight","pagination","pageSize","onChange","page","dateFormatter","headerTitle","toolBarRender","Button","icon","PlusOutlined","type"],"sourceRoot":""}