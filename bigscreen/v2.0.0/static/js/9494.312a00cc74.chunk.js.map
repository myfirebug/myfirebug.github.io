{"version":3,"file":"static/js/9494.312a00cc74.chunk.js","mappings":"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","sources":["webpack://large-screen-configuration/./src/compoents/dragdrop/drag.ts","webpack://large-screen-configuration/./src/compoents/echarts/index.tsx","webpack://large-screen-configuration/./src/elements/line/index.tsx","webpack://large-screen-configuration/./src/elements/bar/index.tsx","webpack://large-screen-configuration/./src/elements/pie/index.tsx","webpack://large-screen-configuration/./src/elements/image/base/index.tsx","webpack://large-screen-configuration/./src/compoents/swiper/index.tsx","webpack://large-screen-configuration/./src/elements/index.ts","webpack://large-screen-configuration/./src/elements/text/base/index.tsx","webpack://large-screen-configuration/./src/elements/text/countup/index.tsx","webpack://large-screen-configuration/./src/elements/text/message/index.tsx","webpack://large-screen-configuration/./src/elements/image/banner/index.tsx","webpack://large-screen-configuration/./src/elements/text/date/index.tsx","webpack://large-screen-configuration/./src/elements/table/index.tsx","webpack://large-screen-configuration/./src/layout/gridLayout/components/auxiliaryLine/index.tsx","webpack://large-screen-configuration/./src/compoents/boundingClientRect/index.tsx","webpack://large-screen-configuration/./src/layout/gridLayout/index.tsx","webpack://large-screen-configuration/./src/layout/previewLayout/index.tsx"],"sourcesContent":["class DragStore<T extends IAnyObject> {\r\n  moveItem = new Map<string, T>();\r\n\r\n  set(key: string, data: T) {\r\n    this.moveItem.set(key, data);\r\n  }\r\n\r\n  remove(key: string) {\r\n    this.moveItem.delete(key);\r\n  }\r\n\r\n  get(key: string): undefined | T {\r\n    return this.moveItem.get(key);\r\n  }\r\n}\r\n\r\n/**\r\n * 拖拽临时数据\r\n */\r\nexport const dragStore = new DragStore<IAnyObject>();\r\n\r\n/**\r\n * 判断是否在当前四边形内\r\n * @param {*} p1 父容器\r\n * @param {*} p2\r\n * @returns\r\n *  对应是 左上角坐标 和 右下角坐标\r\n *  [0,0,1,1]  => 左上角坐标 0,0  右下角 1,1\r\n */\r\nexport const booleanWithin = (\r\n  p1: [number, number, number, number],\r\n  p2: [number, number, number, number]\r\n) => {\r\n  return p1[0] <= p2[0] && p1[1] <= p2[1] && p1[2] >= p2[2] && p1[3] >= p2[3];\r\n};\r\n\r\n/**\r\n * 判断是两四边形是否相交\r\n * @param {*} p1 父容器\r\n * @param {*} p2\r\n * @returns\r\n *  对应是 左上角坐标 和 右下角坐标\r\n *  [0,0,1,1]  => 左上角坐标 0,0  右下角 1,1\r\n */\r\nexport const booleanIntersects = (\r\n  p1: [number, number, number, number],\r\n  p2: [number, number, number, number]\r\n) => {\r\n  return !(\r\n    p1[2] <= p2[0] || // p1 在 p2 左边\r\n    p2[2] <= p1[0] || // p1 在 p2 右边\r\n    p1[3] <= p2[1] || // p1 在 p2 上边\r\n    // p1 在 p2 下边\r\n    p2[3] <= p1[1]\r\n  );\r\n};\r\n\r\n/**\r\n * 获取元素位置信息\r\n * @param {*} width 格子宽\r\n * @param {*} height 格子高\r\n * @param {*} x x 坐标\r\n * @param {*} y y 坐标\r\n * @param {*} gap 间隔\r\n * @param {*} column 元素占列数\r\n * @param {*} row 元素占行数\r\n * @returns\r\n */\r\nexport const getItemSizeStyle = (\r\n  width: number,\r\n  height: number,\r\n  x: number,\r\n  y: number,\r\n  gap: number,\r\n  column: number,\r\n  row: number\r\n) => {\r\n  return {\r\n    width: `${width * column + (column - 1) * gap}px`,\r\n    height: `${height * row + (row - 1) * gap}px`,\r\n    transform: `translate(${(width + gap) * (x - 1)}px,${\r\n      (height + gap) * (y - 1)\r\n    }px)`,\r\n  };\r\n};\r\n","import React, { memo, useCallback, useEffect, useRef } from \"react\";\r\nimport * as echarts from \"echarts\";\r\nimport { init as initChart } from \"echarts/core\";\r\nimport data from \"./infographic.json\";\r\nimport {\r\n  Option,\r\n  Theme,\r\n  InitOptions,\r\n  UpdateOptions,\r\n  AutoresizeProp,\r\n  LoadingOptions,\r\n  EChartsType,\r\n} from \"./types\";\r\necharts.registerTheme(\"infographic\", data);\r\n\r\ninterface IEchartsProps {\r\n  option: Option;\r\n  theme?: Theme;\r\n  initOptions?: InitOptions;\r\n  updateOptions?: UpdateOptions;\r\n  group?: string;\r\n  autoresize?: AutoresizeProp;\r\n  loading?: boolean;\r\n  loadingOptions?: LoadingOptions;\r\n}\r\n\r\nconst Echarts = memo(\r\n  (props: IEchartsProps) => {\r\n    const {\r\n      theme,\r\n      group,\r\n      initOptions,\r\n      option,\r\n      updateOptions,\r\n      loading = false,\r\n      loadingOptions,\r\n      autoresize = {},\r\n    } = props;\r\n    const dom = useRef<HTMLDivElement>(null);\r\n    const chart = useRef<EChartsType>();\r\n    const timmer = useRef<any>(0);\r\n    // tooltip auto play current index\r\n    const currentIndex = useRef<number>(-1);\r\n\r\n    const autoPlayHandler = useCallback(() => {\r\n      if (!option.series || !(option.series as echarts.SeriesOption[]).length) {\r\n        return false;\r\n      }\r\n\r\n      if (chart.current) {\r\n        if (timmer.current) {\r\n          clearInterval(timmer.current);\r\n        }\r\n        timmer.current = setInterval(() => {\r\n          const dataLen =\r\n            option.series && (option.series as echarts.SeriesOption[]).length\r\n              ? (\r\n                  (option.series as echarts.SeriesOption[])[0]\r\n                    ?.data as Array<any>\r\n                ).length\r\n              : 0;\r\n\r\n          // 取消之前高亮的图形\r\n          chart?.current?.dispatchAction({\r\n            type: \"downplay\",\r\n            seriesIndex: 0,\r\n          });\r\n          currentIndex.current = (currentIndex.current + 1) % dataLen;\r\n          // 高亮当前图形\r\n          chart?.current?.dispatchAction({\r\n            type: \"highlight\",\r\n            seriesIndex: 0,\r\n            dataIndex: currentIndex.current,\r\n          });\r\n          // 显示 tooltip\r\n          chart?.current?.dispatchAction({\r\n            type: \"showTip\",\r\n            seriesIndex: 0,\r\n            dataIndex: currentIndex.current,\r\n          });\r\n        }, 3000);\r\n      }\r\n    }, [chart, timmer, option, currentIndex]);\r\n\r\n    // 鼠标移入事件\r\n    const mouseHander = useCallback((e: any) => {\r\n      clearInterval(timmer.current);\r\n      currentIndex.current = e.dataIndex;\r\n      // 取消之前高亮的图形\r\n      chart?.current?.dispatchAction({\r\n        type: \"downplay\",\r\n        seriesIndex: 0,\r\n      });\r\n      // 高亮当前图形\r\n      chart?.current?.dispatchAction({\r\n        type: \"highlight\",\r\n        seriesIndex: 0,\r\n        dataIndex: currentIndex.current,\r\n      });\r\n    }, []);\r\n\r\n    const init = useCallback(() => {\r\n      if (!dom.current) {\r\n        return;\r\n      }\r\n      if (!chart.current) {\r\n        chart.current = initChart(\r\n          dom.current,\r\n          theme || \"infographic\",\r\n          initOptions\r\n        );\r\n      }\r\n      if (group) {\r\n        chart.current.group = group;\r\n      }\r\n\r\n      if (loading) {\r\n        chart.current.showLoading(loadingOptions);\r\n      } else {\r\n        chart.current.hideLoading();\r\n      }\r\n\r\n      if (option) {\r\n        chart.current.setOption(\r\n          {\r\n            ...option,\r\n            tooltip: {\r\n              trigger: \"axis\",\r\n              backgroundColor: \"#000\",\r\n              borderColor: \"rgba(255,255,255,.2)\",\r\n              padding: [8, 8],\r\n              textStyle: {\r\n                color: \"#fff\",\r\n                fontSize: 14,\r\n              },\r\n              ...option.tooltip,\r\n            },\r\n          },\r\n          updateOptions\r\n        );\r\n        autoPlayHandler();\r\n      }\r\n    }, [\r\n      initOptions,\r\n      option,\r\n      theme,\r\n      group,\r\n      loading,\r\n      loadingOptions,\r\n      updateOptions,\r\n      autoPlayHandler,\r\n    ]);\r\n\r\n    const cleanup = useCallback(() => {\r\n      if (chart.current) {\r\n        chart.current.off(\"mouseover\", mouseHander);\r\n        chart.current.off(\"mouseout\", autoPlayHandler);\r\n        chart.current.dispose();\r\n        chart.current = undefined;\r\n      }\r\n    }, [autoPlayHandler, mouseHander]);\r\n\r\n    useEffect(() => {\r\n      init();\r\n      const { onResize } = autoresize;\r\n      const callback = () => {\r\n        chart.current?.resize();\r\n        onResize?.();\r\n      };\r\n      const resizeObserver = new ResizeObserver((entries) => {\r\n        if (!Array.isArray(entries) || !entries.length) {\r\n          return;\r\n        }\r\n        callback();\r\n      });\r\n\r\n      resizeObserver.observe(dom.current as HTMLDivElement);\r\n      return () => {\r\n        cleanup();\r\n        resizeObserver.disconnect();\r\n      };\r\n    }, [cleanup, init, autoresize]);\r\n\r\n    useEffect(() => {\r\n      if (chart.current) {\r\n        chart.current.on(\"mouseover\", mouseHander);\r\n        chart.current.on(\"mouseout\", autoPlayHandler);\r\n      }\r\n    }, [autoPlayHandler, mouseHander]);\r\n\r\n    return (\r\n      <div\r\n        className=\"cms-echarts\"\r\n        ref={dom}\r\n        style={{ width: \"100%\", height: \"100%\" }}\r\n      ></div>\r\n    );\r\n  },\r\n  (prevProps, nextProps) => {\r\n    if (JSON.stringify(prevProps) === JSON.stringify(nextProps)) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n);\r\n\r\nexport default Echarts;\r\n","import React, { memo, useMemo } from \"react\";\r\nimport Echarts from \"@src/compoents/echarts\";\r\nimport { getStyles, handleData, handleEchartsOption } from \"@src/utils\";\r\ninterface ILine {\r\n  options: IAnyObject;\r\n  data: any;\r\n  field: string;\r\n}\r\n\r\nconst Line = memo((props: ILine) => {\r\n  const { options, data, field } = props;\r\n  // 处理echarts数据\r\n  const getOption = useMemo(() => {\r\n    const configuration = handleEchartsOption(options);\r\n    const currentData = data && data[field] ? data[field] : [];\r\n    const { legendData, xAxisData, yAxisData, series } =\r\n      handleData(currentData);\r\n    return {\r\n      ...configuration,\r\n      legend: {\r\n        ...configuration.legend,\r\n        data: legendData,\r\n      },\r\n      xAxis: {\r\n        ...configuration.xAxis,\r\n        data: xAxisData,\r\n      },\r\n      yAxis: {\r\n        ...configuration.yAxis,\r\n        data: yAxisData,\r\n      },\r\n      series: series\r\n        ? series.map((item) => ({\r\n            ...configuration.line.series,\r\n            ...item,\r\n          }))\r\n        : [],\r\n    };\r\n  }, [data, field, options]);\r\n  console.log(getOption, \"getOption\");\r\n  const style = useMemo(() => {\r\n    return getStyles(options);\r\n  }, [options]);\r\n  return (\r\n    <div style={{ ...style, width: \"100%\", height: \"100%\" }}>\r\n      <Echarts option={getOption} />\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Line;\r\n","import React, { memo, useMemo } from \"react\";\r\nimport Echarts from \"@src/compoents/echarts\";\r\nimport { getStyles, handleData, handleEchartsOption } from \"@src/utils\";\r\nimport * as echarts from \"echarts\";\r\nimport tinycolor from \"tinycolor2\";\r\ninterface IBar {\r\n  options: IAnyObject;\r\n  data: any;\r\n  field: string;\r\n}\r\n\r\nconst Bar = memo((props: IBar) => {\r\n  const { options, data, field } = props;\r\n  // 处理echarts数据\r\n  const getOption = useMemo(() => {\r\n    const configuration = handleEchartsOption(options);\r\n    const currentData = data && data[field] ? data[field] : [];\r\n    const { legendData, xAxisData, yAxisData, series } =\r\n      handleData(currentData);\r\n    // 当前系列颜色\r\n    const currentColor = (index: number) => {\r\n      return configuration.color[index % (configuration.color.length - 1)];\r\n    };\r\n\r\n    return {\r\n      ...configuration,\r\n      legend: {\r\n        ...configuration.legend,\r\n        data: legendData,\r\n      },\r\n      xAxis: {\r\n        ...configuration.xAxis,\r\n        data: xAxisData,\r\n      },\r\n      yAxis: {\r\n        ...configuration.yAxis,\r\n        data: yAxisData,\r\n      },\r\n      series: series\r\n        ? series.map((item, index) => ({\r\n            ...configuration.bar.series,\r\n            ...item,\r\n            itemStyle: {\r\n              borderRadius: options?.barBorderRadius || 0,\r\n              color: !options.barGradation\r\n                ? currentColor(index)\r\n                : new echarts.graphic.LinearGradient(\r\n                    0,\r\n                    0,\r\n                    options.barOrient === \"vertical\" ? 1 : 0,\r\n                    options.barOrient === \"vertical\" ? 0 : 1,\r\n                    [\r\n                      {\r\n                        offset: 0,\r\n                        color: tinycolor(currentColor(index))\r\n                          .lighten(15)\r\n                          .toString(),\r\n                      },\r\n                      {\r\n                        offset: 0.5,\r\n                        color: currentColor(index),\r\n                      },\r\n                      {\r\n                        offset: 1,\r\n                        color: tinycolor(currentColor(index))\r\n                          .darken(15)\r\n                          .toString(),\r\n                      },\r\n                    ]\r\n                  ),\r\n            },\r\n          }))\r\n        : [],\r\n    };\r\n  }, [data, field, options]);\r\n  const style = useMemo(() => {\r\n    return getStyles(options);\r\n  }, [options]);\r\n  return (\r\n    <div style={{ ...style, width: \"100%\", height: \"100%\" }}>\r\n      <Echarts option={getOption} />\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Bar;\r\n","import React, { memo, useMemo } from \"react\";\r\nimport Echarts from \"@src/compoents/echarts\";\r\nimport { getStyles, handleData, handleEchartsOption } from \"@src/utils\";\r\ninterface IPie {\r\n  options: IAnyObject;\r\n  data: any;\r\n  field: string;\r\n}\r\n\r\nconst Pie = memo((props: IPie) => {\r\n  const { options, data, field } = props;\r\n  // 处理echarts数据\r\n  const getOption = useMemo(() => {\r\n    const configuration = handleEchartsOption(options);\r\n    const currentData = data && data[field] ? data[field] : [];\r\n    const { legendData, xAxisData, yAxisData, series } = handleData(\r\n      currentData,\r\n      \"pie\"\r\n    );\r\n    return {\r\n      ...configuration,\r\n      tooltip: {\r\n        trigger: \"item\",\r\n      },\r\n      legend: {\r\n        ...configuration.legend,\r\n        data: legendData,\r\n        formatter: function (name: string) {\r\n          const isOnlyOne = data.series.length === 1;\r\n          let arr = [\"{a|\" + name + \"}\"];\r\n          if (isOnlyOne && options.legendTotal) {\r\n            // 添加\r\n            let total = 0;\r\n            let target = 0;\r\n            for (let i = 0; i < data.series[0].data.length; i++) {\r\n              total += data.series[0].data[i].value;\r\n              if (data.series[0].data[i].name === name) {\r\n                target = data.series[0].data[i].value;\r\n              }\r\n            }\r\n            arr.push(\"{b|\" + ((target / total) * 100).toFixed(2) + \"%}\");\r\n          }\r\n\r\n          return arr.join(\"  \");\r\n        },\r\n        textStyle: {\r\n          // 添加\r\n          padding: [8, 0, 0, 0],\r\n          rich: {\r\n            a: {\r\n              fontSize: 14,\r\n              width: 80,\r\n              color: \"#fff\",\r\n            },\r\n            b: {\r\n              fontSize: 14,\r\n              width: 70,\r\n              align: \"right\",\r\n              color: \"#fff\",\r\n            },\r\n          },\r\n        },\r\n      },\r\n      xAxis: {\r\n        ...configuration.xAxis,\r\n        data: xAxisData,\r\n      },\r\n      yAxis: {\r\n        ...configuration.yAxis,\r\n        data: yAxisData,\r\n      },\r\n      series: series\r\n        ? series.map((item, index) => ({\r\n            ...configuration.pie.series,\r\n            ...item,\r\n            data: currentData[index].data,\r\n            itemStyle: {\r\n              borderWidth: options.seriesItemStyleColorBorderWidth,\r\n              borderColor: options.seriesItemStyleBorderColor,\r\n              borderRadius: options.seriesItemStyleColorBorderRadius,\r\n            },\r\n            center: [\r\n              `${options.seriesHorizontalPosition}%`,\r\n              `${options.seriesVerticalPosition}%`,\r\n            ],\r\n            emphasis: {\r\n              scaleSize: options.emphasisScaleSize,\r\n              label: {\r\n                show: true,\r\n                fontSize: options.emphasisLabelFontSize,\r\n                fontWeight: options.emphasisLabelFontWeight,\r\n                color: options.emphasisLabelColor,\r\n              },\r\n              itemStyle: {\r\n                shadowBlur: options.emphasisStyleShadowBlur,\r\n                shadowOffsetX: options.emphasisStyleShadowOffsetX,\r\n                shadowOffsetY: options.emphasisStyleShadowOffsetY,\r\n                shadowColor: options.emphasisStyleShadowColor,\r\n              },\r\n            },\r\n          }))\r\n        : [],\r\n    };\r\n  }, [data, field, options]);\r\n\r\n  console.log(getOption, \"getOption\");\r\n  const style = useMemo(() => {\r\n    return getStyles(options);\r\n  }, [options]);\r\n  return (\r\n    <div style={{ ...style, width: \"100%\", height: \"100%\" }}>\r\n      <Echarts option={getOption} />\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Pie;\r\n","import React, { FC, useMemo } from \"react\";\r\nimport { Image } from \"antd\";\r\nimport { getStyles } from \"@src/utils\";\r\nimport \"./index.scss\";\r\ninterface IBaseImage {\r\n  data: any;\r\n  field: string;\r\n  options: any;\r\n}\r\nexport const BaseImage: FC<IBaseImage> = ({ data, field, options }) => {\r\n  const baseTextStyle = useMemo(() => {\r\n    return getStyles(options);\r\n  }, [options]);\r\n  return (\r\n    <div className=\"cms-base-image\" style={baseTextStyle}>\r\n      <Image\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        src={\r\n          data && data[field]\r\n            ? data[field]\r\n            : \"https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png\"\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BaseImage;\r\n","import React, { FC, ReactNode, useEffect, useMemo, useRef } from \"react\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport { Autoplay, Pagination, Navigation } from \"swiper/modules\";\r\n\r\nimport \"swiper/css\";\r\nimport \"swiper/css/pagination\";\r\nimport \"swiper/css/navigation\";\r\nimport \"./index.scss\";\r\nimport { SwiperModule } from \"swiper/types\";\r\ninterface ICustomSwiper {\r\n  direction?: \"vertical\" | \"horizontal\";\r\n  datas?: IAnyObject[];\r\n  loop?: boolean;\r\n  spaceBetween?: number;\r\n  slidesPerView?: number;\r\n  rows?: number;\r\n  pagination?: boolean;\r\n  navigation?: boolean;\r\n  autoplay?: boolean;\r\n  render?: (item: IAnyObject, index?: number) => ReactNode;\r\n}\r\nexport const CustomSwiper: FC<ICustomSwiper> = ({\r\n  loop = false,\r\n  spaceBetween = 0,\r\n  slidesPerView = 1,\r\n  rows = 1,\r\n  pagination = false,\r\n  navigation = false,\r\n  autoplay = false,\r\n  datas = [],\r\n  direction = \"horizontal\",\r\n  render,\r\n}) => {\r\n  const modules = useMemo(() => {\r\n    let arr: SwiperModule[] = [];\r\n    autoplay && arr.push(Autoplay);\r\n    pagination && arr.push(Pagination);\r\n    navigation && arr.push(Navigation);\r\n    return arr;\r\n  }, [autoplay, navigation, pagination]);\r\n\r\n  const swiperRef = useRef<any>(null);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      if (autoplay) {\r\n        swiperRef.current?.swiper?.autoplay?.start();\r\n      } else {\r\n        swiperRef.current?.swiper?.autoplay?.stop();\r\n      }\r\n    }, 100);\r\n  }, [autoplay]);\r\n  return (\r\n    <div className=\"cms-swiper\">\r\n      <Swiper\r\n        ref={swiperRef}\r\n        loop={loop}\r\n        spaceBetween={spaceBetween}\r\n        slidesPerView={slidesPerView}\r\n        modules={modules}\r\n        navigation={navigation}\r\n        pagination={pagination}\r\n        direction={direction}\r\n      >\r\n        {new Array(Math.ceil(datas.length / rows))\r\n          .fill(null)\r\n          .map((_, index) => (\r\n            <SwiperSlide key={index}>\r\n              {new Array(rows).fill(null).map((_, subIndex) => (\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    height: `${100 / rows}%`,\r\n                    marginTop: `${spaceBetween}px`,\r\n                  }}\r\n                  key={subIndex}\r\n                >\r\n                  {render &&\r\n                    index * rows + subIndex < datas.length &&\r\n                    render(\r\n                      datas?.[index * rows + subIndex],\r\n                      index * rows + subIndex\r\n                    )}\r\n                </div>\r\n              ))}\r\n            </SwiperSlide>\r\n          ))}\r\n      </Swiper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomSwiper;\r\n","import { BaseText, CountUp, MessageText, DateText } from \"./text\";\r\nimport Line from \"./line\";\r\nimport Bar from \"./bar\";\r\nimport Pie from \"./pie\";\r\nimport { BaseImage, BaseBanner } from \"./image\";\r\nimport Table from \"./table\";\r\n\r\nconst elements: any = {\r\n  BaseText,\r\n  Line,\r\n  Bar,\r\n  CountUp,\r\n  Pie,\r\n  MessageText,\r\n  BaseImage,\r\n  BaseBanner,\r\n  DateText,\r\n  Table,\r\n};\r\nexport default elements;\r\n","import { getStyles } from \"@src/utils\";\r\nimport React, { FC, useMemo } from \"react\";\r\nimport \"./index.scss\";\r\n\r\ninterface IBaseText {\r\n  data: any;\r\n  field: string;\r\n  options: any;\r\n}\r\n// 基础文本框\r\nexport const BaseText: FC<IBaseText> = ({ data, field, options }) => {\r\n  const baseTextStyle = useMemo(() => {\r\n    return getStyles(options);\r\n  }, [options]);\r\n  const iconStyle = useMemo(() => {\r\n    return getStyles(options, \"iconStyle\");\r\n  }, [options]);\r\n  return (\r\n    <div className=\"cms-base-text\" style={baseTextStyle}>\r\n      {options.iconStyleSelect ? (\r\n        <span\r\n          className=\"cms-icon\"\r\n          style={iconStyle}\r\n          dangerouslySetInnerHTML={{ __html: options.iconStyleSelect }}\r\n        ></span>\r\n      ) : null}\r\n\r\n      {data && data[field] ? data[field] : \"文本框\"}\r\n    </div>\r\n  );\r\n};\r\n","import { getStyles } from \"@src/utils\";\r\nimport React, { FC, useCallback, useEffect, useMemo, useRef } from \"react\";\r\nimport \"./index.scss\";\r\ninterface ICountup {\r\n  data: any;\r\n  field: string;\r\n  options: any;\r\n}\r\n\r\nexport const CountUp: FC<ICountup> = ({ data, field, options }) => {\r\n  const countupRef = useRef<HTMLDivElement>(null);\r\n  const countUpAnimRef = useRef<any>(null);\r\n\r\n  const style = useMemo(() => {\r\n    return getStyles(options);\r\n  }, [options]);\r\n\r\n  const countUpTextStyle = useMemo(() => {\r\n    return getStyles(options, \"countUpStyle\");\r\n  }, [options]);\r\n\r\n  const addonBeforeTextStyle = useMemo(() => {\r\n    return getStyles(options, \"addonBeforeStyle\");\r\n  }, [options]);\r\n\r\n  const addonAfterTextStyle = useMemo(() => {\r\n    return getStyles(options, \"addonAfterStyle\");\r\n  }, [options]);\r\n\r\n  const initCountUp = useCallback(async () => {\r\n    const countUpModule = await import(\"countup.js\");\r\n    countUpAnimRef.current = new countUpModule.CountUp(\r\n      countupRef.current as HTMLDivElement,\r\n      data[field],\r\n      {\r\n        decimalPlaces: 2,\r\n      }\r\n    );\r\n    if (!countUpAnimRef.current.error) {\r\n      countUpAnimRef.current.start();\r\n    } else {\r\n      console.error(countUpAnimRef.current.error);\r\n    }\r\n  }, [data, field]);\r\n  useEffect(() => {\r\n    initCountUp();\r\n    return () => {\r\n      countUpAnimRef.current = null;\r\n    };\r\n  }, [initCountUp]);\r\n  return (\r\n    <div className=\"cms-countUp\" style={style}>\r\n      {options.addonBefore && (\r\n        <div className=\"cms-countUp__before\" style={addonBeforeTextStyle}>\r\n          {options.addonBefore}\r\n        </div>\r\n      )}\r\n      <div\r\n        className=\"cms-countUp__content\"\r\n        ref={countupRef}\r\n        style={countUpTextStyle}\r\n      ></div>\r\n      {options.addonAfter && (\r\n        <div className=\"cms-countUp__aftter\" style={addonAfterTextStyle}>\r\n          {options.addonAfter}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import { getStyles } from \"@src/utils\";\r\nimport React, { FC, useMemo } from \"react\";\r\nimport Marquee from \"react-fast-marquee\";\r\nimport \"./index.scss\";\r\n\r\ninterface IMessageText {\r\n  data: any;\r\n  field: string;\r\n  options: any;\r\n}\r\n\r\nexport const MessageText: FC<IMessageText> = ({ data, field, options }) => {\r\n  const baseTextStyle = useMemo(() => {\r\n    return getStyles(options);\r\n  }, [options]);\r\n  const iconStyle = useMemo(() => {\r\n    return getStyles(options, \"iconStyle\");\r\n  }, [options]);\r\n  return (\r\n    <div className=\"cms-message-text\" style={baseTextStyle}>\r\n      <span className=\"cms-icon\" style={iconStyle}>\r\n        &#xe787;\r\n      </span>\r\n      <Marquee pauseOnHover gradient={false}>\r\n        {data && data[field]\r\n          ? data[field]\r\n          : \"I can be a React component, multiple React components, or just some text.\"}\r\n      </Marquee>\r\n    </div>\r\n  );\r\n};\r\n","import React, { memo, useMemo } from \"react\";\r\nimport CustomSwiper from \"@src/compoents/swiper\";\r\nimport \"./index.scss\";\r\nimport { getStyles } from \"@src/utils\";\r\ninterface IBaseBanner {\r\n  data: any;\r\n  field: string;\r\n  options: any;\r\n}\r\nexport const BaseBanner = memo((option: IBaseBanner) => {\r\n  const { data, field, options } = option;\r\n  const baseTextStyle = useMemo(() => {\r\n    return getStyles(options);\r\n  }, [options]);\r\n  return (\r\n    <div className=\"cms-banner\" style={baseTextStyle}>\r\n      <CustomSwiper\r\n        loop={options.loop || false}\r\n        autoplay={options.autoplay || false}\r\n        datas={data[field] || []}\r\n        rows={options.rows || 1}\r\n        slidesPerView={options.slidesPerView || 1}\r\n        spaceBetween={options.spaceBetween || 0}\r\n        pagination={options.pagination || false}\r\n        navigation={options.navigation || false}\r\n        render={(item) => {\r\n          return (\r\n            <img src={item.src} alt={item.name} width=\"100%\" height=\"100%\" />\r\n          );\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n});\r\n","import React, { FC, useCallback, useEffect, useRef, useState } from \"react\";\r\nimport { fmtDate, getStyles } from \"@src/utils\";\r\n\r\ninterface IDateText {\r\n  options: IAnyObject;\r\n}\r\n\r\nexport const DateText: FC<IDateText> = ({ options }) => {\r\n  const timer = useRef<any>(null);\r\n  // 初始化时间\r\n  const [text, setText] = useState(() => {\r\n    return fmtDate(new Date().getTime(), \"yyyy-MM-dd hh:mm:ss\");\r\n  });\r\n  // 获取时间\r\n  const getText = useCallback(() => {\r\n    setText(\r\n      fmtDate(new Date().getTime(), options.fmtDate || \"yyyy-MM-dd hh:mm:ss\")\r\n    );\r\n  }, [options.fmtDate]);\r\n\r\n  useEffect(() => {\r\n    timer.current = setInterval(getText, 1000);\r\n    return () => {\r\n      clearInterval(timer.current);\r\n    };\r\n  }, [timer, getText]);\r\n  return <div style={getStyles(options)}>{text}</div>;\r\n};\r\n","import React, { memo, useMemo } from \"react\";\r\nimport CustomSwiper from \"@src/compoents/swiper\";\r\nimport \"./index.scss\";\r\nimport { getStyles } from \"@src/utils\";\r\ninterface IBaseBanner {\r\n  data: any;\r\n  field: string;\r\n  options: any;\r\n}\r\n\r\nconst Table = memo((props: IBaseBanner) => {\r\n  const { data, field, options } = props;\r\n  const baseTextStyle = useMemo(() => {\r\n    return getStyles(options);\r\n  }, [options]);\r\n\r\n  const datas = useMemo(() => {\r\n    // 这里主要处理隔行换色\r\n    if (\r\n      data[field] &&\r\n      data[field].length > options.slidesPerView &&\r\n      data[field].length % 2 === 1\r\n    ) {\r\n      return [...data[field], ...data[field]];\r\n    } else {\r\n      return data[field];\r\n    }\r\n  }, [data, field, options.slidesPerView]);\r\n\r\n  const renderItem = (data: any, components: string) => {\r\n    switch (components) {\r\n      case \"progress\": {\r\n        return (\r\n          <div\r\n            className=\"cms-table__progress\"\r\n            style={{ background: options.progressBackgroundColor }}\r\n          >\r\n            <div\r\n              style={{\r\n                width: data,\r\n                background: options.progressForegroundColor,\r\n              }}\r\n            ></div>\r\n          </div>\r\n        );\r\n      }\r\n      default: {\r\n        return <>{data}</>;\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"cms-table\" style={baseTextStyle}>\r\n      <div\r\n        className=\"cms-table__header\"\r\n        style={{\r\n          background: options.tableHeaderBackgroudColor,\r\n          color: options.tableHeaderColor,\r\n          display: options.tableShowHeader ? \"flex\" : \"none\",\r\n        }}\r\n      >\r\n        {options.tableColumn.map((item: any, index: number) => (\r\n          <div\r\n            key={index}\r\n            className=\"cms-table__cell\"\r\n            style={{\r\n              width: `${item.width}px`,\r\n              flex: item.width ? \"none\" : 1,\r\n              justifyContent: item.align === \"right\" ? \"end\" : \"start\",\r\n            }}\r\n          >\r\n            {item.title}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div\r\n        className=\"cms-table__body\"\r\n        style={{ color: options.tableTbodyColor }}\r\n      >\r\n        <CustomSwiper\r\n          loop={options.loop || false}\r\n          autoplay={options.autoplay || false}\r\n          datas={datas}\r\n          rows={options.rows || 1}\r\n          slidesPerView={options.slidesPerView || 1}\r\n          spaceBetween={options.spaceBetween || 0}\r\n          direction=\"vertical\"\r\n          render={(item, index) => {\r\n            return (\r\n              <div\r\n                key={index}\r\n                className=\"cms-table__row\"\r\n                style={\r\n                  (index as number) % 2 === 0\r\n                    ? getStyles(options, \"tableTbodyOdd\")\r\n                    : getStyles(options, \"tableTbodyEven\")\r\n                }\r\n              >\r\n                {options.tableColumn.map((subItem: any, subIndex: number) => (\r\n                  <div\r\n                    key={subIndex}\r\n                    className=\"cms-table__cell\"\r\n                    style={{\r\n                      width: `${subItem.width}px`,\r\n                      flex: subItem.width ? \"none\" : 1,\r\n                      justifyContent:\r\n                        subItem.align === \"right\" ? \"end\" : \"start\",\r\n                    }}\r\n                  >\r\n                    {subItem.dataIndex === \"index\" ? (\r\n                      <span\r\n                        className={`cms-table__serialNumber ${\r\n                          options.serialNumberRank ? \"is-\" + index : \"\"\r\n                        }`}\r\n                        style={getStyles(options, \"serialNumber\")}\r\n                      >\r\n                        {(index as number) + 1}\r\n                      </span>\r\n                    ) : (\r\n                      renderItem(item[subItem.dataIndex], subItem.components)\r\n                    )}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            );\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Table;\r\n","import React, { FC, useMemo } from \"react\";\r\n\r\ninterface IAuxiliaryLine {\r\n  gap: number;\r\n  column: number;\r\n  width: number;\r\n  height: number;\r\n  row: number;\r\n  borderColor?: string;\r\n}\r\n\r\nconst AuxiliaryLine: FC<IAuxiliaryLine> = ({\r\n  gap,\r\n  column,\r\n  width,\r\n  height,\r\n  row,\r\n  borderColor = \"rgba(255, 255, 255, 0.2)\",\r\n}) => {\r\n  const style = useMemo(() => {\r\n    return {\r\n      display: \"grid\",\r\n      gap: `${gap}px`,\r\n      gridTemplateColumns: `repeat(${column}, ${\r\n        (width - (column + 1) * gap) / column\r\n      }px)`,\r\n      gridTemplateRows: `repeat(${row},  ${\r\n        (height - (row + 1) * gap) / row\r\n      }px)`,\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      padding: `${gap}px`,\r\n    };\r\n  }, [column, gap, height, row, width]);\r\n  return (\r\n    <div className=\"cms-grid-layout__auxiliaryLine\" style={style}>\r\n      {new Array(column * row).fill(null).map((_, index) => (\r\n        <div\r\n          key={index}\r\n          style={{\r\n            borderColor: borderColor || \"rgba(255, 255, 255, 0.2)\",\r\n          }}\r\n        ></div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuxiliaryLine;\r\n","import React, {\r\n  FC,\r\n  ReactNode,\r\n  useCallback,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\n\r\ninterface IResizeObserver {\r\n  render: (width: number, height: number) => ReactNode;\r\n}\r\n\r\nconst BoundingClientRect: FC<IResizeObserver> = ({ render }) => {\r\n  const [boundingClientRect, setBoundingClientRect] = useState({\r\n    width: 0,\r\n    height: 0,\r\n  });\r\n\r\n  // 目标元素\r\n  const target = useRef<HTMLDivElement>(null);\r\n\r\n  // 动态计算目标元素的宽高\r\n  const getClientRect = useCallback(() => {\r\n    if (!target.current) return;\r\n    const { width, height } = (\r\n      target.current as HTMLDivElement\r\n    )?.getBoundingClientRect();\r\n\r\n    setBoundingClientRect({\r\n      width,\r\n      height,\r\n    });\r\n  }, []);\r\n  useEffect(() => {\r\n    getClientRect();\r\n    const resizeObserver = new ResizeObserver((entries: string | any[]) => {\r\n      if (!Array.isArray(entries) || !entries.length) {\r\n        return;\r\n      }\r\n      getClientRect();\r\n    });\r\n\r\n    resizeObserver.observe(target.current as HTMLDivElement);\r\n    return () => {\r\n      resizeObserver.disconnect();\r\n    };\r\n  }, [getClientRect]);\r\n  return (\r\n    <div ref={target} style={{ width: \"100%\", height: \"100%\" }}>\r\n      {render(boundingClientRect.width, boundingClientRect.height)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BoundingClientRect;\r\n","import { dragStore } from \"@src/compoents/dragdrop/drag\";\r\nimport React, { memo, ReactNode, useMemo } from \"react\";\r\nimport ReactGridLayout, { Layout } from \"react-grid-layout\";\r\nimport \"react-grid-layout/css/styles.css\";\r\nimport \"./index.scss\";\r\nimport AuxiliaryLine from \"./components/auxiliaryLine\";\r\nimport BoundingClientRect from \"@src/compoents/boundingClientRect\";\r\ninterface IGridLayout {\r\n  configureValue?: IAnyObject;\r\n  groupName?: string;\r\n  row?: number;\r\n  column?: number;\r\n  datas?: IAnyObject[];\r\n  gap?: number;\r\n  isDroppable?: boolean;\r\n  isResizable?: boolean;\r\n  staticed?: boolean;\r\n  render?: (data: IAnyObject) => ReactNode;\r\n  onDrop?: (item: Layout, data: any) => void;\r\n  onDragStop?: (item: Layout) => void;\r\n  onResizeStop?: (item: Layout) => void;\r\n  onClose?: (item: IAnyObject) => void;\r\n}\r\n\r\nconst GridLayout = memo((props: IGridLayout) => {\r\n  const {\r\n    configureValue,\r\n    groupName = \"elements\",\r\n    row = 3,\r\n    column = 4,\r\n    datas,\r\n    gap = 10,\r\n    isDroppable = true,\r\n    isResizable = true,\r\n    staticed = false,\r\n    render,\r\n    onDrop,\r\n    onDragStop,\r\n    onResizeStop,\r\n    onClose,\r\n  } = props;\r\n\r\n  const layout = useMemo(() => {\r\n    let arr: Layout[] = [];\r\n    arr =\r\n      datas?.map((item: IAnyObject) => {\r\n        return {\r\n          i: item.widgetId || item.elementId,\r\n          w: item.row,\r\n          h: item.column,\r\n          x: item.x,\r\n          y: item.y,\r\n          static: staticed,\r\n        };\r\n      }) || [];\r\n    return arr;\r\n  }, [datas, staticed]);\r\n  console.log(\"update\");\r\n  return (\r\n    <BoundingClientRect\r\n      render={(width, height) => {\r\n        return (\r\n          <div className=\"cms-grid-layout__main\">\r\n            {!staticed ? (\r\n              <AuxiliaryLine\r\n                gap={gap}\r\n                column={column}\r\n                width={width}\r\n                height={height}\r\n                row={row}\r\n                borderColor={configureValue?.auxiliaryLineBorderColor}\r\n              />\r\n            ) : null}\r\n\r\n            <ReactGridLayout\r\n              className=\"cms-grid-layout\"\r\n              layout={layout}\r\n              isDroppable={isDroppable}\r\n              isResizable={isResizable}\r\n              rowHeight={(height - gap * (row + 1)) / row}\r\n              maxRows={row}\r\n              width={width}\r\n              cols={column}\r\n              // verticalCompact={false}\r\n              compactType={null}\r\n              preventCollision\r\n              margin={[gap, gap]}\r\n              onDrop={(data, item, e) => {\r\n                const dragData = dragStore.get(groupName as string);\r\n                console.log(\"onDrop\");\r\n                if (item.x <= column && item.y <= row) {\r\n                  onDrop?.(item, dragData);\r\n                }\r\n              }}\r\n              onResizeStop={(data, oldItem, newItem) => {\r\n                console.log(\"resize\");\r\n                if (oldItem.w !== newItem.w || oldItem.h !== newItem.h) {\r\n                  onResizeStop?.(newItem);\r\n                }\r\n              }}\r\n              onDragStop={(data, oldItem, newItem) => {\r\n                console.log(\"onDragStop\");\r\n                if (oldItem.x !== newItem.x || oldItem.y !== newItem.y) {\r\n                  onDragStop?.(newItem);\r\n                }\r\n              }}\r\n            >\r\n              {datas?.map((item, index) => (\r\n                <div\r\n                  key={item.widgetId || item.elementId}\r\n                  className=\"cms-grid-layout__item\"\r\n                >\r\n                  {!staticed ? (\r\n                    <div\r\n                      className=\"cms-grid-layout__close\"\r\n                      onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        e.preventDefault();\r\n                        onClose?.(item);\r\n                      }}\r\n                    ></div>\r\n                  ) : null}\r\n                  <div className=\"cms-grid-layout__item--content\">\r\n                    {render?.(item)}\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </ReactGridLayout>\r\n          </div>\r\n        );\r\n      }}\r\n    ></BoundingClientRect>\r\n  );\r\n});\r\n\r\nexport default GridLayout;\r\n","import React, { FC, HtmlHTMLAttributes, ReactNode } from \"react\";\r\nimport \"./index.scss\";\r\nimport { getStyles } from \"@src/utils\";\r\ninterface IPreviewLayout extends HtmlHTMLAttributes<HTMLDivElement> {\r\n  data: IAnyObject;\r\n  header: ReactNode;\r\n  body: ReactNode;\r\n}\r\n\r\nconst PreviewLayout: FC<IPreviewLayout> = ({\r\n  data,\r\n  header,\r\n  body,\r\n  id,\r\n  style,\r\n}) => {\r\n  return (\r\n    <div\r\n      className=\"cms-preview-layout\"\r\n      style={{\r\n        ...getStyles(data?.configuration?.configureValue || {}),\r\n        ...style,\r\n      }}\r\n      id={id}\r\n    >\r\n      {data?.configuration?.configureValue?.headerShow ? (\r\n        <div\r\n          className=\"cms-preview-layout__header\"\r\n          style={{\r\n            ...getStyles(\r\n              data?.configuration?.configureValue || {},\r\n              \"headerStyle\"\r\n            ),\r\n            height: !(\r\n              data?.configuration?.configureValue?.bodyShow ||\r\n              data?.configuration?.configureValue?.bodyShow === undefined\r\n            )\r\n              ? \"100%\"\r\n              : `${\r\n                  data?.configuration?.configureValue?.headerStyleHeight || 40\r\n                }px`,\r\n          }}\r\n        >\r\n          {header}\r\n        </div>\r\n      ) : null}\r\n      {data?.configuration?.configureValue?.bodyShow ||\r\n      data?.configuration?.configureValue?.bodyShow === undefined ? (\r\n        <div\r\n          className=\"cms-preview-layout__body\"\r\n          style={getStyles(\r\n            data?.configuration?.configureValue || {},\r\n            \"bodyStyle\"\r\n          )}\r\n        >\r\n          {body}\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PreviewLayout;\r\n"],"names":["dragStore","constructor","moveItem","Map","set","key","data","this","remove","delete","get","booleanWithin","p1","p2","getItemSizeStyle","width","height","x","y","gap","column","row","transform","echarts","memo","props","theme","group","initOptions","option","updateOptions","loading","loadingOptions","autoresize","dom","useRef","chart","timmer","currentIndex","autoPlayHandler","useCallback","series","length","current","clearInterval","setInterval","_","_chart$current","_chart$current2","_chart$current3","dataLen","dispatchAction","type","seriesIndex","dataIndex","mouseHander","e","_chart$current4","_chart$current5","init","initChart","showLoading","hideLoading","setOption","tooltip","trigger","backgroundColor","borderColor","padding","textStyle","color","fontSize","cleanup","off","dispose","undefined","useEffect","onResize","resizeObserver","ResizeObserver","entries","callback","_chart$current6","Array","isArray","resize","observe","disconnect","on","React","className","ref","style","prevProps","nextProps","JSON","stringify","options","field","getOption","useMemo","configuration","handleEchartsOption","currentData","legendData","xAxisData","yAxisData","handleData","legend","xAxis","yAxis","map","item","line","getStyles","Echarts","currentColor","index","bar","itemStyle","borderRadius","barBorderRadius","barGradation","barOrient","offset","tinycolor","lighten","toString","darken","formatter","name","arr","legendTotal","total","target","i","value","push","toFixed","join","rich","a","b","align","pie","borderWidth","seriesItemStyleColorBorderWidth","seriesItemStyleBorderColor","seriesItemStyleColorBorderRadius","center","seriesHorizontalPosition","seriesVerticalPosition","emphasis","scaleSize","emphasisScaleSize","label","show","emphasisLabelFontSize","fontWeight","emphasisLabelFontWeight","emphasisLabelColor","shadowBlur","emphasisStyleShadowBlur","shadowOffsetX","emphasisStyleShadowOffsetX","shadowOffsetY","emphasisStyleShadowOffsetY","shadowColor","emphasisStyleShadowColor","BaseImage","_ref","baseTextStyle","Image","src","loop","spaceBetween","slidesPerView","rows","pagination","navigation","autoplay","datas","direction","render","modules","Autoplay","Pagination","Navigation","swiperRef","setTimeout","_swiperRef$current","_swiperRef$current$sw","_swiperRef$current$sw2","_swiperRef$current2","_swiperRef$current2$s","_swiperRef$current2$s2","swiper","start","stop","Swiper","Math","ceil","fill","SwiperSlide","subIndex","display","alignItems","marginTop","BaseText","iconStyle","iconStyleSelect","dangerouslySetInnerHTML","__html","Line","Bar","CountUp","countupRef","countUpAnimRef","countUpTextStyle","addonBeforeTextStyle","addonAfterTextStyle","initCountUp","async","countUpModule","decimalPlaces","error","addonBefore","addonAfter","Pie","MessageText","Marquee","pauseOnHover","gradient","BaseBanner","CustomSwiper","alt","DateText","timer","text","setText","useState","fmtDate","Date","getTime","getText","Table","background","tableHeaderBackgroudColor","tableHeaderColor","tableShowHeader","tableColumn","flex","justifyContent","title","tableTbodyColor","subItem","serialNumberRank","renderItem","components","progressBackgroundColor","progressForegroundColor","gridTemplateColumns","gridTemplateRows","boundingClientRect","setBoundingClientRect","getClientRect","_target$current","getBoundingClientRect","configureValue","groupName","isDroppable","isResizable","staticed","onDrop","onDragStop","onResizeStop","onClose","layout","widgetId","elementId","w","h","static","BoundingClientRect","AuxiliaryLine","auxiliaryLineBorderColor","ReactGridLayout","rowHeight","maxRows","cols","compactType","preventCollision","margin","dragData","oldItem","newItem","onClick","stopPropagation","preventDefault","_data$configuration","_data$configuration2","_data$configuration2$","_data$configuration3","_data$configuration4","_data$configuration4$","_data$configuration5","_data$configuration5$","_data$configuration6","_data$configuration6$","_data$configuration7","_data$configuration7$","_data$configuration8","_data$configuration8$","_data$configuration9","header","body","id","headerShow","bodyShow","headerStyleHeight"],"sourceRoot":""}