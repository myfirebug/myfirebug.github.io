{"version":3,"file":"static/js/854.8cdc2ec8ce.chunk.js","mappings":"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","sources":["webpack://large-screen-configuration/./src/compoents/echarts/index.tsx","webpack://large-screen-configuration/./src/compoents/dragdrop/previewLayout/index.tsx","webpack://large-screen-configuration/./src/compoents/widgetPreviewDialog/index.tsx","webpack://large-screen-configuration/./src/elements/line/index.tsx","webpack://large-screen-configuration/./src/elements/bar/index.tsx","webpack://large-screen-configuration/./src/elements/pie/index.tsx","webpack://large-screen-configuration/./src/elements/image/base/index.tsx","webpack://large-screen-configuration/./src/compoents/swiper/index.tsx","webpack://large-screen-configuration/./src/elements/index.ts","webpack://large-screen-configuration/./src/elements/text/base/index.tsx","webpack://large-screen-configuration/./src/elements/text/countup/index.tsx","webpack://large-screen-configuration/./src/elements/text/message/index.tsx","webpack://large-screen-configuration/./src/elements/image/banner/index.tsx","webpack://large-screen-configuration/./src/elements/text/date/index.tsx","webpack://large-screen-configuration/./src/elements/table/index.tsx","webpack://large-screen-configuration/./src/layout/widgetLayout/index.tsx"],"sourcesContent":["import React, { memo, useCallback, useEffect, useRef } from \"react\";\r\nimport * as echarts from \"echarts\";\r\nimport { init as initChart } from \"echarts/core\";\r\nimport data from \"./infographic.json\";\r\nimport {\r\n  Option,\r\n  Theme,\r\n  InitOptions,\r\n  UpdateOptions,\r\n  AutoresizeProp,\r\n  LoadingOptions,\r\n  EChartsType,\r\n} from \"./types\";\r\necharts.registerTheme(\"infographic\", data);\r\n\r\ninterface IEchartsProps {\r\n  option: Option;\r\n  theme?: Theme;\r\n  initOptions?: InitOptions;\r\n  updateOptions?: UpdateOptions;\r\n  group?: string;\r\n  autoresize?: AutoresizeProp;\r\n  loading?: boolean;\r\n  loadingOptions?: LoadingOptions;\r\n}\r\n\r\nconst Echarts = memo(\r\n  (props: IEchartsProps) => {\r\n    const {\r\n      theme,\r\n      group,\r\n      initOptions,\r\n      option,\r\n      updateOptions,\r\n      loading = false,\r\n      loadingOptions,\r\n      autoresize = {},\r\n    } = props;\r\n    const dom = useRef<HTMLDivElement>(null);\r\n    const chart = useRef<EChartsType>();\r\n    const timmer = useRef<any>(0);\r\n    // tooltip auto play current index\r\n    const currentIndex = useRef<number>(-1);\r\n\r\n    const autoPlayHandler = useCallback(() => {\r\n      if (!option.series || !(option.series as echarts.SeriesOption[]).length) {\r\n        return false;\r\n      }\r\n\r\n      if (chart.current) {\r\n        if (timmer.current) {\r\n          clearInterval(timmer.current);\r\n        }\r\n        timmer.current = setInterval(() => {\r\n          const dataLen =\r\n            option.series && (option.series as echarts.SeriesOption[]).length\r\n              ? (\r\n                  (option.series as echarts.SeriesOption[])[0]\r\n                    ?.data as Array<any>\r\n                ).length\r\n              : 0;\r\n\r\n          // 取消之前高亮的图形\r\n          chart?.current?.dispatchAction({\r\n            type: \"downplay\",\r\n            seriesIndex: 0,\r\n          });\r\n          currentIndex.current = (currentIndex.current + 1) % dataLen;\r\n          // 高亮当前图形\r\n          chart?.current?.dispatchAction({\r\n            type: \"highlight\",\r\n            seriesIndex: 0,\r\n            dataIndex: currentIndex.current,\r\n          });\r\n          // 显示 tooltip\r\n          chart?.current?.dispatchAction({\r\n            type: \"showTip\",\r\n            seriesIndex: 0,\r\n            dataIndex: currentIndex.current,\r\n          });\r\n        }, 3000);\r\n      }\r\n    }, [chart, timmer, option, currentIndex]);\r\n\r\n    // 鼠标移入事件\r\n    const mouseHander = useCallback((e: any) => {\r\n      clearInterval(timmer.current);\r\n      currentIndex.current = e.dataIndex;\r\n      // 取消之前高亮的图形\r\n      chart?.current?.dispatchAction({\r\n        type: \"downplay\",\r\n        seriesIndex: 0,\r\n      });\r\n      // 高亮当前图形\r\n      chart?.current?.dispatchAction({\r\n        type: \"highlight\",\r\n        seriesIndex: 0,\r\n        dataIndex: currentIndex.current,\r\n      });\r\n    }, []);\r\n\r\n    const init = useCallback(() => {\r\n      if (!dom.current) {\r\n        return;\r\n      }\r\n      if (!chart.current) {\r\n        chart.current = initChart(\r\n          dom.current,\r\n          theme || \"infographic\",\r\n          initOptions\r\n        );\r\n      }\r\n      if (group) {\r\n        chart.current.group = group;\r\n      }\r\n\r\n      if (loading) {\r\n        chart.current.showLoading(loadingOptions);\r\n      } else {\r\n        chart.current.hideLoading();\r\n      }\r\n\r\n      if (option) {\r\n        chart.current.setOption(\r\n          {\r\n            ...option,\r\n            tooltip: {\r\n              trigger: \"axis\",\r\n              backgroundColor: \"#000\",\r\n              borderColor: \"rgba(255,255,255,.2)\",\r\n              padding: [8, 8],\r\n              textStyle: {\r\n                color: \"#fff\",\r\n                fontSize: 14,\r\n              },\r\n              ...option.tooltip,\r\n            },\r\n          },\r\n          updateOptions\r\n        );\r\n        autoPlayHandler();\r\n      }\r\n    }, [\r\n      initOptions,\r\n      option,\r\n      theme,\r\n      group,\r\n      loading,\r\n      loadingOptions,\r\n      updateOptions,\r\n      autoPlayHandler,\r\n    ]);\r\n\r\n    const cleanup = useCallback(() => {\r\n      if (chart.current) {\r\n        chart.current.off(\"mouseover\", mouseHander);\r\n        chart.current.off(\"mouseout\", autoPlayHandler);\r\n        chart.current.dispose();\r\n        chart.current = undefined;\r\n      }\r\n    }, [autoPlayHandler, mouseHander]);\r\n\r\n    useEffect(() => {\r\n      init();\r\n      const { onResize } = autoresize;\r\n      const callback = () => {\r\n        chart.current?.resize();\r\n        onResize?.();\r\n      };\r\n      const resizeObserver = new ResizeObserver((entries) => {\r\n        if (!Array.isArray(entries) || !entries.length) {\r\n          return;\r\n        }\r\n        callback();\r\n      });\r\n\r\n      resizeObserver.observe(dom.current as HTMLDivElement);\r\n      return () => {\r\n        cleanup();\r\n        resizeObserver.disconnect();\r\n      };\r\n    }, [cleanup, init, autoresize]);\r\n\r\n    useEffect(() => {\r\n      if (chart.current) {\r\n        chart.current.on(\"mouseover\", mouseHander);\r\n        chart.current.on(\"mouseout\", autoPlayHandler);\r\n      }\r\n    }, [autoPlayHandler, mouseHander]);\r\n\r\n    return (\r\n      <div\r\n        className=\"cms-echarts\"\r\n        ref={dom}\r\n        style={{ width: \"100%\", height: \"100%\" }}\r\n      ></div>\r\n    );\r\n  },\r\n  (prevProps, nextProps) => {\r\n    if (JSON.stringify(prevProps) === JSON.stringify(nextProps)) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n);\r\n\r\nexport default Echarts;\r\n","import React, {\r\n  FC,\r\n  ReactNode,\r\n  useCallback,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\n\r\ninterface IPreviewLayout {\r\n  datas: IAnyObject;\r\n  /** 列 */\r\n  column: number;\r\n  /** 行 */\r\n  row: number;\r\n  /** 间隔 */\r\n  gap: number;\r\n  render: (data: IAnyObject) => ReactNode;\r\n}\r\n\r\nconst PreviewLayout: FC<IPreviewLayout> = ({\r\n  gap,\r\n  row,\r\n  column,\r\n  datas,\r\n  render,\r\n}) => {\r\n  // 宽高\r\n  const [clientRect, setClientRect] = useState({\r\n    width: 0,\r\n    height: 0,\r\n    x: 0,\r\n    y: 0,\r\n  });\r\n\r\n  // 目标元素\r\n  const target = useRef<HTMLDivElement>(null);\r\n\r\n  // 动态计算目标元素的宽高\r\n  const getClientRect = useCallback(() => {\r\n    if (!target.current) return;\r\n    const { width, height, x, y } = (\r\n      target.current as HTMLDivElement\r\n    )?.getBoundingClientRect();\r\n    setClientRect({\r\n      width: (width - (column - 1) * gap) / column,\r\n      height: (height - (row - 1) * gap) / row,\r\n      x: x,\r\n      y: y,\r\n    });\r\n  }, [column, gap, row]);\r\n  useEffect(() => {\r\n    getClientRect();\r\n    const resizeObserver = new ResizeObserver((entries) => {\r\n      if (!Array.isArray(entries) || !entries.length) {\r\n        return;\r\n      }\r\n      getClientRect();\r\n    });\r\n\r\n    resizeObserver.observe(target.current as HTMLDivElement);\r\n    return () => {\r\n      resizeObserver.disconnect();\r\n    };\r\n  }, [getClientRect]);\r\n\r\n  return (\r\n    <div\r\n      ref={target}\r\n      style={{\r\n        display: \"grid\",\r\n        gap: `${gap}px`,\r\n        gridTemplateColumns: `repeat(${column}, ${clientRect.width}px)`,\r\n        gridTemplateRows: `repeat(${row},  ${clientRect.height}px)`,\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n      }}\r\n    >\r\n      {datas.map((item: IAnyObject, index: number) => (\r\n        <div\r\n          key={index}\r\n          style={{\r\n            gridArea: `${item.y} / ${item.x} / ${item.y + item.row}/ ${\r\n              item.x + item.column\r\n            }`,\r\n          }}\r\n        >\r\n          {render(item)}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PreviewLayout;\r\n","import React, { FC, useCallback } from \"react\";\r\nimport { Modal, ModalProps } from \"antd\";\r\nimport { IWidget } from \"@src/service\";\r\nimport WidgetLayout from \"@src/layout/widgetLayout\";\r\nimport { getStyles, capitalizeFirstLetter } from \"@src/utils\";\r\nimport PreviewLayout from \"@src/compoents/dragdrop/previewLayout\";\r\nimport {\r\n  WIDGET_BODY_COLUMN,\r\n  WIDGET_BODY_GAP,\r\n  WIDGET_BODY_ROW,\r\n  WIDGET_HEADER_COLUMN,\r\n  WIDGET_HEADER_GAP,\r\n  WIDGET_HEADER_ROW,\r\n} from \"@src/core/enums/access.enums\";\r\nimport elements from \"@src/elements\";\r\n\r\ninterface IWidgetPreviewDialog extends ModalProps {\r\n  onClose: () => void;\r\n  data: IWidget;\r\n}\r\n\r\nconst WidgetPreviewDialog: FC<IWidgetPreviewDialog> = ({\r\n  open,\r\n  onClose,\r\n  height,\r\n  data,\r\n}) => {\r\n  const renderPreview = useCallback((data: IAnyObject) => {\r\n    if (data.element && elements[capitalizeFirstLetter(data.element)]) {\r\n      return React.createElement(\r\n        elements[capitalizeFirstLetter(data.element)],\r\n        {\r\n          options: data.configuration.configureValue,\r\n          data: data.configuration?.dataValue?.mock,\r\n          field: data.configuration?.dataValue?.field,\r\n        }\r\n      );\r\n    }\r\n    return <div>你访问的组件不存在请联系售后人员</div>;\r\n  }, []);\r\n  return (\r\n    <Modal\r\n      open={open}\r\n      onClose={onClose}\r\n      onCancel={onClose}\r\n      footer={null}\r\n      title={`微件预览`}\r\n      destroyOnClose\r\n      width={600}\r\n    >\r\n      <WidgetLayout\r\n        style={{\r\n          ...getStyles(data?.configuration?.configureValue || {}),\r\n          height: \"400px\",\r\n        }}\r\n        headerStyles={{\r\n          ...getStyles(\r\n            data?.configuration?.configureValue || {},\r\n            \"headerStyle\"\r\n          ),\r\n          display: data?.configuration?.configureValue?.headerShow\r\n            ? \"block\"\r\n            : \"none\",\r\n        }}\r\n        bodyStyles={getStyles(\r\n          data?.configuration?.configureValue || {},\r\n          \"bodyStyle\"\r\n        )}\r\n        header={\r\n          <PreviewLayout\r\n            datas={\r\n              data?.elements.filter((item) => item.position === \"header\") || []\r\n            }\r\n            column={WIDGET_HEADER_COLUMN}\r\n            row={WIDGET_HEADER_ROW}\r\n            gap={WIDGET_HEADER_GAP}\r\n            render={renderPreview}\r\n          ></PreviewLayout>\r\n        }\r\n        body={\r\n          <PreviewLayout\r\n            datas={\r\n              data?.elements.filter((item) => item.position === \"body\") || []\r\n            }\r\n            column={WIDGET_BODY_COLUMN}\r\n            row={WIDGET_BODY_ROW}\r\n            gap={WIDGET_BODY_GAP}\r\n            render={renderPreview}\r\n          ></PreviewLayout>\r\n        }\r\n      ></WidgetLayout>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default WidgetPreviewDialog;\r\n","import React, { memo, useMemo } from \"react\";\r\nimport Echarts from \"@src/compoents/echarts\";\r\nimport { getStyles, handleData, handleEchartsOption } from \"@src/utils\";\r\ninterface ILine {\r\n  options: IAnyObject;\r\n  data: any;\r\n  field: string;\r\n}\r\n\r\nconst Line = memo((props: ILine) => {\r\n  const { options, data, field } = props;\r\n  // 处理echarts数据\r\n  const getOption = useMemo(() => {\r\n    const configuration = handleEchartsOption(options);\r\n    const currentData = data && data[field] ? data[field] : [];\r\n    const { legendData, xAxisData, yAxisData, series } =\r\n      handleData(currentData);\r\n    return {\r\n      ...configuration,\r\n      legend: {\r\n        ...configuration.legend,\r\n        data: legendData,\r\n      },\r\n      xAxis: {\r\n        ...configuration.xAxis,\r\n        data: xAxisData,\r\n      },\r\n      yAxis: {\r\n        ...configuration.yAxis,\r\n        data: yAxisData,\r\n      },\r\n      series: series\r\n        ? series.map((item) => ({\r\n            ...configuration.line.series,\r\n            ...item,\r\n          }))\r\n        : [],\r\n    };\r\n  }, [data, field, options]);\r\n  console.log(getOption, \"getOption\");\r\n  const style = useMemo(() => {\r\n    return getStyles(options);\r\n  }, [options]);\r\n  return (\r\n    <div style={{ ...style, width: \"100%\", height: \"100%\" }}>\r\n      <Echarts option={getOption} />\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Line;\r\n","import React, { memo, useMemo } from \"react\";\r\nimport Echarts from \"@src/compoents/echarts\";\r\nimport { getStyles, handleData, handleEchartsOption } from \"@src/utils\";\r\nimport * as echarts from \"echarts\";\r\nimport tinycolor from \"tinycolor2\";\r\ninterface IBar {\r\n  options: IAnyObject;\r\n  data: any;\r\n  field: string;\r\n}\r\n\r\nconst Bar = memo((props: IBar) => {\r\n  const { options, data, field } = props;\r\n  // 处理echarts数据\r\n  const getOption = useMemo(() => {\r\n    const configuration = handleEchartsOption(options);\r\n    const currentData = data && data[field] ? data[field] : [];\r\n    const { legendData, xAxisData, yAxisData, series } =\r\n      handleData(currentData);\r\n    // 当前系列颜色\r\n    const currentColor = (index: number) => {\r\n      return configuration.color[index % (configuration.color.length - 1)];\r\n    };\r\n\r\n    return {\r\n      ...configuration,\r\n      legend: {\r\n        ...configuration.legend,\r\n        data: legendData,\r\n      },\r\n      xAxis: {\r\n        ...configuration.xAxis,\r\n        data: xAxisData,\r\n      },\r\n      yAxis: {\r\n        ...configuration.yAxis,\r\n        data: yAxisData,\r\n      },\r\n      series: series\r\n        ? series.map((item, index) => ({\r\n            ...configuration.bar.series,\r\n            ...item,\r\n            itemStyle: {\r\n              borderRadius: options?.barBorderRadius || 0,\r\n              color: !options.barGradation\r\n                ? currentColor(index)\r\n                : new echarts.graphic.LinearGradient(\r\n                    0,\r\n                    0,\r\n                    options.barOrient === \"vertical\" ? 1 : 0,\r\n                    options.barOrient === \"vertical\" ? 0 : 1,\r\n                    [\r\n                      {\r\n                        offset: 0,\r\n                        color: tinycolor(currentColor(index))\r\n                          .lighten(15)\r\n                          .toString(),\r\n                      },\r\n                      {\r\n                        offset: 0.5,\r\n                        color: currentColor(index),\r\n                      },\r\n                      {\r\n                        offset: 1,\r\n                        color: tinycolor(currentColor(index))\r\n                          .darken(15)\r\n                          .toString(),\r\n                      },\r\n                    ]\r\n                  ),\r\n            },\r\n          }))\r\n        : [],\r\n    };\r\n  }, [data, field, options]);\r\n  const style = useMemo(() => {\r\n    return getStyles(options);\r\n  }, [options]);\r\n  return (\r\n    <div style={{ ...style, width: \"100%\", height: \"100%\" }}>\r\n      <Echarts option={getOption} />\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Bar;\r\n","import React, { memo, useMemo } from \"react\";\r\nimport Echarts from \"@src/compoents/echarts\";\r\nimport { getStyles, handleData, handleEchartsOption } from \"@src/utils\";\r\ninterface IPie {\r\n  options: IAnyObject;\r\n  data: any;\r\n  field: string;\r\n}\r\n\r\nconst Pie = memo((props: IPie) => {\r\n  const { options, data, field } = props;\r\n  // 处理echarts数据\r\n  const getOption = useMemo(() => {\r\n    const configuration = handleEchartsOption(options);\r\n    const currentData = data && data[field] ? data[field] : [];\r\n    const { legendData, xAxisData, yAxisData, series } = handleData(\r\n      currentData,\r\n      \"pie\"\r\n    );\r\n    return {\r\n      ...configuration,\r\n      tooltip: {\r\n        trigger: \"item\",\r\n      },\r\n      legend: {\r\n        ...configuration.legend,\r\n        data: legendData,\r\n        formatter: function (name: string) {\r\n          const isOnlyOne = data.series.length === 1;\r\n          let arr = [\"{a|\" + name + \"}\"];\r\n          if (isOnlyOne && options.legendTotal) {\r\n            // 添加\r\n            let total = 0;\r\n            let target = 0;\r\n            for (let i = 0; i < data.series[0].data.length; i++) {\r\n              total += data.series[0].data[i].value;\r\n              if (data.series[0].data[i].name === name) {\r\n                target = data.series[0].data[i].value;\r\n              }\r\n            }\r\n            arr.push(\"{b|\" + ((target / total) * 100).toFixed(2) + \"%}\");\r\n          }\r\n\r\n          return arr.join(\"  \");\r\n        },\r\n        textStyle: {\r\n          // 添加\r\n          padding: [8, 0, 0, 0],\r\n          rich: {\r\n            a: {\r\n              fontSize: 14,\r\n              width: 80,\r\n              color: \"#fff\",\r\n            },\r\n            b: {\r\n              fontSize: 14,\r\n              width: 70,\r\n              align: \"right\",\r\n              color: \"#fff\",\r\n            },\r\n          },\r\n        },\r\n      },\r\n      xAxis: {\r\n        ...configuration.xAxis,\r\n        data: xAxisData,\r\n      },\r\n      yAxis: {\r\n        ...configuration.yAxis,\r\n        data: yAxisData,\r\n      },\r\n      series: series\r\n        ? series.map((item, index) => ({\r\n            ...configuration.pie.series,\r\n            ...item,\r\n            data: currentData[index].data,\r\n            itemStyle: {\r\n              borderWidth: options.seriesItemStyleColorBorderWidth,\r\n              borderColor: options.seriesItemStyleBorderColor,\r\n              borderRadius: options.seriesItemStyleColorBorderRadius,\r\n            },\r\n            center: [\r\n              `${options.seriesHorizontalPosition}%`,\r\n              `${options.seriesVerticalPosition}%`,\r\n            ],\r\n            emphasis: {\r\n              scaleSize: options.emphasisScaleSize,\r\n              label: {\r\n                show: true,\r\n                fontSize: options.emphasisLabelFontSize,\r\n                fontWeight: options.emphasisLabelFontWeight,\r\n                color: options.emphasisLabelColor,\r\n              },\r\n              itemStyle: {\r\n                shadowBlur: options.emphasisStyleShadowBlur,\r\n                shadowOffsetX: options.emphasisStyleShadowOffsetX,\r\n                shadowOffsetY: options.emphasisStyleShadowOffsetY,\r\n                shadowColor: options.emphasisStyleShadowColor,\r\n              },\r\n            },\r\n          }))\r\n        : [],\r\n    };\r\n  }, [data, field, options]);\r\n\r\n  console.log(getOption, \"getOption\");\r\n  const style = useMemo(() => {\r\n    return getStyles(options);\r\n  }, [options]);\r\n  return (\r\n    <div style={{ ...style, width: \"100%\", height: \"100%\" }}>\r\n      <Echarts option={getOption} />\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Pie;\r\n","import React, { FC, useMemo } from \"react\";\r\nimport { Image } from \"antd\";\r\nimport { getStyles } from \"@src/utils\";\r\nimport \"./index.scss\";\r\ninterface IBaseImage {\r\n  data: any;\r\n  field: string;\r\n  options: any;\r\n}\r\nexport const BaseImage: FC<IBaseImage> = ({ data, field, options }) => {\r\n  const baseTextStyle = useMemo(() => {\r\n    return getStyles(options);\r\n  }, [options]);\r\n  return (\r\n    <div className=\"cms-base-image\" style={baseTextStyle}>\r\n      <Image\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        src={\r\n          data && data[field]\r\n            ? data[field]\r\n            : \"https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png\"\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BaseImage;\r\n","import React, { FC, ReactNode, useEffect, useMemo, useRef } from \"react\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport { Autoplay, Pagination, Navigation } from \"swiper/modules\";\r\n\r\nimport \"swiper/css\";\r\nimport \"swiper/css/pagination\";\r\nimport \"swiper/css/navigation\";\r\nimport \"./index.scss\";\r\nimport { SwiperModule } from \"swiper/types\";\r\ninterface ICustomSwiper {\r\n  direction?: \"vertical\" | \"horizontal\";\r\n  datas?: IAnyObject[];\r\n  loop?: boolean;\r\n  spaceBetween?: number;\r\n  slidesPerView?: number;\r\n  rows?: number;\r\n  pagination?: boolean;\r\n  navigation?: boolean;\r\n  autoplay?: boolean;\r\n  render?: (item: IAnyObject, index?: number) => ReactNode;\r\n}\r\nexport const CustomSwiper: FC<ICustomSwiper> = ({\r\n  loop = false,\r\n  spaceBetween = 0,\r\n  slidesPerView = 1,\r\n  rows = 1,\r\n  pagination = false,\r\n  navigation = false,\r\n  autoplay = false,\r\n  datas = [],\r\n  direction = \"horizontal\",\r\n  render,\r\n}) => {\r\n  const modules = useMemo(() => {\r\n    let arr: SwiperModule[] = [];\r\n    autoplay && arr.push(Autoplay);\r\n    pagination && arr.push(Pagination);\r\n    navigation && arr.push(Navigation);\r\n    return arr;\r\n  }, [autoplay, navigation, pagination]);\r\n\r\n  const swiperRef = useRef<any>(null);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      if (autoplay) {\r\n        swiperRef.current?.swiper?.autoplay?.start();\r\n      } else {\r\n        swiperRef.current?.swiper?.autoplay?.stop();\r\n      }\r\n    }, 100);\r\n  }, [autoplay]);\r\n  return (\r\n    <div className=\"cms-swiper\">\r\n      <Swiper\r\n        ref={swiperRef}\r\n        loop={loop}\r\n        spaceBetween={spaceBetween}\r\n        slidesPerView={slidesPerView}\r\n        modules={modules}\r\n        navigation={navigation}\r\n        pagination={pagination}\r\n        direction={direction}\r\n      >\r\n        {new Array(Math.ceil(datas.length / rows))\r\n          .fill(null)\r\n          .map((_, index) => (\r\n            <SwiperSlide key={index}>\r\n              {new Array(rows).fill(null).map((_, subIndex) => (\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    height: `${100 / rows}%`,\r\n                    marginTop: `${spaceBetween}px`,\r\n                  }}\r\n                  key={subIndex}\r\n                >\r\n                  {render &&\r\n                    index * rows + subIndex < datas.length &&\r\n                    render(\r\n                      datas?.[index * rows + subIndex],\r\n                      index * rows + subIndex\r\n                    )}\r\n                </div>\r\n              ))}\r\n            </SwiperSlide>\r\n          ))}\r\n      </Swiper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomSwiper;\r\n","import { BaseText, CountUp, MessageText, DateText } from \"./text\";\r\nimport Line from \"./line\";\r\nimport Bar from \"./bar\";\r\nimport Pie from \"./pie\";\r\nimport { BaseImage, BaseBanner } from \"./image\";\r\nimport Table from \"./table\";\r\n\r\nconst elements: any = {\r\n  BaseText,\r\n  Line,\r\n  Bar,\r\n  CountUp,\r\n  Pie,\r\n  MessageText,\r\n  BaseImage,\r\n  BaseBanner,\r\n  DateText,\r\n  Table,\r\n};\r\nexport default elements;\r\n","import { getStyles } from \"@src/utils\";\r\nimport React, { FC, useMemo } from \"react\";\r\nimport \"./index.scss\";\r\n\r\ninterface IBaseText {\r\n  data: any;\r\n  field: string;\r\n  options: any;\r\n}\r\n// 基础文本框\r\nexport const BaseText: FC<IBaseText> = ({ data, field, options }) => {\r\n  const baseTextStyle = useMemo(() => {\r\n    return getStyles(options);\r\n  }, [options]);\r\n  const iconStyle = useMemo(() => {\r\n    return getStyles(options, \"iconStyle\");\r\n  }, [options]);\r\n  return (\r\n    <div className=\"cms-base-text\" style={baseTextStyle}>\r\n      {options.iconStyleSelect ? (\r\n        <span\r\n          className=\"cms-icon\"\r\n          style={iconStyle}\r\n          dangerouslySetInnerHTML={{ __html: options.iconStyleSelect }}\r\n        ></span>\r\n      ) : null}\r\n\r\n      {data && data[field] ? data[field] : \"文本框\"}\r\n    </div>\r\n  );\r\n};\r\n","import { getStyles } from \"@src/utils\";\r\nimport React, { FC, useCallback, useEffect, useMemo, useRef } from \"react\";\r\nimport \"./index.scss\";\r\ninterface ICountup {\r\n  data: any;\r\n  field: string;\r\n  options: any;\r\n}\r\n\r\nexport const CountUp: FC<ICountup> = ({ data, field, options }) => {\r\n  const countupRef = useRef<HTMLDivElement>(null);\r\n  const countUpAnimRef = useRef<any>(null);\r\n\r\n  const style = useMemo(() => {\r\n    return getStyles(options);\r\n  }, [options]);\r\n\r\n  const countUpTextStyle = useMemo(() => {\r\n    return getStyles(options, \"countUpStyle\");\r\n  }, [options]);\r\n\r\n  const addonBeforeTextStyle = useMemo(() => {\r\n    return getStyles(options, \"addonBeforeStyle\");\r\n  }, [options]);\r\n\r\n  const addonAfterTextStyle = useMemo(() => {\r\n    return getStyles(options, \"addonAfterStyle\");\r\n  }, [options]);\r\n\r\n  const initCountUp = useCallback(async () => {\r\n    const countUpModule = await import(\"countup.js\");\r\n    countUpAnimRef.current = new countUpModule.CountUp(\r\n      countupRef.current as HTMLDivElement,\r\n      data[field],\r\n      {\r\n        decimalPlaces: 2,\r\n      }\r\n    );\r\n    if (!countUpAnimRef.current.error) {\r\n      countUpAnimRef.current.start();\r\n    } else {\r\n      console.error(countUpAnimRef.current.error);\r\n    }\r\n  }, [data, field]);\r\n  useEffect(() => {\r\n    initCountUp();\r\n    return () => {\r\n      countUpAnimRef.current = null;\r\n    };\r\n  }, [initCountUp]);\r\n  return (\r\n    <div className=\"cms-countUp\" style={style}>\r\n      {options.addonBefore && (\r\n        <div className=\"cms-countUp__before\" style={addonBeforeTextStyle}>\r\n          {options.addonBefore}\r\n        </div>\r\n      )}\r\n      <div\r\n        className=\"cms-countUp__content\"\r\n        ref={countupRef}\r\n        style={countUpTextStyle}\r\n      ></div>\r\n      {options.addonAfter && (\r\n        <div className=\"cms-countUp__aftter\" style={addonAfterTextStyle}>\r\n          {options.addonAfter}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import { getStyles } from \"@src/utils\";\r\nimport React, { FC, useMemo } from \"react\";\r\nimport Marquee from \"react-fast-marquee\";\r\nimport \"./index.scss\";\r\n\r\ninterface IMessageText {\r\n  data: any;\r\n  field: string;\r\n  options: any;\r\n}\r\n\r\nexport const MessageText: FC<IMessageText> = ({ data, field, options }) => {\r\n  const baseTextStyle = useMemo(() => {\r\n    return getStyles(options);\r\n  }, [options]);\r\n  const iconStyle = useMemo(() => {\r\n    return getStyles(options, \"iconStyle\");\r\n  }, [options]);\r\n  return (\r\n    <div className=\"cms-message-text\" style={baseTextStyle}>\r\n      <span className=\"cms-icon\" style={iconStyle}>\r\n        &#xe787;\r\n      </span>\r\n      <Marquee pauseOnHover gradient={false}>\r\n        {data && data[field]\r\n          ? data[field]\r\n          : \"I can be a React component, multiple React components, or just some text.\"}\r\n      </Marquee>\r\n    </div>\r\n  );\r\n};\r\n","import React, { memo, useMemo } from \"react\";\r\nimport CustomSwiper from \"@src/compoents/swiper\";\r\nimport \"./index.scss\";\r\nimport { getStyles } from \"@src/utils\";\r\ninterface IBaseBanner {\r\n  data: any;\r\n  field: string;\r\n  options: any;\r\n}\r\nexport const BaseBanner = memo((option: IBaseBanner) => {\r\n  const { data, field, options } = option;\r\n  const baseTextStyle = useMemo(() => {\r\n    return getStyles(options);\r\n  }, [options]);\r\n  return (\r\n    <div className=\"cms-banner\" style={baseTextStyle}>\r\n      <CustomSwiper\r\n        loop={options.loop || false}\r\n        autoplay={options.autoplay || false}\r\n        datas={data[field] || []}\r\n        rows={options.rows || 1}\r\n        slidesPerView={options.slidesPerView || 1}\r\n        spaceBetween={options.spaceBetween || 0}\r\n        pagination={options.pagination || false}\r\n        navigation={options.navigation || false}\r\n        render={(item) => {\r\n          return (\r\n            <img src={item.src} alt={item.name} width=\"100%\" height=\"100%\" />\r\n          );\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n});\r\n","import React, { FC, useCallback, useEffect, useRef, useState } from \"react\";\r\nimport { fmtDate, getStyles } from \"@src/utils\";\r\n\r\ninterface IDateText {\r\n  options: IAnyObject;\r\n}\r\n\r\nexport const DateText: FC<IDateText> = ({ options }) => {\r\n  const timer = useRef<any>(null);\r\n  // 初始化时间\r\n  const [text, setText] = useState(() => {\r\n    return fmtDate(new Date().getTime(), \"yyyy-MM-dd hh:mm:ss\");\r\n  });\r\n  // 获取时间\r\n  const getText = useCallback(() => {\r\n    setText(\r\n      fmtDate(new Date().getTime(), options.fmtDate || \"yyyy-MM-dd hh:mm:ss\")\r\n    );\r\n  }, [options.fmtDate]);\r\n\r\n  useEffect(() => {\r\n    timer.current = setInterval(getText, 1000);\r\n    return () => {\r\n      clearInterval(timer.current);\r\n    };\r\n  }, [timer, getText]);\r\n  return <div style={getStyles(options)}>{text}</div>;\r\n};\r\n","import React, { memo, useMemo } from \"react\";\r\nimport CustomSwiper from \"@src/compoents/swiper\";\r\nimport \"./index.scss\";\r\nimport { getStyles } from \"@src/utils\";\r\ninterface IBaseBanner {\r\n  data: any;\r\n  field: string;\r\n  options: any;\r\n}\r\n\r\nconst Table = memo((props: IBaseBanner) => {\r\n  const { data, field, options } = props;\r\n  const baseTextStyle = useMemo(() => {\r\n    return getStyles(options);\r\n  }, [options]);\r\n\r\n  const datas = useMemo(() => {\r\n    // 这里主要处理隔行换色\r\n    if (\r\n      data[field] &&\r\n      data[field].length > options.slidesPerView &&\r\n      data[field].length % 2 === 1\r\n    ) {\r\n      return [...data[field], ...data[field]];\r\n    } else {\r\n      return data[field];\r\n    }\r\n  }, [data, field, options.slidesPerView]);\r\n\r\n  const renderItem = (data: any, components: string) => {\r\n    switch (components) {\r\n      case \"progress\": {\r\n        return (\r\n          <div\r\n            className=\"cms-table__progress\"\r\n            style={{ background: options.progressBackgroundColor }}\r\n          >\r\n            <div\r\n              style={{\r\n                width: data,\r\n                background: options.progressForegroundColor,\r\n              }}\r\n            ></div>\r\n          </div>\r\n        );\r\n      }\r\n      default: {\r\n        return <>{data}</>;\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"cms-table\" style={baseTextStyle}>\r\n      <div\r\n        className=\"cms-table__header\"\r\n        style={{\r\n          background: options.tableHeaderBackgroudColor,\r\n          color: options.tableHeaderColor,\r\n          display: options.tableShowHeader ? \"flex\" : \"none\",\r\n        }}\r\n      >\r\n        {options.tableColumn.map((item: any, index: number) => (\r\n          <div\r\n            key={index}\r\n            className=\"cms-table__cell\"\r\n            style={{\r\n              width: `${item.width}px`,\r\n              flex: item.width ? \"none\" : 1,\r\n              justifyContent: item.align === \"right\" ? \"end\" : \"start\",\r\n            }}\r\n          >\r\n            {item.title}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div\r\n        className=\"cms-table__body\"\r\n        style={{ color: options.tableTbodyColor }}\r\n      >\r\n        <CustomSwiper\r\n          loop={options.loop || false}\r\n          autoplay={options.autoplay || false}\r\n          datas={datas}\r\n          rows={options.rows || 1}\r\n          slidesPerView={options.slidesPerView || 1}\r\n          spaceBetween={options.spaceBetween || 0}\r\n          direction=\"vertical\"\r\n          render={(item, index) => {\r\n            return (\r\n              <div\r\n                key={index}\r\n                className=\"cms-table__row\"\r\n                style={\r\n                  (index as number) % 2 === 0\r\n                    ? getStyles(options, \"tableTbodyOdd\")\r\n                    : getStyles(options, \"tableTbodyEven\")\r\n                }\r\n              >\r\n                {options.tableColumn.map((subItem: any, subIndex: number) => (\r\n                  <div\r\n                    key={subIndex}\r\n                    className=\"cms-table__cell\"\r\n                    style={{\r\n                      width: `${subItem.width}px`,\r\n                      flex: subItem.width ? \"none\" : 1,\r\n                      justifyContent:\r\n                        subItem.align === \"right\" ? \"end\" : \"start\",\r\n                    }}\r\n                  >\r\n                    {subItem.dataIndex === \"index\" ? (\r\n                      <span\r\n                        className={`cms-table__serialNumber ${\r\n                          options.serialNumberRank ? \"is-\" + index : \"\"\r\n                        }`}\r\n                        style={getStyles(options, \"serialNumber\")}\r\n                      >\r\n                        {(index as number) + 1}\r\n                      </span>\r\n                    ) : (\r\n                      renderItem(item[subItem.dataIndex], subItem.components)\r\n                    )}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            );\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Table;\r\n","import React, { FC, HtmlHTMLAttributes, ReactNode } from \"react\";\r\nimport \"./index.scss\";\r\ninterface IWidgetLayout extends HtmlHTMLAttributes<HTMLDivElement> {\r\n  header: ReactNode;\r\n  body: ReactNode;\r\n  headerStyles: IAnyObject;\r\n  bodyStyles: IAnyObject;\r\n}\r\n\r\nconst WidgetLayout: FC<IWidgetLayout> = ({\r\n  header,\r\n  body,\r\n  style,\r\n  headerStyles,\r\n  bodyStyles,\r\n}) => {\r\n  return (\r\n    <div className=\"cms-widget\" style={style}>\r\n      <div className=\"cms-widget__header\" style={headerStyles}>\r\n        {header}\r\n      </div>\r\n      <div className=\"cms-widget__body\" style={bodyStyles}>\r\n        {body}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WidgetLayout;\r\n"],"names":["echarts","data","memo","props","theme","group","initOptions","option","updateOptions","loading","loadingOptions","autoresize","dom","useRef","chart","timmer","currentIndex","autoPlayHandler","useCallback","series","length","current","clearInterval","setInterval","_","_chart$current","_chart$current2","_chart$current3","dataLen","dispatchAction","type","seriesIndex","dataIndex","mouseHander","e","_chart$current4","_chart$current5","init","initChart","showLoading","hideLoading","setOption","tooltip","trigger","backgroundColor","borderColor","padding","textStyle","color","fontSize","cleanup","off","dispose","undefined","useEffect","onResize","resizeObserver","ResizeObserver","entries","callback","_chart$current6","Array","isArray","resize","observe","disconnect","on","React","className","ref","style","width","height","prevProps","nextProps","JSON","stringify","_ref","gap","row","column","datas","render","clientRect","setClientRect","useState","x","y","target","getClientRect","_target$current","getBoundingClientRect","display","gridTemplateColumns","gridTemplateRows","map","item","index","key","gridArea","_data$configuration3","_data$configuration4","_data$configuration5","_data$configuration5$","_data$configuration6","open","onClose","renderPreview","_data$configuration","_data$configuration$d","_data$configuration2","_data$configuration2$","element","elements","capitalizeFirstLetter","options","configuration","configureValue","dataValue","mock","field","Modal","onCancel","footer","title","destroyOnClose","WidgetLayout","getStyles","headerStyles","headerShow","bodyStyles","header","PreviewLayout","filter","position","WIDGET_HEADER_COLUMN","WIDGET_HEADER_ROW","WIDGET_HEADER_GAP","body","WIDGET_BODY_COLUMN","WIDGET_BODY_ROW","WIDGET_BODY_GAP","getOption","useMemo","handleEchartsOption","currentData","legendData","xAxisData","yAxisData","handleData","legend","xAxis","yAxis","line","Echarts","currentColor","bar","itemStyle","borderRadius","barBorderRadius","barGradation","barOrient","offset","tinycolor","lighten","toString","darken","formatter","name","arr","legendTotal","total","i","value","push","toFixed","join","rich","a","b","align","pie","borderWidth","seriesItemStyleColorBorderWidth","seriesItemStyleBorderColor","seriesItemStyleColorBorderRadius","center","seriesHorizontalPosition","seriesVerticalPosition","emphasis","scaleSize","emphasisScaleSize","label","show","emphasisLabelFontSize","fontWeight","emphasisLabelFontWeight","emphasisLabelColor","shadowBlur","emphasisStyleShadowBlur","shadowOffsetX","emphasisStyleShadowOffsetX","shadowOffsetY","emphasisStyleShadowOffsetY","shadowColor","emphasisStyleShadowColor","BaseImage","baseTextStyle","Image","src","loop","spaceBetween","slidesPerView","rows","pagination","navigation","autoplay","direction","modules","Autoplay","Pagination","Navigation","swiperRef","setTimeout","_swiperRef$current","_swiperRef$current$sw","_swiperRef$current$sw2","_swiperRef$current2","_swiperRef$current2$s","_swiperRef$current2$s2","swiper","start","stop","Swiper","Math","ceil","fill","SwiperSlide","subIndex","alignItems","marginTop","BaseText","iconStyle","iconStyleSelect","dangerouslySetInnerHTML","__html","Line","Bar","CountUp","countupRef","countUpAnimRef","countUpTextStyle","addonBeforeTextStyle","addonAfterTextStyle","initCountUp","async","countUpModule","decimalPlaces","error","addonBefore","addonAfter","Pie","MessageText","Marquee","pauseOnHover","gradient","BaseBanner","CustomSwiper","alt","DateText","timer","text","setText","fmtDate","Date","getTime","getText","Table","background","tableHeaderBackgroudColor","tableHeaderColor","tableShowHeader","tableColumn","flex","justifyContent","tableTbodyColor","subItem","serialNumberRank","renderItem","components","progressBackgroundColor","progressForegroundColor"],"sourceRoot":""}