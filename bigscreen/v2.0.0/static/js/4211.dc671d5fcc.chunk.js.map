{"version":3,"file":"static/js/4211.dc671d5fcc.chunk.js","mappings":"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","sources":["webpack://large-screen-configuration/./src/compoents/widgetPreviewDialog/index.tsx","webpack://large-screen-configuration/./src/pages/widgets/index.tsx"],"sourcesContent":["import React, { FC, useCallback } from \"react\";\r\nimport { Modal, ModalProps } from \"antd\";\r\nimport { IElement, IWidget } from \"@src/service\";\r\nimport PreviewLayout from \"@src/layout/previewLayout\";\r\nimport { capitalizeFirstLetter } from \"@src/utils\";\r\nimport {\r\n  WIDGET_BODY_COLUMN,\r\n  WIDGET_BODY_GAP,\r\n  WIDGET_BODY_ROW,\r\n  WIDGET_HEADER_COLUMN,\r\n  WIDGET_HEADER_GAP,\r\n  WIDGET_HEADER_ROW,\r\n} from \"@src/core/enums/access.enums\";\r\nimport elements from \"@src/elements\";\r\nimport GridLayout from \"@src/layout/gridLayout\";\r\n\r\ninterface IWidgetPreviewDialog extends ModalProps {\r\n  onClose: () => void;\r\n  data: IWidget;\r\n}\r\n\r\nconst WidgetPreviewDialog: FC<IWidgetPreviewDialog> = ({\r\n  open,\r\n  onClose,\r\n  data,\r\n}) => {\r\n  const renderPreview = useCallback((data: IAnyObject) => {\r\n    if (data.element && elements[capitalizeFirstLetter(data.element)]) {\r\n      return React.createElement(\r\n        elements[capitalizeFirstLetter(data.element)],\r\n        {\r\n          options: data.configuration.configureValue,\r\n          data: data.configuration?.dataValue?.mock,\r\n          field: data.configuration?.dataValue?.field,\r\n        }\r\n      );\r\n    }\r\n    return <div>你访问的组件不存在请联系售后人员</div>;\r\n  }, []);\r\n  return (\r\n    <Modal\r\n      open={open}\r\n      onClose={onClose}\r\n      onCancel={onClose}\r\n      footer={null}\r\n      title={`微件预览`}\r\n      destroyOnClose\r\n      width={\r\n        data?.configuration?.configureValue?.widgetConfigWidth\r\n          ? data?.configuration?.configureValue?.widgetConfigWidth + 30\r\n          : 630\r\n      }\r\n    >\r\n      <PreviewLayout\r\n        data={data}\r\n        style={{\r\n          width: `${\r\n            data?.configuration?.configureValue?.widgetConfigWidth || 600\r\n          }px`,\r\n          height: `${\r\n            data?.configuration?.configureValue?.widgetConfigHeight || 400\r\n          }px`,\r\n        }}\r\n        header={\r\n          <GridLayout\r\n            datas={\r\n              data?.elements.filter(\r\n                (item: IElement) => item.position === \"header\"\r\n              ) || []\r\n            }\r\n            isDroppable={false}\r\n            isResizable={false}\r\n            column={WIDGET_HEADER_COLUMN}\r\n            row={WIDGET_HEADER_ROW}\r\n            gap={WIDGET_HEADER_GAP}\r\n            render={renderPreview}\r\n            staticed\r\n          />\r\n        }\r\n        body={\r\n          <GridLayout\r\n            datas={\r\n              data?.elements.filter(\r\n                (item: IElement) => item.position === \"body\"\r\n              ) || []\r\n            }\r\n            isDroppable={false}\r\n            isResizable={false}\r\n            column={WIDGET_BODY_COLUMN}\r\n            row={WIDGET_BODY_ROW}\r\n            gap={WIDGET_BODY_GAP}\r\n            render={renderPreview}\r\n            staticed\r\n          />\r\n        }\r\n      />\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default WidgetPreviewDialog;\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport type { ActionType, ProColumns } from \"@ant-design/pro-components\";\r\nimport { ProTable } from \"@ant-design/pro-components\";\r\nimport React, { useRef, FC, useEffect, useState } from \"react\";\r\nimport { IWidget } from \"@src/service\";\r\nimport \"./index.scss\";\r\nimport { Button } from \"antd\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { widgets } from \"@src/core/hook\";\r\nimport WidgetPreviewDialog from \"@src/compoents/widgetPreviewDialog\";\r\n\r\nexport const waitTimePromise = async (time: number = 100) => {\r\n  return new Promise((resolve) => {\r\n    setTimeout(() => {\r\n      resolve(true);\r\n    }, time);\r\n  });\r\n};\r\n\r\nexport const waitTime = async (time: number = 100) => {\r\n  await waitTimePromise(time);\r\n};\r\n\r\nconst Widgets: FC<any> = () => {\r\n  const actionRef = useRef<ActionType>();\r\n  const navigate = useNavigate();\r\n\r\n  const [show, setShow] = useState(false);\r\n  const [widget, setWidget] = useState<IWidget>();\r\n\r\n  const { filterWidgetsList, getWidgets, filterHandle } = widgets();\r\n\r\n  useEffect(() => {\r\n    getWidgets();\r\n  }, [getWidgets]);\r\n\r\n  const columns: ProColumns<IWidget>[] = [\r\n    {\r\n      title: \"名称\",\r\n      dataIndex: \"name\",\r\n      width: 250,\r\n    },\r\n    {\r\n      title: \"图片\",\r\n      dataIndex: \"url\",\r\n      search: false,\r\n      render: (text, record, _, action) => {\r\n        return <img src={text as string} alt=\"\" width={150} />;\r\n      },\r\n    },\r\n    {\r\n      title: \"类型\",\r\n      dataIndex: \"type\",\r\n      onFilter: true,\r\n      ellipsis: true,\r\n      valueType: \"select\",\r\n      width: 100,\r\n      valueEnum: {\r\n        all: { text: \"全部\", status: \"\" },\r\n        text: {\r\n          text: \"文本\",\r\n          status: \"text\",\r\n        },\r\n        image: {\r\n          text: \"图片\",\r\n          status: \"image\",\r\n        },\r\n        table: {\r\n          text: \"表格\",\r\n          status: \"table\",\r\n        },\r\n        line: {\r\n          text: \"折线图\",\r\n          status: \"line\",\r\n        },\r\n        bar: {\r\n          text: \"柱状图\",\r\n          status: \"bar\",\r\n        },\r\n        pie: {\r\n          text: \"饼图\",\r\n          status: \"pie\",\r\n        },\r\n      },\r\n    },\r\n    {\r\n      title: \"使用次数\",\r\n      dataIndex: \"count\",\r\n      search: false,\r\n      width: 100,\r\n    },\r\n    {\r\n      title: \"创建时间\",\r\n      dataIndex: \"createTime\",\r\n      valueType: \"date\",\r\n      hideInSearch: true,\r\n      width: 150,\r\n    },\r\n    {\r\n      title: \"创建时间\",\r\n      dataIndex: \"createTime\",\r\n      valueType: \"dateRange\",\r\n      hideInTable: true,\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      valueType: \"option\",\r\n      key: \"option\",\r\n      width: 120,\r\n      render: (text, record, _, action) => (\r\n        <div className=\"option\">\r\n          <span\r\n            key=\"view\"\r\n            onClick={() => {\r\n              setShow(true);\r\n              setWidget(record);\r\n            }}\r\n          >\r\n            预览\r\n          </span>\r\n          {record.count === 0 ? (\r\n            <>\r\n              <span\r\n                key=\"editable\"\r\n                onClick={() => {\r\n                  navigate(\r\n                    `/widgets/configuration?widgetId=${record.widgetId}`\r\n                  );\r\n                }}\r\n              >\r\n                编辑\r\n              </span>\r\n              <span key=\"delete\">删除</span>\r\n            </>\r\n          ) : null}\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"cms-widgets\">\r\n      <ProTable<IWidget>\r\n        columns={columns}\r\n        actionRef={actionRef}\r\n        // request={async (params) => {\r\n        //   await waitTime(2000);\r\n        //   return API.widgetsService.widgets({ params }).then((res) => {\r\n        //     console.log(res, \"res\");\r\n        //     return res;\r\n        //   });\r\n        // }}\r\n        rowKey=\"widgetId\"\r\n        dataSource={filterWidgetsList}\r\n        onSubmit={filterHandle}\r\n        onReset={filterHandle}\r\n        options={{\r\n          setting: {\r\n            listsHeight: 400,\r\n          },\r\n        }}\r\n        pagination={{\r\n          pageSize: 20,\r\n          onChange: (page) => console.log(page),\r\n        }}\r\n        dateFormatter=\"string\"\r\n        headerTitle=\"微件列表\"\r\n        toolBarRender={() => [\r\n          <Button\r\n            key=\"button\"\r\n            icon={<PlusOutlined />}\r\n            onClick={() => navigate(\"/widgets/configuration\")}\r\n            type=\"primary\"\r\n          >\r\n            新建\r\n          </Button>,\r\n        ]}\r\n      />\r\n      <WidgetPreviewDialog\r\n        open={show}\r\n        onClose={() => setShow(false)}\r\n        data={widget as IWidget}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Widgets;\r\n"],"names":["_ref","_data$configuration3","_data$configuration3$","_data$configuration4","_data$configuration4$","_data$configuration5","_data$configuration5$","_data$configuration6","_data$configuration6$","open","onClose","data","renderPreview","useCallback","_data$configuration","_data$configuration$d","_data$configuration2","_data$configuration2$","element","elements","capitalizeFirstLetter","React","options","configuration","configureValue","dataValue","mock","field","Modal","onCancel","footer","title","destroyOnClose","width","widgetConfigWidth","PreviewLayout","style","height","widgetConfigHeight","header","GridLayout","datas","filter","item","position","isDroppable","isResizable","column","WIDGET_HEADER_COLUMN","row","WIDGET_HEADER_ROW","gap","WIDGET_HEADER_GAP","render","staticed","body","WIDGET_BODY_COLUMN","WIDGET_BODY_ROW","WIDGET_BODY_GAP","waitTimePromise","async","time","arguments","length","undefined","Promise","resolve","setTimeout","waitTime","Widgets","actionRef","useRef","navigate","useNavigate","show","setShow","useState","widget","setWidget","filterWidgetsList","getWidgets","filterHandle","widgets","useEffect","columns","dataIndex","search","text","record","_","action","src","alt","onFilter","ellipsis","valueType","valueEnum","all","status","image","table","line","bar","pie","hideInSearch","hideInTable","key","className","onClick","count","widgetId","ProTable","rowKey","dataSource","onSubmit","onReset","setting","listsHeight","pagination","pageSize","onChange","page","dateFormatter","headerTitle","toolBarRender","Button","icon","PlusOutlined","type","WidgetPreviewDialog"],"sourceRoot":""}