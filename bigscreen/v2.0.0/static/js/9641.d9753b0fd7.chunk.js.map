{"version":3,"file":"static/js/9641.d9753b0fd7.chunk.js","mappings":"8TAaO,MAAMA,EAAkBC,iBAA8B,IAAvBC,EAAYC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,IACnD,OAAO,IAAIG,SAASC,IAClBC,YAAW,KACTD,GAAQ,EAAK,GACZL,EAAK,GAEZ,EAEaO,EAAWR,iBAA8B,IAAvBC,EAAYC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,UACtCH,EAAgBE,EACxB,EAuHA,UArH6BQ,KAAM,IAAAC,EAAAC,EAAAC,EAAAC,EACjC,MAAM,GAAEC,IAAOC,EAAAA,EAAAA,YAAWC,EAAAA,GACpBC,GAAYC,EAAAA,EAAAA,UACZC,GAAWC,EAAAA,EAAAA,OACVC,EAAMC,IAAWC,EAAAA,EAAAA,WAAS,IAC1BC,EAASC,IAAcF,EAAAA,EAAAA,aAExB,YAAEG,EAAW,qBAAEC,EAAoB,mBAAEC,IAAuBC,EAAAA,EAAAA,OAClEC,EAAAA,EAAAA,YAAU,KACRJ,GAAa,GACZ,CAACA,IAEJ,MAAMK,EAAkC,CACtC,CACEC,MAAOlB,EAAG,gBACVmB,UAAW,QAEb,CACED,MAAOlB,EAAG,uBACVmB,UAAW,aACXC,UAAW,OACXC,cAAc,EACdC,MAAO,KAET,CACEJ,MAAOlB,EAAG,uBACVmB,UAAW,aACXC,UAAW,YACXG,aAAa,GAEf,CACEL,MAAOlB,EAAG,qBACVoB,UAAW,SACXI,IAAK,SACLF,MAAO,IACPG,OAAQA,CAACC,EAAMC,EAAQC,EAAGC,IACxBC,EAAAA,cAAA,OAAKC,UAAU,UACbD,EAAAA,cAAA,QACEN,IAAI,WACJQ,QAASA,KACP3B,EACG,wCAAuCsB,EAAOM,YAChD,GAGFjC,EAAG,mBAEN8B,EAAAA,cAAA,QACEN,IAAI,OACJQ,QAASA,KACPxB,GAAQ,GACRG,EAAWgB,EAAO,GAGnB3B,EAAG,sBAOd,OACE8B,EAAAA,cAAA,OAAKC,UAAU,eAEbD,EAAAA,cAACI,EAAAA,EAAa,CACZC,KAAMzB,EACN0B,SAAS,UACTlB,MAAM,OACNmB,KAAM9B,EACN+B,QAASA,IAAM9B,GAAQ,GACvBc,OACEZ,SAAsB,QAAfd,EAAPc,EAAS6B,qBAAa,IAAA3C,GAAgB,QAAhBC,EAAtBD,EAAwB4C,sBAAc,IAAA3C,OAA/B,EAAPA,EAAwC4C,oBAAqB,KAE/DC,QACEhC,SAAsB,QAAfZ,EAAPY,EAAS6B,qBAAa,IAAAzC,GAAgB,QAAhBC,EAAtBD,EAAwB0C,sBAAc,IAAAzC,OAA/B,EAAPA,EAAwC4C,qBAAsB,MAGlEb,EAAAA,cAACc,EAAAA,EAAQ,CACP3B,QAASA,EACTd,UAAWA,EAQX0C,OAAO,YACPC,WAAYhC,EACZiC,SAAUlC,EACVmC,QAASnC,EACToC,QAAS,CACPC,QAAS,CACPC,YAAa,MAGjBC,WAAY,CACVC,SAAU,GACVC,SAAWC,IACb,GACAC,cAAc,SACdC,YAAazD,EAAG,gBAChB0D,cAAeA,IAAM,CACnB5B,EAAAA,cAAC6B,EAAAA,GAAM,CACLnC,IAAI,SACJoC,KAAM9B,EAAAA,cAAC+B,EAAAA,EAAY,MACnB7B,QAASA,IAAM3B,EAAS,8BACxByD,KAAK,WAEJ9D,EAAG,wBAIN,C","sources":["webpack://large-screen-configuration/./src/pages/web/projectList/index.tsx"],"sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport type { ActionType, ProColumns } from \"@ant-design/pro-components\";\r\nimport { ProTable } from \"@ant-design/pro-components\";\r\nimport React, { useRef, FC, useEffect, useState, useContext } from \"react\";\r\nimport { IProject } from \"@src/service\";\r\nimport \"./index.scss\";\r\nimport { Button } from \"antd\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { web } from \"@src/core/hook\";\r\nimport PreviewDialog from \"@src/compoents/previewDialog\";\r\nimport { LocaleContext } from \"@src/core/i18n/localeContent\";\r\n\r\nexport const waitTimePromise = async (time: number = 100) => {\r\n  return new Promise((resolve) => {\r\n    setTimeout(() => {\r\n      resolve(true);\r\n    }, time);\r\n  });\r\n};\r\n\r\nexport const waitTime = async (time: number = 100) => {\r\n  await waitTimePromise(time);\r\n};\r\n\r\nconst ProjectList: FC<any> = () => {\r\n  const { $t } = useContext(LocaleContext);\r\n  const actionRef = useRef<ActionType>();\r\n  const navigate = useNavigate();\r\n  const [show, setShow] = useState(false);\r\n  const [project, setProject] = useState<IProject>();\r\n\r\n  const { getProjects, projectsFilterHandle, filterProjectsList } = web();\r\n  useEffect(() => {\r\n    getProjects();\r\n  }, [getProjects]);\r\n\r\n  const columns: ProColumns<IProject>[] = [\r\n    {\r\n      title: $t(\"project_name\" /*名称*/),\r\n      dataIndex: \"name\",\r\n    },\r\n    {\r\n      title: $t(\"project_create_time\" /*创建时间*/),\r\n      dataIndex: \"createTime\",\r\n      valueType: \"date\",\r\n      hideInSearch: true,\r\n      width: 150,\r\n    },\r\n    {\r\n      title: $t(\"project_create_time\" /*创建时间*/),\r\n      dataIndex: \"createTime\",\r\n      valueType: \"dateRange\",\r\n      hideInTable: true,\r\n    },\r\n    {\r\n      title: $t(\"project_operation\" /*操作*/),\r\n      valueType: \"option\",\r\n      key: \"option\",\r\n      width: 100,\r\n      render: (text, record, _, action) => (\r\n        <div className=\"option\">\r\n          <span\r\n            key=\"editable\"\r\n            onClick={() => {\r\n              navigate(\r\n                `/web/project/configuration?projectId=${record.projectId}`\r\n              );\r\n            }}\r\n          >\r\n            {$t(\"operation_edit\" /*编辑*/)}\r\n          </span>\r\n          <span\r\n            key=\"view\"\r\n            onClick={() => {\r\n              setShow(true);\r\n              setProject(record);\r\n            }}\r\n          >\r\n            {$t(\"operation_view\" /*预览*/)}\r\n          </span>\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"cms-project\">\r\n      {/* 页面预览 */}\r\n      <PreviewDialog\r\n        data={project}\r\n        pageType=\"project\"\r\n        title=\"项目预览\"\r\n        open={show}\r\n        onClose={() => setShow(false)}\r\n        width={\r\n          project?.configuration?.configureValue?.widgetConfigWidth || 1366\r\n        }\r\n        height={\r\n          project?.configuration?.configureValue?.widgetConfigHeight || 768\r\n        }\r\n      />\r\n      <ProTable<IProject>\r\n        columns={columns}\r\n        actionRef={actionRef}\r\n        // request={async (params) => {\r\n        //   await waitTime(2000);\r\n        //   return API.widgetsService.widgets({ params }).then((res) => {\r\n        //     console.log(res, \"res\");\r\n        //     return res;\r\n        //   });\r\n        // }}\r\n        rowKey=\"projectId\"\r\n        dataSource={filterProjectsList}\r\n        onSubmit={projectsFilterHandle}\r\n        onReset={projectsFilterHandle}\r\n        options={{\r\n          setting: {\r\n            listsHeight: 400,\r\n          },\r\n        }}\r\n        pagination={{\r\n          pageSize: 20,\r\n          onChange: (page) => console.log(page),\r\n        }}\r\n        dateFormatter=\"string\"\r\n        headerTitle={$t(\"project_list\" /*项目列表*/)}\r\n        toolBarRender={() => [\r\n          <Button\r\n            key=\"button\"\r\n            icon={<PlusOutlined />}\r\n            onClick={() => navigate(\"/web/project/configuration\")}\r\n            type=\"primary\"\r\n          >\r\n            {$t(\"operation_create\" /*新建*/)}\r\n          </Button>,\r\n        ]}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectList;\r\n"],"names":["waitTimePromise","async","time","arguments","length","undefined","Promise","resolve","setTimeout","waitTime","ProjectList","_project$configuratio","_project$configuratio2","_project$configuratio3","_project$configuratio4","$t","useContext","LocaleContext","actionRef","useRef","navigate","useNavigate","show","setShow","useState","project","setProject","getProjects","projectsFilterHandle","filterProjectsList","web","useEffect","columns","title","dataIndex","valueType","hideInSearch","width","hideInTable","key","render","text","record","_","action","React","className","onClick","projectId","PreviewDialog","data","pageType","open","onClose","configuration","configureValue","widgetConfigWidth","height","widgetConfigHeight","ProTable","rowKey","dataSource","onSubmit","onReset","options","setting","listsHeight","pagination","pageSize","onChange","page","dateFormatter","headerTitle","toolBarRender","Button","icon","PlusOutlined","type"],"sourceRoot":""}