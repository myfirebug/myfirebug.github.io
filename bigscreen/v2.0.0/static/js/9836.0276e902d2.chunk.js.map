{"version":3,"file":"static/js/9836.0276e902d2.chunk.js","mappings":"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","sources":["webpack://cli/./node_modules/@ant-design/icons-svg/es/asn/DotChartOutlined.js","webpack://cli/./node_modules/@ant-design/icons/es/icons/DotChartOutlined.js","webpack://cli/./src/components/total/index.tsx","webpack://cli/./src/components/trendChart/index.tsx","webpack://cli/./src/components/useLeaderboard/index.tsx","webpack://cli/./src/pages/components/components/filter/index.tsx","webpack://cli/./src/pages/components/components/list/index.tsx","webpack://cli/./src/pages/components/index.tsx"],"sourcesContent":["// This icon file is generated automatically.\nvar DotChartOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M888 792H200V168c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v688c0 4.4 3.6 8 8 8h752c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zM288 604a64 64 0 10128 0 64 64 0 10-128 0zm118-224a48 48 0 1096 0 48 48 0 10-96 0zm158 228a96 96 0 10192 0 96 96 0 10-192 0zm148-314a56 56 0 10112 0 56 56 0 10-112 0z\" } }] }, \"name\": \"dot-chart\", \"theme\": \"outlined\" };\nexport default DotChartOutlined;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport DotChartOutlinedSvg from \"@ant-design/icons-svg/es/asn/DotChartOutlined\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar DotChartOutlined = function DotChartOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: DotChartOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  DotChartOutlined.displayName = 'DotChartOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(DotChartOutlined);","import React from \"react\";\r\nimport { Col, Skeleton } from \"antd\";\r\nimport \"./index.scss\";\r\n\r\ninterface ITotal {\r\n  datas: any[];\r\n  loading: boolean;\r\n  cardNum?: number;\r\n}\r\n\r\nconst Total = React.memo(\r\n  (props: ITotal) => {\r\n    const { datas, loading, cardNum = 4 } = props;\r\n    return (\r\n      <>\r\n        {loading\r\n          ? Array(cardNum)\r\n              .fill(0)\r\n              .map((item, index) => (\r\n                <Col span={24 / cardNum} key={index}>\r\n                  <div className=\"cms-components__card\">\r\n                    <Skeleton active title={false} />\r\n                  </div>\r\n                </Col>\r\n              ))\r\n          : \"\"}\r\n        {datas.map((item, index) => (\r\n          <Col span={24 / cardNum} key={index}>\r\n            <div className=\"cms-components__card\">\r\n              <div className=\"name\">{item.name}</div>\r\n              <div className=\"total\">\r\n                <b>{item.total}</b>\r\n                {item.unit}\r\n              </div>\r\n              <div className=\"bg-font\">{item.bgFont}</div>\r\n            </div>\r\n          </Col>\r\n        ))}\r\n      </>\r\n    );\r\n  },\r\n  (prevProps, nextProps) => {\r\n    if (JSON.stringify(prevProps) === JSON.stringify(nextProps)) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n);\r\n\r\nexport default Total;\r\n","import React, { memo, useEffect, useState } from \"react\";\r\nimport { Skeleton } from \"antd\";\r\nimport { Box, Echarts } from \"@src/components\";\r\nimport { IComponentstrendItem } from \"@src/service\";\r\n\r\ninterface ITrendChart {\r\n  datas: IComponentstrendItem[];\r\n  loading: boolean;\r\n}\r\n\r\nconst TrendChart = memo(\r\n  (props: ITrendChart) => {\r\n    const { datas, loading } = props;\r\n    const [xAxisData, setXAxisData] = useState<string[]>([]);\r\n    const [seriesData, setSeriesData] = useState<number[]>([]);\r\n\r\n    useEffect(() => {\r\n      let xAxisArr = [];\r\n      let seriesArr = [];\r\n      for (let i = 0; i < datas.length; i++) {\r\n        xAxisArr.push(datas[i].name);\r\n        seriesArr.push(datas[i].value);\r\n      }\r\n      setXAxisData(xAxisArr);\r\n      setSeriesData(seriesArr);\r\n    }, [datas]);\r\n    return (\r\n      <Box title=\"新增走势\">\r\n        {loading ? (\r\n          <Skeleton active />\r\n        ) : (\r\n          <Echarts\r\n            loading={loading}\r\n            option={{\r\n              color: [\"#1677ff\"],\r\n              backgroundColor: \"rgba(0,0,0,0)\",\r\n              tooltip: {},\r\n              xAxis: {\r\n                data: xAxisData,\r\n                boundaryGap: false,\r\n              },\r\n              grid: {\r\n                left: 30,\r\n                top: 20,\r\n                bottom: 30,\r\n                right: 0,\r\n              },\r\n              yAxis: {},\r\n              series: [\r\n                {\r\n                  name: \"新增组件\",\r\n                  type: \"line\",\r\n                  data: seriesData,\r\n                  smooth: true,\r\n                  areaStyle: {},\r\n                },\r\n              ],\r\n            }}\r\n          />\r\n        )}\r\n      </Box>\r\n    );\r\n  },\r\n  (prevProps, nextProps) => {\r\n    if (JSON.stringify(prevProps) === JSON.stringify(nextProps)) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n);\r\n\r\nexport default TrendChart;\r\n","import React, { memo, useEffect, useState } from \"react\";\r\nimport { Skeleton } from \"antd\";\r\nimport { Box, Echarts } from \"@src/components\";\r\nimport { IComponentstrendItem } from \"@src/service\";\r\n\r\ninterface ITrendChart {\r\n  datas: IComponentstrendItem[];\r\n  loading: boolean;\r\n}\r\n\r\nconst TrendChart = memo(\r\n  (props: ITrendChart) => {\r\n    const { datas, loading } = props;\r\n    const [xAxisData, setXAxisData] = useState<string[]>([]);\r\n    const [seriesData, setSeriesData] = useState<number[]>([]);\r\n\r\n    useEffect(() => {\r\n      let xAxisArr = [];\r\n      let seriesArr = [];\r\n      for (let i = 0; i < datas.length; i++) {\r\n        xAxisArr.push(datas[i].name);\r\n        seriesArr.push(datas[i].value);\r\n      }\r\n      setXAxisData(xAxisArr);\r\n      setSeriesData(seriesArr);\r\n    }, [datas]);\r\n    return (\r\n      <Box title=\"使用排行榜TOP8\">\r\n        {loading ? (\r\n          <Skeleton active />\r\n        ) : (\r\n          <Echarts\r\n            loading={loading}\r\n            option={{\r\n              color: [\"#1677ff\"],\r\n              backgroundColor: \"rgba(0,0,0,0)\",\r\n              tooltip: {},\r\n              xAxis: {\r\n                type: \"value\",\r\n              },\r\n              yAxis: {\r\n                data: xAxisData,\r\n                type: \"category\",\r\n              },\r\n              grid: {\r\n                left: 50,\r\n                top: 20,\r\n                bottom: 30,\r\n                right: 20,\r\n              },\r\n              series: [\r\n                {\r\n                  name: \"使用排行榜TOP8\",\r\n                  type: \"bar\",\r\n                  data: seriesData,\r\n                  itemStyle: {\r\n                    borderRadius: [10, 10, 10, 10],\r\n                  },\r\n                },\r\n              ],\r\n            }}\r\n          />\r\n        )}\r\n      </Box>\r\n    );\r\n  },\r\n  (prevProps, nextProps) => {\r\n    if (JSON.stringify(prevProps) === JSON.stringify(nextProps)) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n);\r\n\r\nexport default TrendChart;\r\n","import React, { FC } from \"react\";\r\nimport { IComponentsTypeItem } from \"@src/service\";\r\nimport \"./index.scss\";\r\ninterface IFilter {\r\n  label: string;\r\n  select: string;\r\n  datas: IComponentsTypeItem[];\r\n  listSearchHandler: (field: string, value: any, index?: number) => void;\r\n  index?: number;\r\n}\r\n\r\nconst Filter: FC<IFilter> = ({\r\n  select,\r\n  datas,\r\n  label,\r\n  listSearchHandler,\r\n  index,\r\n}) => {\r\n  return (\r\n    <div className=\"cms-selector__selectorLine\">\r\n      <div className=\"cms-selector__selectorLine--name\">{label}</div>\r\n      <div className=\"cms-selector__selectorLine--value\">\r\n        {datas.map((item) => (\r\n          <span\r\n            className={item.id === select ? \"is-active\" : \"\"}\r\n            key={item.id}\r\n            onClick={() => listSearchHandler(\"type\", item.id, index)}\r\n          >\r\n            {item.name}\r\n          </span>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Filter;\r\n","import React, { FC, ReactNode, useCallback, useEffect, useState } from \"react\";\r\nimport \"./index.scss\";\r\nimport { IComponentsItem } from \"@src/service\";\r\nimport { Empty, Skeleton } from \"antd\";\r\ninterface IList {\r\n  children: ReactNode;\r\n  loading: boolean;\r\n  datas: IComponentsItem[];\r\n}\r\n\r\nconst List: FC<IList> = ({ children, datas, loading }) => {\r\n  const [cel, setCel] = useState(() => {\r\n    return Math.floor(window.innerWidth / 280);\r\n  });\r\n  const sizeHandler = useCallback(() => {\r\n    const windowWidth = window.innerWidth;\r\n    setCel(Math.floor(windowWidth / 280));\r\n  }, []);\r\n  useEffect(() => {\r\n    sizeHandler();\r\n    window.addEventListener(\"resize\", sizeHandler);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", sizeHandler);\r\n    };\r\n  }, [sizeHandler]);\r\n  return (\r\n    <div className=\"cms-components__list\">\r\n      {children && <div className=\"cms-selector\">{children}</div>}\r\n      <div className=\"cms-components__list--body\">\r\n        {loading ? (\r\n          <Skeleton active />\r\n        ) : datas.length ? (\r\n          datas.map((item, index) => (\r\n            <div\r\n              key={index}\r\n              className=\"cms-components__item\"\r\n              style={{ width: `calc(100% / ${cel} - 20px)` }}\r\n            >\r\n              <div className=\"picture\">\r\n                <img src={item.images} alt=\"\" />\r\n              </div>\r\n              <div className=\"name\">{item.name}</div>\r\n              <div className=\"type\">\r\n                类型：{item.level2Type || item.level1Type}\r\n              </div>\r\n              <div className=\"type\">使用次数：{item.count}次</div>\r\n              <div className=\"createtime\">创建时间：{item.createTime}</div>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import React, { FC, useEffect } from \"react\";\r\nimport { Col, Row } from \"antd\";\r\nimport { useComponents } from \"@src/core/hook\";\r\nimport Total from \"@src/components/total\";\r\nimport TrendChart from \"@src/components/trendChart\";\r\nimport UseLeaderboard from \"@src/components/useLeaderboard\";\r\nimport List from \"./components/list\";\r\nimport FilterItem from \"./components/filter\";\r\nimport \"./index.scss\";\r\n\r\nconst Widget: FC = () => {\r\n  const {\r\n    total,\r\n    getTotal,\r\n    getTrend,\r\n    trend,\r\n    leaderboard,\r\n    getLeaderboard,\r\n    types,\r\n    getTypes,\r\n    list,\r\n    getList,\r\n    listSearchHandler,\r\n  } = useComponents();\r\n  useEffect(() => {\r\n    getTotal();\r\n    getTrend();\r\n    getLeaderboard();\r\n    getTypes();\r\n    getList();\r\n  }, [getTotal, getTrend, getLeaderboard, getTypes, getList]);\r\n\r\n  console.log(list.searchDatas, \"types\");\r\n  return (\r\n    <div className=\"cms-components\">\r\n      <Row gutter={16}>\r\n        <Total datas={total.datas} loading={total.loading} />\r\n        <Col span={18}>\r\n          <TrendChart datas={trend.datas} loading={trend.loading} />\r\n        </Col>\r\n        <Col span={6}>\r\n          <UseLeaderboard\r\n            datas={leaderboard.datas}\r\n            loading={leaderboard.loading}\r\n          />\r\n        </Col>\r\n        <Col span={24}>\r\n          <List loading={list.loading} datas={list.searchDatas}>\r\n            {list.params.type.map((_, index) => {\r\n              if (index === 0) {\r\n                return (\r\n                  <FilterItem\r\n                    label={`${index + 1}级标签：`}\r\n                    key={index}\r\n                    index={index}\r\n                    select={list.params.type[index]}\r\n                    datas={types.datas.filter((item) => item.level === 1) || []}\r\n                    listSearchHandler={listSearchHandler}\r\n                  />\r\n                );\r\n              } else if (\r\n                list.params.type[index - 1] &&\r\n                types.datas.filter(\r\n                  (item) => item.pid && item.pid === list.params.type[index - 1]\r\n                )?.length\r\n              ) {\r\n                return (\r\n                  <FilterItem\r\n                    label={`${index + 1}级标签：`}\r\n                    key={index}\r\n                    index={index}\r\n                    select={list.params.type[index]}\r\n                    datas={\r\n                      types.datas.filter(\r\n                        (item) => item.pid === list.params.type[index - 1]\r\n                      ) || []\r\n                    }\r\n                    listSearchHandler={listSearchHandler}\r\n                  />\r\n                );\r\n              }\r\n              return null;\r\n            })}\r\n          </List>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Widget;\r\n"],"names":["props","ref","AntdIcon","icon","Total","React","datas","loading","cardNum","Array","fill","map","item","index","Col","span","key","className","Skeleton","active","title","name","total","unit","bgFont","prevProps","nextProps","JSON","stringify","TrendChart","memo","xAxisData","setXAxisData","useState","seriesData","setSeriesData","useEffect","xAxisArr","seriesArr","i","length","push","value","Box","Echarts","option","color","backgroundColor","tooltip","xAxis","data","boundaryGap","grid","left","top","bottom","right","yAxis","series","type","smooth","areaStyle","itemStyle","borderRadius","Filter","select","label","listSearchHandler","id","onClick","List","children","cel","setCel","Math","floor","window","innerWidth","sizeHandler","useCallback","windowWidth","addEventListener","removeEventListener","style","width","src","images","alt","level2Type","level1Type","count","createTime","Empty","image","PRESENTED_IMAGE_SIMPLE","Widget","getTotal","getTrend","trend","leaderboard","getLeaderboard","types","getTypes","list","getList","useComponents","console","log","searchDatas","Row","gutter","UseLeaderboard","params","_","_types$datas$filter","FilterItem","filter","level","pid"],"sourceRoot":""}