{"version":3,"file":"static/js/836.f9fb386f2a.chunk.js","mappings":"wOAsEA,MA5CgDA,IAM1C,IAN2C,KAC/CC,EAAI,KACJC,EAAI,QACJC,EAAO,SACPC,EAAQ,wBACRC,GACDL,EAMC,OACEM,EAAAA,cAACC,EAAAA,EAAK,CACJL,KAAMA,EACNC,QAASA,EACTK,SAAUL,EACVM,OAAQ,KACRC,MAAQ,KAAIC,EAAAA,GAAaP,OACzBQ,gBAAc,GAEdN,EAAAA,cAACO,EAAAA,EAAI,CACHC,SAf8CC,IAClDV,SAAAA,EAA0BU,EAAOd,MACjCe,EAAAA,GAAQC,QAAQ,QAChBd,GAAS,EAaLe,cAAe,CAAEjB,KAAMA,GAAQ,IAC/BkB,aAAa,OAEbb,EAAAA,cAACO,EAAAA,EAAKO,KAAI,CACRnB,KAAK,OACLoB,MAAO,CACL,CAAEC,UAAU,EAAMN,QAAU,MAAKL,EAAAA,GAAaP,UAGhDE,EAAAA,cAACiB,EAAAA,EAAK,CAACC,YAAc,MAAKb,EAAAA,GAAaP,UAEzCE,EAAAA,cAACO,EAAAA,EAAKO,KAAI,KACRd,EAAAA,cAACmB,EAAAA,GAAM,CAACC,KAAK,UAAUC,SAAS,SAASC,OAAK,GAAC,QAK7C,ECCZ,MA/CoD5B,IAK9C,IAL+C,KACnDC,EAAI,KACJ4B,EAAI,SACJzB,EAAQ,wBACRC,GACDL,EACC,MAAM8B,GAAWC,EAAAA,EAAAA,OACVC,EAAiBC,IAAsBC,EAAAA,EAAAA,WAAS,GACvD,OACE5B,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,OAAK6B,UAAU,6BACb7B,EAAAA,cAAA,OAAK6B,UAAU,mCACb7B,EAAAA,cAAA,QACE6B,UAAU,gBACVC,wBAAyB,CAAEC,OAAQR,GAAQ,cAE7CvB,EAAAA,cAAA,MAAI6B,UAAU,QAAQlC,GACtBK,EAAAA,cAAA,QACE6B,UAAU,gBACVG,QAASA,IAAML,GAAmB,IACnC,MAIH3B,EAAAA,cAAA,OAAK6B,UAAU,oCACb7B,EAAAA,cAAA,OAAK6B,UAAU,WACb7B,EAAAA,cAAA,KAAG6B,UAAU,YAAW,KAAY,MAEtC7B,EAAAA,cAAA,OAAK6B,UAAU,WACb7B,EAAAA,cAAA,KAAG6B,UAAU,YAAW,KAAY,MAEtC7B,EAAAA,cAAA,OAAK6B,UAAU,UAAUG,QAASA,IAAMR,GAAU,IAChDxB,EAAAA,cAAA,KAAG6B,UAAU,YAAW,KAAY,QAI1C7B,EAAAA,cAACiC,EAAgB,CACftC,KAAMA,GAAQ,GACdG,SAAUA,EACVF,KAAM8B,EACN7B,QAASA,IAAM8B,GAAmB,GAClC5B,wBAAyBA,IAE1B,E,sBC1CP,MAZsBL,IAAkC,IAAjC,MAAEU,EAAK,SAAE8B,EAAQ,QAAErC,GAASH,EACjD,OACEM,EAAAA,cAAA,OAAK6B,UAAU,UAAUM,MAAO,CAAEC,QAAShC,EAAQ,OAAS,SAC1DJ,EAAAA,cAAA,OAAK6B,UAAU,mBACb7B,EAAAA,cAAA,OAAK6B,UAAU,QAAQzB,GACvBJ,EAAAA,cAACqC,EAAAA,EAAa,CAACL,QAASnC,KAE1BG,EAAAA,cAAA,OAAK6B,UAAU,iBAAiBK,GAC5B,ECFV,MAAMI,EAAsB,CAC1B,CACEC,KAAM,WACNnB,KAAM,WAER,CACEmB,KAAM,WACNnB,KAAM,UAER,CACEmB,KAAM,WACNnB,KAAM,SAsDV,MAlD0D1B,IAGpD,IAHqD,OACzD8C,EAAM,KACNC,GACD/C,EACC,MAAOgD,EAASC,IAAcf,EAAAA,EAAAA,UAAwB,YAC/CgB,EAAMC,IAAWjB,EAAAA,EAAAA,UAAqB,IAQ7C,OANAkB,EAAAA,EAAAA,YAAU,KACRD,GAAQ,IACCP,EAAQS,QAAQC,GAASP,EAAKQ,SAASD,EAAK5B,UAErDuB,EAAWF,EAAK,GAAG,GAClB,CAACA,EAAMI,EAASF,IAEjB3C,EAAAA,cAAA,OAAK6B,UAAU,gCACb7B,EAAAA,cAAA,MAAI6B,UAAU,sCACXe,EAAKM,KAAKF,GACThD,EAAAA,cAAA,MACE6B,UAAY,0CACVa,IAAYM,EAAK5B,KAAO,YAAc,IAExCY,QAASA,IAAMW,EAAWK,EAAK5B,MAC/B+B,IAAKH,EAAK5B,MAEVpB,EAAAA,cAACoD,EAAAA,EAAO,CAACC,UAAU,OAAOjD,MAAOC,EAAAA,GAAa2C,EAAK5B,OACjDpB,EAAAA,cAAA,KACE6B,UAAU,WACVC,wBAAyB,CAAEC,OAAQiB,EAAKT,aAMlDvC,EAAAA,cAAA,OACE6B,UAAU,2CACVM,MAAO,CACLmB,YAAaZ,EAAU,qCAAuC,SAGhE1C,EAAAA,cAACuD,EAAG,CACFnD,MAAOsC,EAAUrC,EAAAA,GAAaqC,GAAW,GACzC7C,QAASA,IAAM8C,EAAW,KAEzBH,EAAOE,KAGR,EC7DV,MAAMJ,EAAsB,CAC1B,CACEC,KAAM,WACNnB,KAAM,SAER,CACEmB,KAAM,WACNnB,KAAM,WAER,CACEmB,KAAM,WACNnB,KAAM,UAER,CACEmB,KAAM,WACNnB,KAAM,QAER,CACEmB,KAAM,WACNnB,KAAM,YAsDV,MAlD2D1B,IAGrD,IAHsD,OAC1D8C,EAAM,KACNC,GACD/C,EACC,MAAOgD,EAASC,IAAcf,EAAAA,EAAAA,UAAwB,YAC/CgB,EAAMC,IAAWjB,EAAAA,EAAAA,UAAqB,IAQ7C,OANAkB,EAAAA,EAAAA,YAAU,KACRD,GAAQ,IACCP,EAAQS,QAAQC,GAASP,EAAKQ,SAASD,EAAK5B,UAErDuB,EAAWF,EAAK,GAAG,GAClB,CAACA,EAAMI,EAASF,IAEjB3C,EAAAA,cAAA,OAAK6B,UAAU,iCACb7B,EAAAA,cAAA,OACE6B,UAAU,4CACVM,MAAO,CACLqB,WAAYd,EAAU,qCAAuC,SAG/D1C,EAAAA,cAACuD,EAAG,CACFnD,MAAQ,IAAEsC,EAAUrC,EAAAA,GAAaqC,GAAW,KAAO,IACnD7C,QAASA,IAAM8C,EAAW,KAEzBH,EAAOE,KAGZ1C,EAAAA,cAAA,MAAI6B,UAAU,uCACXe,EAAKM,KAAKF,GACThD,EAAAA,cAAA,MACE6B,UAAY,2CACVa,IAAYM,EAAK5B,KAAO,YAAc,IAExCY,QAASA,IAAMW,EAAWK,EAAK5B,MAC/B+B,IAAKH,EAAK5B,MAEVpB,EAAAA,cAACoD,EAAAA,EAAO,CAACC,UAAU,OAAOjD,MAAQ,GAAEC,EAAAA,GAAa2C,EAAK5B,WACpDpB,EAAAA,cAAA,KACE6B,UAAU,WACVC,wBAAyB,CAAEC,OAAQiB,EAAKT,aAM9C,ECNV,MAzE+BkB,KAC7B,MAAMC,EAAMC,MAAMC,KAAK,IAAID,MAAM,KAAKE,QAEtC,OACE7D,EAAAA,cAAA,OAAK6B,UAAU,4BACb7B,EAAAA,cAAA,OAAK6B,UAAU,sCACb7B,EAAAA,cAAA,OAAK6B,UAAU,+BACb7B,EAAAA,cAAA,QAAM6B,UAAU,cACd7B,EAAAA,cAAA,SAAG,MACHA,EAAAA,cAAA,UACAA,EAAAA,cAAA,UACAA,EAAAA,cAAA,UACAA,EAAAA,cAAA,UACAA,EAAAA,cAAA,UACAA,EAAAA,cAAA,UACAA,EAAAA,cAAA,UACAA,EAAAA,cAAA,UACAA,EAAAA,cAAA,UACAA,EAAAA,cAAA,WAED0D,EAAIR,KAAI,CAACF,EAAWc,IACnB9D,EAAAA,cAAA,QAAM6B,UAAU,aAAasB,IAAKW,GAChC9D,EAAAA,cAAA,SAAY,GAAR8D,GACJ9D,EAAAA,cAAA,UACAA,EAAAA,cAAA,UACAA,EAAAA,cAAA,UACAA,EAAAA,cAAA,UACAA,EAAAA,cAAA,UACAA,EAAAA,cAAA,UACAA,EAAAA,cAAA,UACAA,EAAAA,cAAA,UACAA,EAAAA,cAAA,UACAA,EAAAA,cAAA,eAKRA,EAAAA,cAAA,OAAK6B,UAAU,sCACb7B,EAAAA,cAAA,OAAK6B,UAAU,+BACb7B,EAAAA,cAAA,QAAM6B,UAAU,cACd7B,EAAAA,cAAA,SAAG,MACHA,EAAAA,cAAA,UACAA,EAAAA,cAAA,UACAA,EAAAA,cAAA,UACAA,EAAAA,cAAA,UACAA,EAAAA,cAAA,UACAA,EAAAA,cAAA,UACAA,EAAAA,cAAA,UACAA,EAAAA,cAAA,UACAA,EAAAA,cAAA,UACAA,EAAAA,cAAA,WAED0D,EAAIR,KAAI,CAACF,EAAWc,IACnB9D,EAAAA,cAAA,QAAM6B,UAAU,aAAasB,IAAKW,GAChC9D,EAAAA,cAAA,SAAY,GAAR8D,GACJ9D,EAAAA,cAAA,UACAA,EAAAA,cAAA,UACAA,EAAAA,cAAA,UACAA,EAAAA,cAAA,UACAA,EAAAA,cAAA,UACAA,EAAAA,cAAA,UACAA,EAAAA,cAAA,UACAA,EAAAA,cAAA,UACAA,EAAAA,cAAA,UACAA,EAAAA,cAAA,eAKJ,ECpDV,MAjBgD+D,IAE5C/D,EAAAA,cAAA,OAAK6B,UAAU,2BACb7B,EAAAA,cAAA,OAAK6B,UAAU,6BACb7B,EAAAA,cAACgE,EAAI,MACLhE,EAAAA,cAAA,OACEmC,MAAO,CACL8B,MAAO,QACPC,OAAQ,QACRC,WAAY,6C,iCCPxB,MAAMC,EAA8B,CAClC,OACA,QACA,QACA,OACA,MACA,OA8CF,MAzCIC,KAAM,IAAAC,EAAAC,EACR,MAAO7B,EAASC,IAAcf,EAAAA,EAAAA,UAAuB,SAC/C,YAAE4C,EAAW,aAAEC,EAAY,gBAAEC,IAAoBC,EAAAA,EAAAA,MAIvD,OAHA7B,EAAAA,EAAAA,YAAU,KACR0B,GAAa,GACZ,CAACA,IAEFxE,EAAAA,cAAA,OAAK6B,UAAU,+BACb7B,EAAAA,cAAA,MAAI6B,UAAU,qCACXuC,EAAYlB,KAAKF,GAChBhD,EAAAA,cAAA,OACEmD,IAAKH,EACLnB,UAAWa,IAAYM,EAAO,YAAc,GAC5ChB,QAASA,IAAMW,EAAWK,IAEzB4B,EAAAA,GAAY5B,OAInBhD,EAAAA,cAAA,OAAK6B,UAAU,sCAE6B,QAFOyC,EAChDG,EACE1B,QAAQC,GAASA,EAAK5B,OAASsB,WAAQ,IAAA4B,OAAA,EADzCA,EAEGpB,KAAKF,GACLhD,EAAAA,cAAA,OACE6B,UAAU,oCACVsB,IAAKH,EAAK6B,GACVC,WAAS,GAET9E,EAAAA,cAAC+E,EAAAA,EAAK,CAACd,MAAO,IAAKC,OAAQ,IAAKc,IAAKhC,EAAKiC,IAAKC,SAAS,IACxDlF,EAAAA,cAAA,OAAK6B,UAAU,QAAQmB,EAAKrD,UAGhC+E,KACqD,QAArDH,EAACE,EAAa1B,QAAQC,GAASA,EAAK5B,OAASsB,WAAQ,IAAA6B,GAApDA,EAAsDY,SACrDnF,EAAAA,cAACoF,EAAAA,EAAK,CAACC,MAAOD,EAAAA,EAAME,0BAGtB,ECbV,MAhCwCC,IAEpCvF,EAAAA,cAAA,OAAK6B,UAAU,qBACb7B,EAAAA,cAACwF,EAAkB,CACjB7F,KAAK,QACLG,SAAS,SACTC,wBAA0BJ,IACxB8F,QAAQC,IAAI/F,EAAK,IAGrBK,EAAAA,cAAA,OAAK6B,UAAU,8BACb7B,EAAAA,cAAC2F,EAAqB,CACpBlD,KAAM,CAAC,WACPD,OAASoD,GACM,YAATA,EACK5F,EAAAA,cAACqE,EAA6B,MAEhC,OAGXrE,EAAAA,cAAC+D,EAAgB,MACjB/D,EAAAA,cAAC6F,EAAsB,CACrBpD,KAAM,CAAC,QAAS,UAAW,UAC3BD,OAASoD,GACA5F,EAAAA,cAAA,WAAM4F,M","sources":["webpack://cli/./src/configLayout/modifyNameDialog/index.tsx","webpack://cli/./src/configLayout/header/index.tsx","webpack://cli/./src/configLayout/box/index.tsx","webpack://cli/./src/configLayout/leftAside/index.tsx","webpack://cli/./src/configLayout/rightAside/index.tsx","webpack://cli/./src/configLayout/rule/index.tsx","webpack://cli/./src/configLayout/main/index.tsx","webpack://cli/./src/configLayout/elements/index.tsx","webpack://cli/./src/pages/widgets/edit/index.tsx"],"sourcesContent":["import React, { FC } from \"react\";\r\nimport {\r\n  Modal,\r\n  ModalProps,\r\n  Form,\r\n  type FormProps,\r\n  Input,\r\n  Button,\r\n  message,\r\n} from \"antd\";\r\nimport { PAGETYPENAME } from \"@src/core/enums/access.enums\";\r\n\r\ninterface ImodifyNameDialog extends ModalProps {\r\n  onClose: () => void;\r\n  // 名称\r\n  name: string;\r\n  // 类型\r\n  pageType: PageType;\r\n  // 修改名称成功函数\r\n  modifyNameSuccessHander?: (name: string) => void;\r\n}\r\n\r\ntype FieldType = {\r\n  name: string;\r\n};\r\n\r\nconst modifyNameDialog: FC<ImodifyNameDialog> = ({\r\n  name,\r\n  open,\r\n  onClose,\r\n  pageType,\r\n  modifyNameSuccessHander,\r\n}) => {\r\n  const onFinish: FormProps<FieldType>[\"onFinish\"] = (values) => {\r\n    modifyNameSuccessHander?.(values.name);\r\n    message.success(\"修改成功\");\r\n    onClose();\r\n  };\r\n  return (\r\n    <Modal\r\n      open={open}\r\n      onClose={onClose}\r\n      onCancel={onClose}\r\n      footer={null}\r\n      title={`修改${PAGETYPENAME[pageType]}名称`}\r\n      destroyOnClose\r\n    >\r\n      <Form\r\n        onFinish={onFinish}\r\n        initialValues={{ name: name || \"\" }}\r\n        autoComplete=\"off\"\r\n      >\r\n        <Form.Item<FieldType>\r\n          name=\"name\"\r\n          rules={[\r\n            { required: true, message: `请输入${PAGETYPENAME[pageType]}名称` },\r\n          ]}\r\n        >\r\n          <Input placeholder={`请输入${PAGETYPENAME[pageType]}名称`} />\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\" block>\r\n            保存\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default modifyNameDialog;\r\n","import React, { FC, useState } from \"react\";\r\nimport \"./index.scss\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport ModifyNameDialog from \"../modifyNameDialog\";\r\n\r\ninterface IConfigLayoutHeader {\r\n  // 类型\r\n  pageType: PageType;\r\n  // 名称\r\n  name?: string;\r\n  // 页面logo\r\n  logo?: string;\r\n  // 预览函数\r\n  previewHandler?: () => void;\r\n  // 发布函数\r\n  publishHandler?: () => void;\r\n  // 修改名称成功函数\r\n  modifyNameSuccessHander?: (name: string) => void;\r\n}\r\n\r\nconst ConfigLayoutHeader: FC<IConfigLayoutHeader> = ({\r\n  name,\r\n  logo,\r\n  pageType,\r\n  modifyNameSuccessHander,\r\n}) => {\r\n  const navigate = useNavigate();\r\n  const [isModalNameOpen, setIsModalNameOpen] = useState(false);\r\n  return (\r\n    <>\r\n      <div className=\"cms-config-layout__header\">\r\n        <div className=\"cms-config-layout__header--left\">\r\n          <span\r\n            className=\"cms-icon logo\"\r\n            dangerouslySetInnerHTML={{ __html: logo || \"&#xe625;\" }}\r\n          ></span>\r\n          <h1 className=\"name\">{name}</h1>\r\n          <span\r\n            className=\"cms-icon edit\"\r\n            onClick={() => setIsModalNameOpen(true)}\r\n          >\r\n            &#xec88;\r\n          </span>\r\n        </div>\r\n        <div className=\"cms-config-layout__header--right\">\r\n          <div className=\"preview\">\r\n            <i className=\"cms-icon\">&#xe668;</i>预览\r\n          </div>\r\n          <div className=\"publish\">\r\n            <i className=\"cms-icon\">&#xe620;</i>发布\r\n          </div>\r\n          <div className=\"preview\" onClick={() => navigate(-1)}>\r\n            <i className=\"cms-icon\">&#xe720;</i>返回\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <ModifyNameDialog\r\n        name={name || \"\"}\r\n        pageType={pageType}\r\n        open={isModalNameOpen}\r\n        onClose={() => setIsModalNameOpen(false)}\r\n        modifyNameSuccessHander={modifyNameSuccessHander}\r\n      ></ModifyNameDialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ConfigLayoutHeader;\r\n","import React, { FC, ReactNode } from \"react\";\r\nimport \"./index.scss\";\r\nimport { CloseOutlined } from \"@ant-design/icons\";\r\ninterface IBox {\r\n  title: string;\r\n  children: ReactNode;\r\n  onClose: () => void;\r\n}\r\n\r\nconst Box: FC<IBox> = ({ title, children, onClose }) => {\r\n  return (\r\n    <div className=\"cms-box\" style={{ display: title ? \"flex\" : \"none\" }}>\r\n      <div className=\"cms-box__header\">\r\n        <div className=\"name\">{title}</div>\r\n        <CloseOutlined onClick={onClose} />\r\n      </div>\r\n      <div className=\"cms-box__body\">{children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Box;\r\n","import React, { FC, ReactNode, useEffect, useState } from \"react\";\r\nimport { PAGETYPENAME } from \"@src/core/enums/access.enums\";\r\nimport { Tooltip } from \"antd\";\r\nimport Box from \"../box\";\r\nimport \"./index.scss\";\r\ninterface IConfigLayoutLeftAside {\r\n  navs: PageType[];\r\n  render: (data: PageType | \"\") => ReactNode;\r\n}\r\n\r\ninterface ITabItem {\r\n  icon: string;\r\n  type: PageType;\r\n}\r\n\r\nconst ALLTABS: ITabItem[] = [\r\n  {\r\n    icon: \"&#xe652;\",\r\n    type: \"element\",\r\n  },\r\n  {\r\n    icon: \"&#xe634;\",\r\n    type: \"widget\",\r\n  },\r\n  {\r\n    icon: \"&#xe652;\",\r\n    type: \"page\",\r\n  },\r\n];\r\n\r\nconst ConfigLayoutLeftAside: FC<IConfigLayoutLeftAside> = ({\r\n  render,\r\n  navs,\r\n}) => {\r\n  const [current, setCurrent] = useState<PageType | \"\">(\"element\");\r\n  const [tabs, setTabs] = useState<ITabItem[]>([]);\r\n\r\n  useEffect(() => {\r\n    setTabs(() => {\r\n      return ALLTABS.filter((item) => navs.includes(item.type));\r\n    });\r\n    setCurrent(navs[0]);\r\n  }, [navs, setTabs, setCurrent]);\r\n  return (\r\n    <div className=\"cms-config-layout__leftAside\">\r\n      <ul className=\"cms-config-layout__leftAside--tabs\">\r\n        {tabs.map((item) => (\r\n          <li\r\n            className={`cms-config-layout__leftAside--tabItem ${\r\n              current === item.type ? \"is-active\" : \"\"\r\n            }`}\r\n            onClick={() => setCurrent(item.type)}\r\n            key={item.type}\r\n          >\r\n            <Tooltip placement=\"left\" title={PAGETYPENAME[item.type]}>\r\n              <i\r\n                className=\"cms-icon\"\r\n                dangerouslySetInnerHTML={{ __html: item.icon }}\r\n              ></i>\r\n            </Tooltip>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <div\r\n        className=\"cms-config-layout__leftAside--tabContent\"\r\n        style={{\r\n          borderRight: current ? \"1px solid var(--cms-divider-color)\" : \"none\",\r\n        }}\r\n      >\r\n        <Box\r\n          title={current ? PAGETYPENAME[current] : \"\"}\r\n          onClose={() => setCurrent(\"\")}\r\n        >\r\n          {render(current)}\r\n        </Box>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConfigLayoutLeftAside;\r\n","import React, { FC, ReactNode, useEffect, useState } from \"react\";\r\nimport { PAGETYPENAME } from \"@src/core/enums/access.enums\";\r\nimport { Tooltip } from \"antd\";\r\nimport Box from \"../box\";\r\nimport \"./index.scss\";\r\ninterface IConfigLayoutRightAside {\r\n  render: (data: PageType | \"\") => ReactNode;\r\n  navs: PageType[];\r\n}\r\n\r\ninterface ITabItem {\r\n  icon: string;\r\n  type: PageType;\r\n}\r\n\r\nconst ALLTABS: ITabItem[] = [\r\n  {\r\n    icon: \"&#xe63c;\",\r\n    type: \"layer\",\r\n  },\r\n  {\r\n    icon: \"&#xe652;\",\r\n    type: \"element\",\r\n  },\r\n  {\r\n    icon: \"&#xe634;\",\r\n    type: \"widget\",\r\n  },\r\n  {\r\n    icon: \"&#xe652;\",\r\n    type: \"page\",\r\n  },\r\n  {\r\n    icon: \"&#xe652;\",\r\n    type: \"linkage\",\r\n  },\r\n];\r\n\r\nconst ConfigLayoutRightAsid: FC<IConfigLayoutRightAside> = ({\r\n  render,\r\n  navs,\r\n}) => {\r\n  const [current, setCurrent] = useState<PageType | \"\">(\"element\");\r\n  const [tabs, setTabs] = useState<ITabItem[]>([]);\r\n\r\n  useEffect(() => {\r\n    setTabs(() => {\r\n      return ALLTABS.filter((item) => navs.includes(item.type));\r\n    });\r\n    setCurrent(navs[0]);\r\n  }, [navs, setTabs, setCurrent]);\r\n  return (\r\n    <div className=\"cms-config-layout__rightAside\">\r\n      <div\r\n        className=\"cms-config-layout__rightAside--tabContent\"\r\n        style={{\r\n          borderLeft: current ? \"1px solid var(--cms-divider-color)\" : \"none\",\r\n        }}\r\n      >\r\n        <Box\r\n          title={`${current ? PAGETYPENAME[current] + \"配置\" : \"\"}`}\r\n          onClose={() => setCurrent(\"\")}\r\n        >\r\n          {render(current)}\r\n        </Box>\r\n      </div>\r\n      <ul className=\"cms-config-layout__rightAside--tabs\">\r\n        {tabs.map((item) => (\r\n          <li\r\n            className={`cms-config-layout__rightAside--tabItem ${\r\n              current === item.type ? \"is-active\" : \"\"\r\n            }`}\r\n            onClick={() => setCurrent(item.type)}\r\n            key={item.type}\r\n          >\r\n            <Tooltip placement=\"left\" title={`${PAGETYPENAME[item.type]}配置`}>\r\n              <i\r\n                className=\"cms-icon\"\r\n                dangerouslySetInnerHTML={{ __html: item.icon }}\r\n              ></i>\r\n            </Tooltip>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConfigLayoutRightAsid;\r\n","import React, { FC } from \"react\";\r\nimport \"./index.scss\";\r\n\r\ninterface IRulerProps {}\r\n\r\nconst Ruler: FC<IRulerProps> = () => {\r\n  const arr = Array.from(new Array(100).keys());\r\n\r\n  return (\r\n    <div className=\"cms-config-layout__ruler\">\r\n      <div className=\"cms-config-layout__ruler--hwrapper\">\r\n        <div className=\"cms-config-layout__ruler--h\">\r\n          <span className=\"ruler-h-50\">\r\n            <b>50</b>\r\n            <i></i>\r\n            <i></i>\r\n            <i></i>\r\n            <i></i>\r\n            <i></i>\r\n            <i></i>\r\n            <i></i>\r\n            <i></i>\r\n            <i></i>\r\n            <i></i>\r\n          </span>\r\n          {arr.map((item: any, index: number) => (\r\n            <span className=\"ruler-h-50\" key={index}>\r\n              <b>{index * 50}</b>\r\n              <i></i>\r\n              <i></i>\r\n              <i></i>\r\n              <i></i>\r\n              <i></i>\r\n              <i></i>\r\n              <i></i>\r\n              <i></i>\r\n              <i></i>\r\n              <i></i>\r\n            </span>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className=\"cms-config-layout__ruler--vwrapper\">\r\n        <div className=\"cms-config-layout__ruler--v\">\r\n          <span className=\"ruler-h-50\">\r\n            <b>50</b>\r\n            <i></i>\r\n            <i></i>\r\n            <i></i>\r\n            <i></i>\r\n            <i></i>\r\n            <i></i>\r\n            <i></i>\r\n            <i></i>\r\n            <i></i>\r\n            <i></i>\r\n          </span>\r\n          {arr.map((item: any, index: number) => (\r\n            <span className=\"ruler-h-50\" key={index}>\r\n              <b>{index * 50}</b>\r\n              <i></i>\r\n              <i></i>\r\n              <i></i>\r\n              <i></i>\r\n              <i></i>\r\n              <i></i>\r\n              <i></i>\r\n              <i></i>\r\n              <i></i>\r\n              <i></i>\r\n            </span>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Ruler;\r\n","import React, { FC } from \"react\";\r\nimport Rule from \"../rule\";\r\nimport \"./index.scss\";\r\ninterface IConfigLayoutMain {}\r\n\r\nconst ConfigLayoutMain: FC<IConfigLayoutMain> = () => {\r\n  return (\r\n    <div className=\"cms-config-layout__main\">\r\n      <div className=\"cms-config-layout__center\">\r\n        <Rule />\r\n        <div\r\n          style={{\r\n            width: \"400px\",\r\n            height: \"400px\",\r\n            background: \"var(--cms-background-color-secondary)\",\r\n          }}\r\n        ></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConfigLayoutMain;\r\n","import React, { FC, useEffect, useState } from \"react\";\r\nimport { ELEMETSTYPE } from \"@src/core/enums/access.enums\";\r\nimport { elements } from \"@src/core/hook\";\r\nimport { Empty, Image } from \"antd\";\r\nimport \"./index.scss\";\r\ninterface IConfigLayoutLeftAsideElements {}\r\n\r\nconst ALLELEMENTS: elementsType[] = [\r\n  \"text\",\r\n  \"image\",\r\n  \"table\",\r\n  \"line\",\r\n  \"bar\",\r\n  \"pie\",\r\n];\r\n\r\nconst ConfigLayoutLeftAsideElements: FC<\r\n  IConfigLayoutLeftAsideElements\r\n> = () => {\r\n  const [current, setCurrent] = useState<elementsType>(\"text\");\r\n  const { getElements, elementsList, elementsLoading } = elements();\r\n  useEffect(() => {\r\n    getElements();\r\n  }, [getElements]);\r\n  return (\r\n    <div className=\"cms-config-layout__elements\">\r\n      <ul className=\"cms-config-layout__elements--left\">\r\n        {ALLELEMENTS.map((item) => (\r\n          <div\r\n            key={item}\r\n            className={current === item ? \"is-active\" : \"\"}\r\n            onClick={() => setCurrent(item)}\r\n          >\r\n            {ELEMETSTYPE[item]}\r\n          </div>\r\n        ))}\r\n      </ul>\r\n      <div className=\"cms-config-layout__elements--right\">\r\n        {elementsList\r\n          .filter((item) => item.type === current)\r\n          ?.map((item) => (\r\n            <div\r\n              className=\"cms-config-layout__elements--item\"\r\n              key={item.id}\r\n              draggable\r\n            >\r\n              <Image width={224} height={120} src={item.url} preview={false} />\r\n              <div className=\"name\">{item.name}</div>\r\n            </div>\r\n          ))}\r\n        {!elementsLoading &&\r\n          !elementsList.filter((item) => item.type === current)?.length && (\r\n            <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n          )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConfigLayoutLeftAsideElements;\r\n","import React, { FC } from \"react\";\r\nimport ConfigLayoutHeader from \"@src/configLayout/header\";\r\nimport ConfigLayoutLeftAside from \"@src/configLayout/leftAside\";\r\nimport ConfigLayoutRightAside from \"@src/configLayout/rightAside\";\r\nimport ConfigLayoutMain from \"@src/configLayout/main\";\r\nimport ConfigLayoutLeftAsideElements from \"@src/configLayout/elements\";\r\n\r\nimport \"@src/configLayout/index.scss\";\r\ninterface IConfigLayout {}\r\n\r\nconst ConfigLayout: FC<IConfigLayout> = () => {\r\n  return (\r\n    <div className=\"cms-config-layout\">\r\n      <ConfigLayoutHeader\r\n        name=\"未命名微件\"\r\n        pageType=\"widget\"\r\n        modifyNameSuccessHander={(name) => {\r\n          console.log(name);\r\n        }}\r\n      />\r\n      <div className=\"cms-config-layout__content\">\r\n        <ConfigLayoutLeftAside\r\n          navs={[\"element\"]}\r\n          render={(data) => {\r\n            if (data === \"element\") {\r\n              return <ConfigLayoutLeftAsideElements />;\r\n            }\r\n            return null;\r\n          }}\r\n        />\r\n        <ConfigLayoutMain />\r\n        <ConfigLayoutRightAside\r\n          navs={[\"layer\", \"element\", \"widget\"]}\r\n          render={(data) => {\r\n            return <div>{data}</div>;\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConfigLayout;\r\n"],"names":["_ref","name","open","onClose","pageType","modifyNameSuccessHander","React","Modal","onCancel","footer","title","PAGETYPENAME","destroyOnClose","Form","onFinish","values","message","success","initialValues","autoComplete","Item","rules","required","Input","placeholder","Button","type","htmlType","block","logo","navigate","useNavigate","isModalNameOpen","setIsModalNameOpen","useState","className","dangerouslySetInnerHTML","__html","onClick","ModifyNameDialog","children","style","display","CloseOutlined","ALLTABS","icon","render","navs","current","setCurrent","tabs","setTabs","useEffect","filter","item","includes","map","key","Tooltip","placement","borderRight","Box","borderLeft","Ruler","arr","Array","from","keys","index","ConfigLayoutMain","Rule","width","height","background","ALLELEMENTS","ConfigLayoutLeftAsideElements","_elementsList$filter","_elementsList$filter2","getElements","elementsList","elementsLoading","elements","ELEMETSTYPE","id","draggable","Image","src","url","preview","length","Empty","image","PRESENTED_IMAGE_SIMPLE","ConfigLayout","ConfigLayoutHeader","console","log","ConfigLayoutLeftAside","data","ConfigLayoutRightAside"],"sourceRoot":""}