{"version":3,"file":"static/js/125.70610ed05f.chunk.js","mappings":"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","sources":["webpack://large-screen-configuration/./src/compoents/dragdrop/drag.ts","webpack://large-screen-configuration/./src/compoents/dragdrop/moveMask/index.tsx","webpack://large-screen-configuration/./src/compoents/dragdrop/previewItem/index.tsx","webpack://large-screen-configuration/./src/compoents/dragdrop/dragContent/index.tsx","webpack://large-screen-configuration/./src/elements/index.ts","webpack://large-screen-configuration/./src/elements/text/base/index.tsx","webpack://large-screen-configuration/./src/layout/configLayout/components/header/components/modifyNameDialog/index.tsx","webpack://large-screen-configuration/./src/layout/configLayout/components/header/index.tsx","webpack://large-screen-configuration/./src/layout/configLayout/components/main/components/rule/index.tsx","webpack://large-screen-configuration/./src/layout/configLayout/components/main/index.tsx","webpack://large-screen-configuration/./src/layout/configLayout/components/box/index.tsx","webpack://large-screen-configuration/./src/layout/configLayout/components/leftAside/index.tsx","webpack://large-screen-configuration/./src/compoents/dragdrop/dragItem/index.tsx","webpack://large-screen-configuration/./src/layout/configLayout/components/leftAside/components/elements/index.tsx","webpack://large-screen-configuration/./src/layout/configLayout/components/rightAside/index.tsx","webpack://large-screen-configuration/./src/layout/configLayout/components/rightAside/components/layer/index.tsx","webpack://large-screen-configuration/./src/layout/widgetLayout/index.tsx","webpack://large-screen-configuration/./src/pages/widgets/edit/index.tsx","webpack://large-screen-configuration/./src/core/config/elements/index.ts","webpack://large-screen-configuration/./src/core/config/elements/text/base.ts","webpack://large-screen-configuration/./src/core/config/base/box.ts","webpack://large-screen-configuration/./src/core/config/base/font.ts","webpack://large-screen-configuration/./src/core/config/base/data.ts","webpack://large-screen-configuration/./src/pages/widgets/edit/store/reducers.ts","webpack://large-screen-configuration/./src/pages/widgets/edit/store/type.ts"],"sourcesContent":["class DragStore<T extends IAnyObject> {\r\n  moveItem = new Map<string, T>();\r\n\r\n  set(key: string, data: T) {\r\n    this.moveItem.set(key, data);\r\n  }\r\n\r\n  remove(key: string) {\r\n    this.moveItem.delete(key);\r\n  }\r\n\r\n  get(key: string): undefined | T {\r\n    return this.moveItem.get(key);\r\n  }\r\n}\r\n\r\n/**\r\n * 拖拽临时数据\r\n */\r\nexport const dragStore = new DragStore<IAnyObject>();\r\n\r\n/**\r\n * 判断是否在当前四边形内\r\n * @param {*} p1 父容器\r\n * @param {*} p2\r\n * @returns\r\n *  对应是 左上角坐标 和 右下角坐标\r\n *  [0,0,1,1]  => 左上角坐标 0,0  右下角 1,1\r\n */\r\nexport const booleanWithin = (\r\n  p1: [number, number, number, number],\r\n  p2: [number, number, number, number]\r\n) => {\r\n  return p1[0] <= p2[0] && p1[1] <= p2[1] && p1[2] >= p2[2] && p1[3] >= p2[3];\r\n};\r\n\r\n/**\r\n * 判断是两四边形是否相交\r\n * @param {*} p1 父容器\r\n * @param {*} p2\r\n * @returns\r\n *  对应是 左上角坐标 和 右下角坐标\r\n *  [0,0,1,1]  => 左上角坐标 0,0  右下角 1,1\r\n */\r\nexport const booleanIntersects = (\r\n  p1: [number, number, number, number],\r\n  p2: [number, number, number, number]\r\n) => {\r\n  return !(\r\n    p1[2] <= p2[0] || // p1 在 p2 左边\r\n    p2[2] <= p1[0] || // p1 在 p2 右边\r\n    p1[3] <= p2[1] || // p1 在 p2 上边\r\n    // p1 在 p2 下边\r\n    p2[3] <= p1[1]\r\n  );\r\n};\r\n\r\n/**\r\n * 获取元素位置信息\r\n * @param {*} width 格子宽\r\n * @param {*} height 格子高\r\n * @param {*} x x 坐标\r\n * @param {*} y y 坐标\r\n * @param {*} gap 间隔\r\n * @param {*} column 元素占列数\r\n * @param {*} row 元素占行数\r\n * @returns\r\n */\r\nexport const getItemSizeStyle = (\r\n  width: number,\r\n  height: number,\r\n  x: number,\r\n  y: number,\r\n  gap: number,\r\n  column: number,\r\n  row: number\r\n) => {\r\n  return {\r\n    width: `${width * column + (column - 1) * gap}px`,\r\n    height: `${height * row + (row - 1) * gap}px`,\r\n    transform: `translate(${(width + gap) * (x - 1)}px,${\r\n      (height + gap) * (y - 1)\r\n    }px)`,\r\n  };\r\n};\r\n","import React, { FC, HtmlHTMLAttributes, ReactNode, useMemo } from \"react\";\r\nimport { getItemSizeStyle } from \"../drag\";\r\nimport \"./index.scss\";\r\n\r\ninterface IMoveMask extends HtmlHTMLAttributes<HTMLDivElement> {\r\n  /** 容器格子宽 */\r\n  width: number;\r\n  /** 容器格子高 */\r\n  height: number;\r\n  /** 格子间隔 */\r\n  gap: number;\r\n  /** 拖拽元素列数 */\r\n  column: number;\r\n  /** 拖拽元素行数 */\r\n  row: number;\r\n  /** 拖拽元素 x 坐标 */\r\n  x: number;\r\n  /** 拖拽元素 y 坐标 */\r\n  y: number;\r\n  children: ReactNode;\r\n}\r\n\r\nconst MoveMask: FC<IMoveMask> = ({\r\n  width = 0,\r\n  height = 0,\r\n  gap = 0,\r\n  column = 0,\r\n  row = 0,\r\n  x = 0,\r\n  y = 0,\r\n  style,\r\n  children,\r\n}) => {\r\n  // 获取遮罩层样式\r\n  const maskStyle = useMemo(() => {\r\n    return getItemSizeStyle(width, height, x, y, gap, column, row);\r\n  }, [column, gap, height, row, width, x, y]);\r\n  return (\r\n    <div className=\"cms-drag__moveMask\" style={{ ...maskStyle, ...style }}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MoveMask;\r\n","import React, {\r\n  HtmlHTMLAttributes,\r\n  useCallback,\r\n  useMemo,\r\n  useState,\r\n  memo,\r\n  ReactNode,\r\n} from \"react\";\r\nimport \"./index.scss\";\r\nimport { dragStore } from \"../drag\";\r\ninterface IPreviewItem extends HtmlHTMLAttributes<HTMLDivElement> {\r\n  data: IAnyObject;\r\n  onResizeStart?: () => void;\r\n  onResizeing?: (e: React.DragEvent<HTMLDivElement>) => void;\r\n  onResizeEnd?: () => void;\r\n  groupName?: string;\r\n  /**\r\n   * @param id 刪除的数据ID\r\n   * @returns\r\n   */\r\n  onCloseHander?: (id: string) => void;\r\n  children: ReactNode;\r\n}\r\n\r\nconst PreviewItem = memo((props: IPreviewItem) => {\r\n  const {\r\n    data,\r\n    style,\r\n    groupName,\r\n    onResizeStart,\r\n    onResizeing,\r\n    onResizeEnd,\r\n    onCloseHander,\r\n    children,\r\n  } = props;\r\n  const [moveing, setMoveing] = useState(false);\r\n  const [resizeing, setResizeing] = useState(false);\r\n  const previewStyles = useMemo(() => {\r\n    return {\r\n      gridArea: `${data.y} / ${data.x} / ${data.y + data.row}/ ${\r\n        data.x + data.column\r\n      }`,\r\n      ...(moveing\r\n        ? {\r\n            opacity: 0,\r\n            // 将当前元素移出容器外,将元素占位空置出来\r\n            transform: `translate(-999999999px, -9999999999px)`,\r\n          }\r\n        : {}),\r\n      ...(resizeing ? { opacity: 0.5 } : {}),\r\n    };\r\n  }, [data.column, data.row, data.x, data.y, moveing, resizeing]);\r\n  // 移动开始\r\n  const onDragStart = useCallback(\r\n    (e: React.DragEvent<HTMLDivElement>) => {\r\n      dragStore.set(groupName as string, {\r\n        ...data,\r\n        pageX: e.pageX,\r\n        pageY: e.pageY,\r\n      });\r\n      setTimeout(() => {\r\n        setMoveing(true);\r\n      }, 0);\r\n      setResizeing(false);\r\n    },\r\n    [data, groupName]\r\n  );\r\n  // 移动结束\r\n  const onDragEnd = useCallback(\r\n    (e: React.DragEvent<HTMLDivElement>) => {\r\n      setMoveing(false);\r\n      dragStore.remove(groupName as string);\r\n    },\r\n    [groupName]\r\n  );\r\n\r\n  const onMouseDown = useCallback(\r\n    (e: React.DragEvent<HTMLDivElement>) => {\r\n      dragStore.set(groupName as string, data);\r\n      setResizeing(true);\r\n      onResizeStart?.();\r\n    },\r\n    [data, groupName, onResizeStart]\r\n  );\r\n\r\n  const onMouseMove = useCallback(\r\n    (e: React.DragEvent<HTMLDivElement>) => {\r\n      e.preventDefault();\r\n      onResizeing?.(e);\r\n    },\r\n    [onResizeing]\r\n  );\r\n\r\n  const onMouseUp = useCallback(\r\n    (e: any) => {\r\n      onResizeEnd?.();\r\n      e.target.style.width = \"100%\";\r\n      e.target.style.height = \"100%\";\r\n      setResizeing(false);\r\n    },\r\n    [onResizeEnd]\r\n  );\r\n  return (\r\n    <div\r\n      className=\"cms-drag__preview--item\"\r\n      style={{ ...previewStyles, ...style }}\r\n      onDragStart={onDragStart}\r\n      draggable\r\n      onDragEnd={onDragEnd}\r\n      onMouseDown={onMouseDown}\r\n      onMouseMove={onMouseMove}\r\n      onMouseUp={onMouseUp}\r\n    >\r\n      {children}\r\n      <div\r\n        className=\"close\"\r\n        onClick={(e) => {\r\n          e.preventDefault();\r\n          onCloseHander?.(data.elementId);\r\n        }}\r\n      ></div>\r\n      <div className=\"resize\"></div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default PreviewItem;\r\n","import React, {\r\n  memo,\r\n  ReactNode,\r\n  useCallback,\r\n  useEffect,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport \"./index.scss\";\r\nimport { booleanIntersects, booleanWithin, dragStore } from \"../drag\";\r\nimport MoveMask from \"../moveMask\";\r\nimport { guid } from \"@src/utils\";\r\nimport PreviewItem from \"../previewItem\";\r\n\r\ninterface IDragContent {\r\n  datas: IAnyObject[];\r\n  /** 拖拽分组标识 */\r\n  groupName?: string;\r\n  /** 容器需要分隔列数 */\r\n  column: number;\r\n  /** 容器需要分隔行数 */\r\n  row: number;\r\n  /** 容器格子间隔 */\r\n  gap: number;\r\n  /** 是否显示拖拽预占位层 */\r\n  mask?: boolean;\r\n  /** drop时对比的id字段 */\r\n  field?: string;\r\n  /**\r\n   * @param isAdd 是否新增\r\n   * @param data 数据\r\n   * @returns\r\n   */\r\n  onDropHandler?: (isAdd: boolean, data: IAnyObject) => void;\r\n  /**\r\n   * @param data 改变的数据\r\n   * @returns\r\n   */\r\n  onResizeEndHandler?: (data: IAnyObject) => void;\r\n  /**\r\n   * @param id 刪除的数据ID\r\n   * @returns\r\n   */\r\n  onCloseHander?: (id: string) => void;\r\n\r\n  renderPreview?: (data: IAnyObject) => ReactNode;\r\n}\r\n\r\nconst DragContent = memo((props: IDragContent) => {\r\n  const {\r\n    groupName,\r\n    column,\r\n    row,\r\n    gap,\r\n    mask = true,\r\n    field = \"id\",\r\n    onDropHandler,\r\n    datas,\r\n    onResizeEndHandler,\r\n    onCloseHander,\r\n    renderPreview,\r\n  } = props;\r\n  // 目标元素\r\n  const target = useRef<HTMLDivElement>(null);\r\n  // 宽高\r\n  const [clientRect, setClientRect] = useState({\r\n    width: 0,\r\n    height: 0,\r\n    x: 0,\r\n    y: 0,\r\n  });\r\n  const [resizeEnd, setResizeEnd] = useState(false);\r\n  // 拖拽中的元素\r\n  const [current, setCuurent] = useState<IAnyObject>({});\r\n  // 动态计算目标元素的宽高\r\n  const getClientRect = useCallback(() => {\r\n    if (!target.current) return;\r\n    const { width, height, x, y } = (\r\n      target.current as HTMLDivElement\r\n    )?.getBoundingClientRect();\r\n    setClientRect({\r\n      width: (width - (column - 1) * gap) / column,\r\n      height: (height - (row - 1) * gap) / row,\r\n      x: x,\r\n      y: y,\r\n    });\r\n  }, [column, gap, row]);\r\n  useEffect(() => {\r\n    getClientRect();\r\n    const resizeObserver = new ResizeObserver((entries) => {\r\n      if (!Array.isArray(entries) || !entries.length) {\r\n        return;\r\n      }\r\n      getClientRect();\r\n    });\r\n\r\n    resizeObserver.observe(target.current as HTMLDivElement);\r\n    return () => {\r\n      resizeObserver.disconnect();\r\n    };\r\n  }, [getClientRect]);\r\n  // 判断是否可放置\r\n  const isPutDown = useMemo(() => {\r\n    const currentXy: [number, number, number, number] = [\r\n      current.x,\r\n      current.y,\r\n      current.x + current.column - 1,\r\n      current.y + current.row - 1,\r\n    ];\r\n    return (\r\n      booleanWithin([0, 0, column, row], currentXy) &&\r\n      datas.every(\r\n        (item) =>\r\n          item[field] === current[field] ||\r\n          !booleanIntersects(\r\n            [item.x - 1, item.y - 1, item.x + item.column, item.y + item.row],\r\n            currentXy\r\n          )\r\n      )\r\n    );\r\n  }, [column, current, datas, field, row]);\r\n\r\n  // 计算 x 坐标\r\n  const getX = useCallback(\r\n    (num: number) =>\r\n      parseInt(String((num - clientRect.x) / (clientRect.width + gap))) + 1,\r\n    [clientRect.width, clientRect.x, gap]\r\n  );\r\n  // 计算 y 坐标\r\n  const getY = useCallback(\r\n    (num: number) =>\r\n      parseInt(String((num - clientRect.y) / (clientRect.height + gap))) + 1,\r\n    [clientRect.height, clientRect.y, gap]\r\n  );\r\n  // 计算列数\r\n  const getColumn = useCallback(\r\n    (num: number) => Math.max(1, Math.ceil(num / (clientRect.width + gap))),\r\n    [clientRect.width, gap]\r\n  );\r\n  // 计算行数\r\n  const getRow = useCallback(\r\n    (num: number) => Math.max(1, Math.ceil(num / (clientRect.height + gap))),\r\n    [clientRect.height, gap]\r\n  );\r\n  // 进入放置目标\r\n  const onDragEnter = useCallback(\r\n    (e: React.DragEvent<HTMLDivElement>) => {\r\n      e.preventDefault();\r\n      const dragData = dragStore.get(groupName as string);\r\n      if (dragData) {\r\n        setCuurent((state) => ({\r\n          ...state,\r\n          ...dragData,\r\n          x: getX(e.pageX),\r\n          y: getY(e.pageY),\r\n          show: true,\r\n        }));\r\n      }\r\n      console.log(\"onDragEnter\");\r\n    },\r\n    [getX, getY, groupName]\r\n  );\r\n  // 在目标中移动\r\n  const onDragOver = useCallback(\r\n    (e: React.DragEvent<HTMLDivElement>) => {\r\n      e.preventDefault();\r\n      const dragData = dragStore.get(groupName as string);\r\n      if (dragData) {\r\n        setCuurent((state) => ({\r\n          ...state,\r\n          ...dragData,\r\n          x: getX(e.pageX),\r\n          y: getY(e.pageY),\r\n          show: true,\r\n        }));\r\n      }\r\n      console.log(\"onDragOver\");\r\n    },\r\n    [getX, getY, groupName]\r\n  );\r\n  // 离开目标\r\n  const onDragLeave = useCallback(\r\n    (e: React.DragEvent<HTMLDivElement>) => {\r\n      e.preventDefault();\r\n      setCuurent((state) => ({\r\n        ...state,\r\n        show: false,\r\n        [field]: undefined,\r\n      }));\r\n      console.log(\"onDragLeave\");\r\n    },\r\n    [field]\r\n  );\r\n  // 放置在目标上\r\n  const onDrop = useCallback(\r\n    (e: React.DragEvent<HTMLDivElement>) => {\r\n      const dragData = dragStore.get(groupName as string);\r\n      e.preventDefault();\r\n      setCuurent((state) => ({\r\n        ...state,\r\n        show: false,\r\n      }));\r\n      if (isPutDown) {\r\n        onDropHandler &&\r\n          onDropHandler(!Boolean(dragData && dragData[field]), {\r\n            ...dragData,\r\n            ...current,\r\n            [field]: dragData && dragData[field] ? dragData[field] : guid(),\r\n          });\r\n      }\r\n      console.log(\"onDrop\");\r\n    },\r\n    [current, field, groupName, isPutDown, onDropHandler]\r\n  );\r\n  // 调整大小开始\r\n  const onResizeStart = useCallback(() => {\r\n    const dragData = dragStore.get(groupName as string);\r\n    if (dragData) {\r\n      setResizeEnd(false);\r\n      setCuurent((state) => ({\r\n        ...state,\r\n        ...dragData,\r\n        show: true,\r\n      }));\r\n    }\r\n  }, [groupName]);\r\n  // 调正大小时\r\n  const onResizeing = useCallback(\r\n    (e: any) => {\r\n      setResizeEnd(false);\r\n      setCuurent((state) => ({\r\n        ...state,\r\n        column: getColumn(e.target.offsetWidth),\r\n        row: getRow(e.target.offsetHeight),\r\n      }));\r\n    },\r\n    [getColumn, getRow]\r\n  );\r\n  // 调整大小结束\r\n  const onResizeEnd = useCallback(() => {\r\n    setResizeEnd(true);\r\n    setCuurent((state) => ({\r\n      ...state,\r\n      show: false,\r\n    }));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const dragData = dragStore.get(groupName as string);\r\n    if (resizeEnd && isPutDown) {\r\n      if (\r\n        dragData?.column !== current.column ||\r\n        dragData?.row !== current.row\r\n      ) {\r\n        console.log(dragData, current, groupName, \"update onResizeEndHandler\");\r\n        onResizeEndHandler?.(current);\r\n        setResizeEnd(false);\r\n      }\r\n    }\r\n  }, [onResizeEndHandler, current, groupName, resizeEnd, isPutDown]);\r\n\r\n  return (\r\n    <div\r\n      ref={target}\r\n      className=\"cms-drag__content\"\r\n      onDragEnter={onDragEnter}\r\n      onDragOver={onDragOver}\r\n      onDragLeave={onDragLeave}\r\n      onDrop={onDrop}\r\n    >\r\n      <div\r\n        className=\"cms-drag__content--container\"\r\n        style={{\r\n          display: \"grid\",\r\n          gap: `${gap}px`,\r\n          gridTemplateColumns: `repeat(${column}, ${clientRect.width}px)`,\r\n          gridTemplateRows: `repeat(${row},  ${clientRect.height}px)`,\r\n          width: \"100%\",\r\n          height: \"100%\",\r\n        }}\r\n      >\r\n        {new Array(column * row).fill(null).map((_, index) => (\r\n          <div key={index}></div>\r\n        ))}\r\n      </div>\r\n      <div\r\n        className=\"cms-drag__preview\"\r\n        style={{\r\n          display: \"grid\",\r\n          gap: `${gap}px`,\r\n          gridTemplateColumns: `repeat(${column}, ${clientRect.width}px)`,\r\n          gridTemplateRows: `repeat(${row},  ${clientRect.height}px)`,\r\n          width: \"100%\",\r\n          height: \"100%\",\r\n        }}\r\n      >\r\n        {datas.map((item) => (\r\n          <PreviewItem\r\n            key={item[field]}\r\n            data={item}\r\n            groupName={groupName}\r\n            style={{\r\n              pointerEvents:\r\n                current.show && item[field] !== current[field] ? \"none\" : \"all\",\r\n            }}\r\n            onResizeStart={onResizeStart}\r\n            onResizeing={onResizeing}\r\n            onResizeEnd={onResizeEnd}\r\n            onCloseHander={onCloseHander}\r\n          >\r\n            {renderPreview?.(item)}\r\n          </PreviewItem>\r\n        ))}\r\n\r\n        {mask ? (\r\n          <MoveMask\r\n            style={{\r\n              display: current?.show ? \"flex\" : \"none\",\r\n              background: isPutDown\r\n                ? \"var(--cms-divider-color)\"\r\n                : \"var(--cms-color-help)\",\r\n            }}\r\n            width={clientRect.width}\r\n            height={clientRect.height}\r\n            gap={gap}\r\n            column={current?.column}\r\n            row={current?.row}\r\n            x={current?.x}\r\n            y={current?.y}\r\n          >\r\n            {isPutDown ? \"可放置\" : \"不可放置\"}\r\n          </MoveMask>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default DragContent;\r\n","import { BaseText } from \"./text\";\r\n\r\nconst elements: any = {\r\n  BaseText: BaseText,\r\n};\r\nexport default elements;\r\n","import { getStyles } from \"@src/utils\";\r\nimport React, { FC } from \"react\";\r\n\r\ninterface IBaseText {\r\n  data: any;\r\n  field: string;\r\n  options: any;\r\n}\r\n// 基础文本框\r\nexport const BaseText: FC<IBaseText> = ({ data, field, options }) => {\r\n  return (\r\n    <div style={getStyles(options)}>\r\n      {data && data[field] ? data[field] : \"文本框\"}\r\n    </div>\r\n  );\r\n};\r\n","import React, { FC } from \"react\";\r\nimport {\r\n  Modal,\r\n  ModalProps,\r\n  Form,\r\n  type FormProps,\r\n  Input,\r\n  Button,\r\n  message,\r\n} from \"antd\";\r\nimport { PAGETYPENAME } from \"@src/core/enums/access.enums\";\r\n\r\ninterface ImodifyNameDialog extends ModalProps {\r\n  onClose: () => void;\r\n  // 名称\r\n  name: string;\r\n  // 类型\r\n  pageType: PageType;\r\n  // 修改名称成功函数\r\n  modifyNameSuccessHander?: (name: string) => void;\r\n}\r\n\r\ntype FieldType = {\r\n  name: string;\r\n};\r\n\r\nconst modifyNameDialog: FC<ImodifyNameDialog> = ({\r\n  name,\r\n  open,\r\n  onClose,\r\n  pageType,\r\n  modifyNameSuccessHander,\r\n}) => {\r\n  const onFinish: FormProps<FieldType>[\"onFinish\"] = (values) => {\r\n    modifyNameSuccessHander?.(values.name);\r\n    message.success(\"修改成功\");\r\n    onClose();\r\n  };\r\n  return (\r\n    <Modal\r\n      open={open}\r\n      onClose={onClose}\r\n      onCancel={onClose}\r\n      footer={null}\r\n      title={`修改${PAGETYPENAME[pageType]}名称`}\r\n      destroyOnClose\r\n    >\r\n      <Form\r\n        onFinish={onFinish}\r\n        initialValues={{ name: name || \"\" }}\r\n        autoComplete=\"off\"\r\n      >\r\n        <Form.Item<FieldType>\r\n          name=\"name\"\r\n          rules={[\r\n            { required: true, message: `请输入${PAGETYPENAME[pageType]}名称` },\r\n          ]}\r\n        >\r\n          <Input placeholder={`请输入${PAGETYPENAME[pageType]}名称`} />\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\" block>\r\n            保存\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default modifyNameDialog;\r\n","import React, { FC, useState } from \"react\";\r\nimport \"./index.scss\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport ModifyNameDialog from \"./components/modifyNameDialog\";\r\n\r\ninterface IConfigLayoutHeader {\r\n  // 类型\r\n  pageType: PageType;\r\n  // 名称\r\n  name?: string;\r\n  // 页面logo\r\n  logo?: string;\r\n  // 预览函数\r\n  previewHandler?: () => void;\r\n  // 发布函数\r\n  publishHandler?: () => void;\r\n  // 修改名称成功函数\r\n  modifyNameSuccessHander?: (name: string) => void;\r\n}\r\n\r\nexport const ConfigLayoutHeader: FC<IConfigLayoutHeader> = ({\r\n  name,\r\n  logo,\r\n  pageType,\r\n  modifyNameSuccessHander,\r\n}) => {\r\n  const navigate = useNavigate();\r\n  const [isModalNameOpen, setIsModalNameOpen] = useState(false);\r\n  return (\r\n    <>\r\n      <div className=\"cms-config-layout__header\">\r\n        <div className=\"cms-config-layout__header--left\">\r\n          <span\r\n            className=\"cms-icon logo\"\r\n            dangerouslySetInnerHTML={{ __html: logo || \"&#xe625;\" }}\r\n          ></span>\r\n          <h1 className=\"name\">{name}</h1>\r\n          <span\r\n            className=\"cms-icon edit\"\r\n            onClick={() => setIsModalNameOpen(true)}\r\n          >\r\n            &#xec88;\r\n          </span>\r\n        </div>\r\n        <div className=\"cms-config-layout__header--right\">\r\n          <div className=\"preview\">\r\n            <i className=\"cms-icon\">&#xe668;</i>预览\r\n          </div>\r\n          <div className=\"publish\">\r\n            <i className=\"cms-icon\">&#xe620;</i>发布\r\n          </div>\r\n          <div className=\"preview\" onClick={() => navigate(-1)}>\r\n            <i className=\"cms-icon\">&#xe720;</i>返回\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <ModifyNameDialog\r\n        name={name || \"\"}\r\n        pageType={pageType}\r\n        open={isModalNameOpen}\r\n        onClose={() => setIsModalNameOpen(false)}\r\n        modifyNameSuccessHander={modifyNameSuccessHander}\r\n      ></ModifyNameDialog>\r\n    </>\r\n  );\r\n};\r\n","import React, { FC } from \"react\";\r\nimport \"./index.scss\";\r\n\r\ninterface IRulerProps {}\r\n\r\nconst Ruler: FC<IRulerProps> = () => {\r\n  const arr = Array.from(new Array(100).keys());\r\n\r\n  return (\r\n    <div className=\"cms-config-layout__ruler\">\r\n      <div className=\"cms-config-layout__ruler--hwrapper\">\r\n        <div className=\"cms-config-layout__ruler--h\">\r\n          <span className=\"ruler-h-50\">\r\n            <b>50</b>\r\n            <i></i>\r\n            <i></i>\r\n            <i></i>\r\n            <i></i>\r\n            <i></i>\r\n            <i></i>\r\n            <i></i>\r\n            <i></i>\r\n            <i></i>\r\n            <i></i>\r\n          </span>\r\n          {arr.map((item: any, index: number) => (\r\n            <span className=\"ruler-h-50\" key={index}>\r\n              <b>{index * 50}</b>\r\n              <i></i>\r\n              <i></i>\r\n              <i></i>\r\n              <i></i>\r\n              <i></i>\r\n              <i></i>\r\n              <i></i>\r\n              <i></i>\r\n              <i></i>\r\n              <i></i>\r\n            </span>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className=\"cms-config-layout__ruler--vwrapper\">\r\n        <div className=\"cms-config-layout__ruler--v\">\r\n          <span className=\"ruler-h-50\">\r\n            <b>50</b>\r\n            <i></i>\r\n            <i></i>\r\n            <i></i>\r\n            <i></i>\r\n            <i></i>\r\n            <i></i>\r\n            <i></i>\r\n            <i></i>\r\n            <i></i>\r\n            <i></i>\r\n          </span>\r\n          {arr.map((item: any, index: number) => (\r\n            <span className=\"ruler-h-50\" key={index}>\r\n              <b>{index * 50}</b>\r\n              <i></i>\r\n              <i></i>\r\n              <i></i>\r\n              <i></i>\r\n              <i></i>\r\n              <i></i>\r\n              <i></i>\r\n              <i></i>\r\n              <i></i>\r\n              <i></i>\r\n            </span>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Ruler;\r\n","import React, { FC, ReactNode } from \"react\";\r\nimport Rule from \"./components/rule\";\r\nimport \"./index.scss\";\r\ninterface IConfigLayoutMain {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const ConfigLayoutMain: FC<IConfigLayoutMain> = ({ children }) => {\r\n  return (\r\n    <div className=\"cms-config-layout__main\">\r\n      <div className=\"cms-config-layout__center\">\r\n        <Rule />\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { FC, ReactNode } from \"react\";\r\nimport \"./index.scss\";\r\nimport { CloseOutlined } from \"@ant-design/icons\";\r\ninterface IBox {\r\n  title: string;\r\n  children: ReactNode;\r\n  onClose: () => void;\r\n}\r\n\r\nconst Box: FC<IBox> = ({ title, children, onClose }) => {\r\n  return (\r\n    <div className=\"cms-box\" style={{ display: title ? \"flex\" : \"none\" }}>\r\n      <div className=\"cms-box__header\">\r\n        <div className=\"name\">{title}</div>\r\n        <CloseOutlined onClick={onClose} />\r\n      </div>\r\n      <div className=\"cms-box__body\">{children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Box;\r\n","import React, { FC, ReactNode, useEffect, useState } from \"react\";\r\nimport { PAGETYPENAME } from \"@src/core/enums/access.enums\";\r\nimport { Tooltip } from \"antd\";\r\nimport Box from \"../box\";\r\nimport \"./index.scss\";\r\ninterface IConfigLayoutLeftAside {\r\n  navs: PageType[];\r\n  render: (data: PageType | \"\") => ReactNode;\r\n}\r\n\r\ninterface ITabItem {\r\n  icon: string;\r\n  type: PageType;\r\n}\r\n\r\nconst ALLTABS: ITabItem[] = [\r\n  {\r\n    icon: \"&#xe652;\",\r\n    type: \"element\",\r\n  },\r\n  {\r\n    icon: \"&#xe634;\",\r\n    type: \"widget\",\r\n  },\r\n  {\r\n    icon: \"&#xe652;\",\r\n    type: \"page\",\r\n  },\r\n];\r\n\r\nexport const ConfigLayoutLeftAside: FC<IConfigLayoutLeftAside> = ({\r\n  render,\r\n  navs,\r\n}) => {\r\n  const [current, setCurrent] = useState<PageType | \"\">(\"element\");\r\n  const [tabs, setTabs] = useState<ITabItem[]>([]);\r\n\r\n  useEffect(() => {\r\n    setTabs(() => {\r\n      return ALLTABS.filter((item) => navs.includes(item.type));\r\n    });\r\n    setCurrent(navs[0]);\r\n  }, [navs, setTabs, setCurrent]);\r\n  return (\r\n    <div className=\"cms-config-layout__leftAside\">\r\n      <ul className=\"cms-config-layout__leftAside--tabs\">\r\n        {tabs.map((item) => (\r\n          <li\r\n            className={`cms-config-layout__leftAside--tabItem ${\r\n              current === item.type ? \"is-active\" : \"\"\r\n            }`}\r\n            onClick={() => setCurrent(item.type)}\r\n            key={item.type}\r\n          >\r\n            <Tooltip placement=\"left\" title={PAGETYPENAME[item.type]}>\r\n              <i\r\n                className=\"cms-icon\"\r\n                dangerouslySetInnerHTML={{ __html: item.icon }}\r\n              ></i>\r\n            </Tooltip>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <div\r\n        className=\"cms-config-layout__leftAside--tabContent\"\r\n        style={{\r\n          borderRight: current ? \"1px solid var(--cms-divider-color)\" : \"none\",\r\n        }}\r\n      >\r\n        <Box\r\n          title={current ? PAGETYPENAME[current] : \"\"}\r\n          onClose={() => setCurrent(\"\")}\r\n        >\r\n          {render(current)}\r\n        </Box>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { FC, ReactNode } from \"react\";\r\nimport { dragStore } from \"../drag\";\r\nimport \"./index.scss\";\r\n\r\ninterface IDragItem {\r\n  data: IAnyObject;\r\n  title: string;\r\n  children: ReactNode;\r\n  /** 拖拽分组标识 */\r\n  groupName?: string;\r\n}\r\n\r\nconst DragItem: FC<IDragItem> = ({\r\n  title,\r\n  children,\r\n  data,\r\n  groupName = \"DrapDrop\",\r\n}) => {\r\n  const onDragStart = (e: React.DragEvent<HTMLDivElement>) => {\r\n    dragStore.set(groupName, data);\r\n  };\r\n  const onDragEnd = (e: React.DragEvent<HTMLDivElement>) => {\r\n    dragStore.remove(groupName);\r\n  };\r\n  return (\r\n    <div\r\n      className=\"cms-drag__item\"\r\n      draggable\r\n      onDragStart={onDragStart}\r\n      onDragEnd={onDragEnd}\r\n    >\r\n      <div className=\"cms-drag__item--body\">{children}</div>\r\n      <div className=\"cms-drag__item--footer\">{title}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DragItem;\r\n","import React, { FC, useEffect, useState } from \"react\";\r\nimport { ELEMETSTYPE } from \"@src/core/enums/access.enums\";\r\nimport { elements } from \"@src/core/hook\";\r\nimport { Empty, Image } from \"antd\";\r\nimport DragItem from \"@src/compoents/dragdrop/dragItem\";\r\nimport \"./index.scss\";\r\ninterface IConfigLayoutLeftAsideElements {}\r\n\r\nconst ALLELEMENTS: elementsType[] = [\r\n  \"text\",\r\n  \"image\",\r\n  \"table\",\r\n  \"line\",\r\n  \"bar\",\r\n  \"pie\",\r\n];\r\n\r\nexport const ConfigLayoutLeftAsideElements: FC<\r\n  IConfigLayoutLeftAsideElements\r\n> = () => {\r\n  const [current, setCurrent] = useState<elementsType>(\"text\");\r\n  const { getElements, elementsList, elementsLoading } = elements();\r\n  useEffect(() => {\r\n    getElements();\r\n  }, [getElements]);\r\n  return (\r\n    <div className=\"cms-config-layout__elements\">\r\n      <ul className=\"cms-config-layout__elements--left\">\r\n        {ALLELEMENTS.map((item) => (\r\n          <div\r\n            key={item}\r\n            className={current === item ? \"is-active\" : \"\"}\r\n            onClick={() => setCurrent(item)}\r\n          >\r\n            {ELEMETSTYPE[item]}\r\n          </div>\r\n        ))}\r\n      </ul>\r\n      <div className=\"cms-config-layout__elements--right\">\r\n        {elementsList\r\n          .filter((item) => item.type === current)\r\n          ?.map((item) => (\r\n            <DragItem\r\n              title={item.name}\r\n              data={item}\r\n              groupName=\"elements\"\r\n              key={item.id}\r\n            >\r\n              <Image width={224} height={120} src={item.url} preview={false} />\r\n            </DragItem>\r\n          ))}\r\n        {!elementsLoading &&\r\n          !elementsList.filter((item) => item.type === current)?.length && (\r\n            <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n          )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { FC, ReactNode, useEffect, useState } from \"react\";\r\nimport { PAGETYPENAME } from \"@src/core/enums/access.enums\";\r\nimport { Tooltip } from \"antd\";\r\nimport Box from \"../box\";\r\nimport \"./index.scss\";\r\ninterface IConfigLayoutRightAside {\r\n  render: (data: PageType | \"\") => ReactNode;\r\n  navs: PageType[];\r\n}\r\n\r\ninterface ITabItem {\r\n  icon: string;\r\n  type: PageType;\r\n}\r\n\r\nconst ALLTABS: ITabItem[] = [\r\n  {\r\n    icon: \"&#xe63c;\",\r\n    type: \"layer\",\r\n  },\r\n  {\r\n    icon: \"&#xe652;\",\r\n    type: \"element\",\r\n  },\r\n  {\r\n    icon: \"&#xe634;\",\r\n    type: \"widget\",\r\n  },\r\n  {\r\n    icon: \"&#xe652;\",\r\n    type: \"page\",\r\n  },\r\n  {\r\n    icon: \"&#xe652;\",\r\n    type: \"linkage\",\r\n  },\r\n];\r\n\r\nexport const ConfigLayoutRightAside: FC<IConfigLayoutRightAside> = ({\r\n  render,\r\n  navs,\r\n}) => {\r\n  const [current, setCurrent] = useState<PageType | \"\">(\"element\");\r\n  const [tabs, setTabs] = useState<ITabItem[]>([]);\r\n\r\n  useEffect(() => {\r\n    setTabs(() => {\r\n      return ALLTABS.filter((item) => navs.includes(item.type));\r\n    });\r\n    setCurrent(navs[0]);\r\n  }, [navs, setTabs, setCurrent]);\r\n  return (\r\n    <div className=\"cms-config-layout__rightAside\">\r\n      <div\r\n        className=\"cms-config-layout__rightAside--tabContent\"\r\n        style={{\r\n          borderLeft: current ? \"1px solid var(--cms-divider-color)\" : \"none\",\r\n        }}\r\n      >\r\n        <Box\r\n          title={`${current ? PAGETYPENAME[current] + \"配置\" : \"\"}`}\r\n          onClose={() => setCurrent(\"\")}\r\n        >\r\n          {render(current)}\r\n        </Box>\r\n      </div>\r\n      <ul className=\"cms-config-layout__rightAside--tabs\">\r\n        {tabs.map((item) => (\r\n          <li\r\n            className={`cms-config-layout__rightAside--tabItem ${\r\n              current === item.type ? \"is-active\" : \"\"\r\n            }`}\r\n            onClick={() => setCurrent(item.type)}\r\n            key={item.type}\r\n          >\r\n            <Tooltip placement=\"left\" title={`${PAGETYPENAME[item.type]}配置`}>\r\n              <i\r\n                className=\"cms-icon\"\r\n                dangerouslySetInnerHTML={{ __html: item.icon }}\r\n              ></i>\r\n            </Tooltip>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n","import { FolderOpenOutlined, FolderOutlined } from \"@ant-design/icons\";\r\nimport { IWidget } from \"@src/service\";\r\nimport React, { FC } from \"react\";\r\nimport \"./index.scss\";\r\n\r\ninterface IConfigLayoutRightAsideLayer {\r\n  datas: IWidget[];\r\n  widgetId?: string;\r\n  elementId?: string;\r\n  onSelected: (widgetId: string, elementId?: string) => void;\r\n}\r\n\r\nexport const ConfigLayoutRightAsideLayer: FC<IConfigLayoutRightAsideLayer> = ({\r\n  datas,\r\n  widgetId,\r\n  elementId,\r\n  onSelected,\r\n}) => {\r\n  return (\r\n    <div className=\"cms-config-layout__layer\">\r\n      {datas.map((widget, index) => (\r\n        <div\r\n          key={widget.widgetId || index}\r\n          className=\"cms-config-layout__layer--item\"\r\n        >\r\n          <div\r\n            className={`name ${\r\n              widgetId === widget.widgetId ? \"is-active\" : \"\"\r\n            }`}\r\n            onClick={() => onSelected(widget.widgetId)}\r\n          >\r\n            <FolderOpenOutlined /> {widget.name}\r\n          </div>\r\n          <div className=\"content\">\r\n            {widget.elements.map((element) => (\r\n              <div\r\n                key={element.elementId}\r\n                className={`${\r\n                  elementId === element.elementId ? \"is-active\" : \"\"\r\n                }`}\r\n                onClick={() => onSelected(widget.widgetId, element.elementId)}\r\n              >\r\n                <FolderOutlined /> {element.name}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React, { FC, ReactNode } from \"react\";\r\nimport \"./index.scss\";\r\ninterface IWidgetLayout {\r\n  header: ReactNode;\r\n  body: ReactNode;\r\n}\r\n\r\nconst WidgetLayout: FC<IWidgetLayout> = ({ header, body }) => {\r\n  return (\r\n    <div className=\"cms-widget\">\r\n      <div className=\"cms-widget__header\">{header}</div>\r\n      <div className=\"cms-widget__body\">{body}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WidgetLayout;\r\n","import React, { FC, useCallback, useEffect, useMemo, useReducer } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport DragContent from \"@src/compoents/dragdrop/dragContent\";\r\nimport elements from \"@src/elements\";\r\nimport {\r\n  ConfigLayoutHeader,\r\n  ConfigLayoutMain,\r\n  ConfigLayoutLeftAside,\r\n  ConfigLayoutRightAside,\r\n  ConfigLayoutLeftAsideElements,\r\n  ConfigLayoutRightAsideLayer,\r\n} from \"@src/layout/configLayout\";\r\n\r\nimport \"@src/layout/configLayout/index.scss\";\r\nimport WidgetLayout from \"@src/layout/widgetLayout\";\r\nimport { initialState, widgetReducer } from \"./store/reducers\";\r\nimport { IElement } from \"@src/service\";\r\nimport { capitalizeFirstLetter, guid } from \"@src/utils\";\r\ninterface IConfigLayout {}\r\n\r\nconst ConfigLayout: FC<IConfigLayout> = () => {\r\n  let location = useLocation();\r\n  const [layout, dispatch] = useReducer(widgetReducer, initialState);\r\n\r\n  useEffect(() => {\r\n    const queryParams = new URLSearchParams(location.search);\r\n    // 编辑\r\n    if (queryParams.size) {\r\n    } else {\r\n      // 新增\r\n      dispatch({\r\n        type: \"WIDGET\",\r\n        data: {\r\n          name: \"未命名微件\",\r\n          url: \"\",\r\n          id: \"\",\r\n          createTime: \"\",\r\n          type: \"text\",\r\n          count: 0,\r\n          x: 0,\r\n          y: 0,\r\n          column: 1,\r\n          row: 1,\r\n          widgetId: guid(),\r\n          configuration: {},\r\n          elements: [],\r\n        },\r\n      });\r\n    }\r\n  }, [location]);\r\n\r\n  const onDropHandler = (\r\n    position: \"header\" | \"body\",\r\n    isAdd: boolean,\r\n    data: IAnyObject\r\n  ) => {\r\n    // 新增\r\n    if (isAdd) {\r\n      dispatch({\r\n        type: \"ADD_ELEMENT\",\r\n        data: {\r\n          ...data,\r\n          position: position,\r\n        } as IElement,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: \"MODIFY_ELEMENT\",\r\n        data: {\r\n          ...data,\r\n          position: position,\r\n        } as IElement,\r\n      });\r\n    }\r\n  };\r\n\r\n  const onResizeEndHandler = useCallback((data: IAnyObject) => {\r\n    dispatch({\r\n      type: \"MODIFY_ELEMENT\",\r\n      data: { ...data },\r\n    });\r\n  }, []);\r\n\r\n  const onCloseHander = useCallback((id: string) => {\r\n    console.log(id, \"onCloseHander\");\r\n    dispatch({\r\n      type: \"DELETE_ELEMENT\",\r\n      id,\r\n    });\r\n  }, []);\r\n\r\n  const renderPreview = useCallback((data: IAnyObject) => {\r\n    if (data.element && elements[capitalizeFirstLetter(data.element)]) {\r\n      return React.createElement(\r\n        elements[capitalizeFirstLetter(data.element)],\r\n        {\r\n          options: data.configureValue,\r\n        }\r\n      );\r\n    }\r\n    return <div>你访问的组件不存在请联系售后人员</div>;\r\n  }, []);\r\n  // 判断右侧边栏所需模块\r\n  const rightAside = useMemo(() => {\r\n    let arr: PageType[] = [];\r\n    if (layout?.widgetId) {\r\n      if (layout?.elementId) {\r\n        arr = [\"layer\", \"element\", \"widget\", \"linkage\"];\r\n      } else {\r\n        arr = [\"layer\", \"widget\", \"linkage\"];\r\n      }\r\n    } else {\r\n      arr = [\"layer\", \"linkage\"];\r\n    }\r\n    return arr;\r\n  }, [layout?.elementId, layout?.widgetId]);\r\n\r\n  const onSelected = useCallback(\r\n    (widgetId: string, elementId: string | undefined) => {\r\n      if (elementId && layout?.elementId !== elementId) {\r\n        dispatch({\r\n          type: \"SELECT_ELEMENT\",\r\n          id: elementId,\r\n        });\r\n      }\r\n    },\r\n    [layout?.elementId]\r\n  );\r\n\r\n  return (\r\n    <div className=\"cms-config-layout\">\r\n      <ConfigLayoutHeader\r\n        name={layout?.widget.name}\r\n        pageType=\"widget\"\r\n        modifyNameSuccessHander={(name) => {\r\n          dispatch({\r\n            type: \"MODIFY_WIDGET\",\r\n            data: {\r\n              name: name,\r\n            },\r\n          });\r\n        }}\r\n      />\r\n      <div className=\"cms-config-layout__content\">\r\n        <ConfigLayoutLeftAside\r\n          navs={[\"element\"]}\r\n          render={(data) => {\r\n            if (data === \"element\") {\r\n              return <ConfigLayoutLeftAsideElements />;\r\n            }\r\n            return null;\r\n          }}\r\n        />\r\n        <ConfigLayoutMain>\r\n          <WidgetLayout\r\n            header={\r\n              <DragContent\r\n                column={8}\r\n                row={1}\r\n                gap={4}\r\n                groupName=\"elements\"\r\n                field=\"elementId\"\r\n                datas={\r\n                  layout?.widget.elements.filter(\r\n                    (item) => item.position === \"header\"\r\n                  ) || []\r\n                }\r\n                onDropHandler={(isAdd, data) =>\r\n                  onDropHandler(\"header\", isAdd, data)\r\n                }\r\n                onResizeEndHandler={onResizeEndHandler}\r\n                onCloseHander={onCloseHander}\r\n                renderPreview={renderPreview}\r\n              />\r\n            }\r\n            body={\r\n              <DragContent\r\n                column={8}\r\n                row={8}\r\n                gap={4}\r\n                groupName=\"elements\"\r\n                field=\"elementId\"\r\n                datas={\r\n                  layout?.widget.elements.filter(\r\n                    (item) => item.position === \"body\"\r\n                  ) || []\r\n                }\r\n                onDropHandler={(isAdd, data) =>\r\n                  onDropHandler(\"body\", isAdd, data)\r\n                }\r\n                onResizeEndHandler={onResizeEndHandler}\r\n                onCloseHander={onCloseHander}\r\n                renderPreview={renderPreview}\r\n              />\r\n            }\r\n          />\r\n        </ConfigLayoutMain>\r\n        <ConfigLayoutRightAside\r\n          navs={rightAside}\r\n          render={(data) => {\r\n            if (data === \"layer\") {\r\n              return (\r\n                <ConfigLayoutRightAsideLayer\r\n                  datas={layout?.widget ? [layout?.widget] : []}\r\n                  widgetId={layout?.widgetId}\r\n                  elementId={layout?.elementId}\r\n                  onSelected={onSelected}\r\n                />\r\n              );\r\n            }\r\n            return <div>{data}</div>;\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConfigLayout;\r\n","import { baseText } from \"./text\";\r\n\r\nconst elementsConfig = {\r\n  baseText,\r\n};\r\n\r\nexport default elementsConfig;\r\n","import { font, data, box } from \"@src/core/config/base\";\r\n\r\nexport const baseText: IAnyObject = {\r\n  code: \"elementBaseText\",\r\n  type: \"text\",\r\n  name: \"基础文本框\",\r\n  // 配置项值\r\n  configureValue: {\r\n    styleDisplay: \"block\",\r\n    styleTextShadowX: 0,\r\n    styleTextShadowY: 0,\r\n    styleTextShadowF: 0,\r\n    styleTextShadowC: \"\",\r\n    ...box.configureValue,\r\n    ...font.configureValue,\r\n  },\r\n  // 坐标值\r\n  coordinateValue: {\r\n    left: 0,\r\n    top: 0,\r\n    width: 100,\r\n    height: 40,\r\n  },\r\n  // 数据值\r\n  dataValue: data.configureValue,\r\n};\r\n","export const box = {\r\n  configureValue: {\r\n    styleBoxInset: false,\r\n    styleBoxShadowX: 0,\r\n    styleBoxShadowY: 0,\r\n    styleBoxShadowF: 0,\r\n    styleBoxShadowC: \"\",\r\n    styleBorderStyle: \"none\",\r\n    styleBorderWidth: 0,\r\n    styleBorderColor: \"\",\r\n    styleBorderTopLeftRadius: 0,\r\n    styleBorderTopRightRadius: 0,\r\n    styleBorderBottomLeftRadius: 0,\r\n    styleBorderBottomRightRadius: 0,\r\n  },\r\n  configure: [\r\n    {\r\n      name: \"盒子阴影\",\r\n      list: [\r\n        {\r\n          componentName: \"Switch\",\r\n          label: \"内阴影\",\r\n          name: \"styleBoxInset\",\r\n          required: false,\r\n          placeholder: \"\",\r\n        },\r\n        {\r\n          componentName: \"InputNumber\",\r\n          label: \"X轴偏移\",\r\n          name: \"styleBoxShadowX\",\r\n          required: false,\r\n          placeholder: \"请输入X轴偏移\",\r\n        },\r\n        {\r\n          componentName: \"InputNumber\",\r\n          label: \"Y轴偏移\",\r\n          name: \"styleBoxShadowY\",\r\n          required: false,\r\n          placeholder: \"请输入Y轴偏移\",\r\n        },\r\n        {\r\n          componentName: \"InputNumber\",\r\n          label: \"模糊值\",\r\n          name: \"styleBoxShadowF\",\r\n          required: false,\r\n          placeholder: \"请输入模糊值\",\r\n        },\r\n        {\r\n          componentName: \"SketchPicker\",\r\n          label: \"颜色\",\r\n          name: \"styleBoxShadowC\",\r\n          required: false,\r\n          placeholder: \"请选择颜色\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      name: \"边框\",\r\n      list: [\r\n        {\r\n          componentName: \"Select\",\r\n          label: \"边框样式\",\r\n          name: \"styleBorderStyle\",\r\n          required: false,\r\n          placeholder: \"请选择边框样式\",\r\n          options: [\r\n            { code: \"none\", name: \"无\" },\r\n            { code: \"solid\", name: \"直线\" },\r\n            { code: \"dashed\", name: \"破折线\" },\r\n            { code: \"dotted\", name: \"点状线\" },\r\n            { code: \"double\", name: \"双划线\" },\r\n            { code: \"groove\", name: \"3D凹槽\" },\r\n            { code: \"ridge\", name: \"3D垄状\" },\r\n            { code: \"inset\", name: \"3D内嵌\" },\r\n            { code: \"outset\", name: \"3D外嵌\" },\r\n          ],\r\n        },\r\n        {\r\n          componentName: \"InputNumber\",\r\n          label: \"边框尺寸\",\r\n          name: \"styleBorderWidth\",\r\n          required: false,\r\n          placeholder: \"请输入尺寸\",\r\n        },\r\n        {\r\n          componentName: \"SketchPicker\",\r\n          label: \"颜色\",\r\n          name: \"styleBorderColor\",\r\n          required: false,\r\n          placeholder: \"请选择边框颜色\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      name: \"圆角\",\r\n      list: [\r\n        {\r\n          componentName: \"InputNumber\",\r\n          label: \"左上\",\r\n          name: \"styleBorderTopLeftRadius\",\r\n          required: false,\r\n          placeholder: \"请输入尺寸\",\r\n        },\r\n        {\r\n          componentName: \"InputNumber\",\r\n          label: \"右上\",\r\n          name: \"styleBorderTopRightRadius\",\r\n          required: false,\r\n          placeholder: \"请输入尺寸\",\r\n        },\r\n        {\r\n          componentName: \"InputNumber\",\r\n          label: \"左下\",\r\n          name: \"styleBorderBottomLeftRadius\",\r\n          required: false,\r\n          placeholder: \"请输入尺寸\",\r\n        },\r\n        {\r\n          componentName: \"InputNumber\",\r\n          label: \"右下\",\r\n          name: \"styleBorderBottomRightRadius\",\r\n          required: false,\r\n          placeholder: \"请输入尺寸\",\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n};\r\n","export const font = {\r\n  configureValue: {\r\n    styleFontSize: 14,\r\n    styleLetterSpacing: 0,\r\n    styleFontWeight: \"normal\",\r\n    styleTextAlign: \"center\",\r\n    styleBackgroundColor: \"\",\r\n    styleFontFamily: \"Microsoft YaHei\",\r\n    styleLineHeight: 1,\r\n    styleColor: \"#fff\",\r\n  },\r\n  configure: [\r\n    {\r\n      componentName: \"InputNumber\",\r\n      label: \"字体大小\",\r\n      name: \"styleFontSize\",\r\n      required: false,\r\n      min: 12,\r\n      placeholder: \"\",\r\n    },\r\n    {\r\n      componentName: \"InputNumber\",\r\n      label: \"字体间距\",\r\n      name: \"styleLetterSpacing\",\r\n      required: false,\r\n      placeholder: \"\",\r\n    },\r\n    {\r\n      componentName: \"InputNumber\",\r\n      label: \"行高\",\r\n      name: \"styleLineHeight\",\r\n      required: false,\r\n      placeholder: \"\",\r\n    },\r\n    {\r\n      componentName: \"Select\",\r\n      label: \"字体样式\",\r\n      name: \"styleFontFamily\",\r\n      required: false,\r\n      placeholder: \"\",\r\n      options: [\r\n        { code: \"SimSun\", name: \"宋体\" },\r\n        { code: \"KaiTi\", name: \"楷体\" },\r\n        { code: \"Microsoft YaHei\", name: \"微软雅黑\" },\r\n        { code: \"STHeiti\", name: \"华文黑体\" },\r\n        { code: \"arial\", name: \"无衬线体\" },\r\n        { code: \"serif\", name: \"有衬线体\" },\r\n        { code: \"cursive\", name: \"草书\" },\r\n        { code: \"monospace\", name: \"等宽字体\" },\r\n        { code: \"courier\", name: \"打印字体\" },\r\n      ],\r\n    },\r\n    {\r\n      componentName: \"Select\",\r\n      label: \"文字粗细\",\r\n      name: \"styleFontWeight\",\r\n      required: false,\r\n      placeholder: \"\",\r\n      options: [\r\n        { code: \"normal\", name: \"正常\" },\r\n        { code: \"bold\", name: \"粗体\" },\r\n        { code: \"bolder\", name: \"特粗体\" },\r\n        { code: \"lighter\", name: \"细体\" },\r\n      ],\r\n    },\r\n    {\r\n      componentName: \"Select\",\r\n      label: \"对齐方式\",\r\n      name: \"styleTextAlign\",\r\n      required: false,\r\n      placeholder: \"\",\r\n      options: [\r\n        { code: \"center\", name: \"居中\" },\r\n        { code: \"left\", name: \"左对齐\" },\r\n        { code: \"right\", name: \"右对齐\" },\r\n      ],\r\n    },\r\n    {\r\n      componentName: \"SketchPicker\",\r\n      label: \"字体颜色\",\r\n      name: \"styleColor\",\r\n      required: false,\r\n      placeholder: \"请选择字体颜色\",\r\n    },\r\n    {\r\n      componentName: \"SketchPicker\",\r\n      label: \"背景颜色\",\r\n      name: \"styleBackgroundColor\",\r\n      required: false,\r\n      placeholder: \"请选择背景颜色\",\r\n    },\r\n  ],\r\n};\r\n","export const data = {\r\n  // 数据项默认值\r\n  configureValue: {\r\n    useInterface: false,\r\n    dataType: \"mock\",\r\n    mock: {\r\n      value: \"文本框\",\r\n    },\r\n    url: \"\",\r\n    method: \"get\",\r\n    field: \"value\",\r\n  },\r\n  // 数据项配置\r\n  configure: [\r\n    {\r\n      componentName: \"Switch\",\r\n      label: \"使用组数据\",\r\n      name: \"useInterface\",\r\n      required: false,\r\n      placeholder: \"\",\r\n      tooltip: \"该组件使用组的接口数据\",\r\n    },\r\n    {\r\n      componentName: \"Select\",\r\n      label: \"请求类型\",\r\n      name: \"dataType\",\r\n      required: false,\r\n      placeholder: \"\",\r\n      relationFields: \"useInterface\",\r\n      relationValues: \"false\",\r\n      options: [\r\n        { code: \"mock\", name: \"mock数据\" },\r\n        { code: \"dynamic\", name: \"接口数据\" },\r\n      ],\r\n    },\r\n    {\r\n      componentName: \"JsonEdit\",\r\n      label: \"mock数据\",\r\n      name: \"mock\",\r\n      required: false,\r\n      placeholder: \"请输入mock数据\",\r\n      relationFields: \"dataType,useInterface\",\r\n      relationValues: \"mock,false\",\r\n    },\r\n    {\r\n      componentName: \"TextArea\",\r\n      label: \"接口地址\",\r\n      name: \"url\",\r\n      required: false,\r\n      placeholder: \"请输入接口地址\",\r\n      relationFields: \"dataType,useInterface\",\r\n      relationValues: \"dynamic,false\",\r\n    },\r\n    {\r\n      componentName: \"Select\",\r\n      label: \"请求方式\",\r\n      name: \"method\",\r\n      required: false,\r\n      placeholder: \"\",\r\n      relationFields: \"dataType,useInterface\",\r\n      relationValues: \"dynamic,false\",\r\n      options: [\r\n        { code: \"get\", name: \"GET\" },\r\n        { code: \"post\", name: \"post\" },\r\n      ],\r\n    },\r\n    {\r\n      componentName: \"Input\",\r\n      label: \"对应字段\",\r\n      name: \"field\",\r\n      required: false,\r\n      placeholder: \"\",\r\n    },\r\n  ],\r\n};\r\n","import { IElement } from \"@src/service\";\r\nimport { ModifyActions } from \"./action\";\r\nimport {\r\n  ALL_STATE,\r\n  WIDGET,\r\n  MODIFY_ELEMENT,\r\n  MODIFY_WIDGET,\r\n  SELECT_ELEMENT,\r\n  ADD_ELEMENT,\r\n  DELETE_ELEMENT,\r\n} from \"./type\";\r\nimport elementsConfig from \"@src/core/config/elements\";\r\n\r\nexport const initialState: ALL_STATE = {\r\n  widget: {\r\n    name: \"未命名微件\",\r\n    url: \"\",\r\n    id: \"\",\r\n    createTime: \"\",\r\n    type: \"text\",\r\n    count: 0,\r\n    x: 0,\r\n    y: 0,\r\n    column: 1,\r\n    row: 1,\r\n    configuration: {},\r\n    elements: [],\r\n    widgetId: \"\",\r\n  },\r\n  elementId: undefined,\r\n  widgetId: undefined,\r\n};\r\n\r\nexport const widgetReducer = (state = initialState, action: ModifyActions) => {\r\n  const copy: ALL_STATE = JSON.parse(JSON.stringify(state));\r\n  console.log(state, action);\r\n  switch (action.type) {\r\n    // 获取微件\r\n    case WIDGET: {\r\n      copy.widget = action.data;\r\n      copy.widgetId = action.data.widgetId;\r\n      return copy;\r\n    }\r\n    case MODIFY_WIDGET: {\r\n      copy.widget = {\r\n        ...copy.widget,\r\n        ...action.data,\r\n      };\r\n      return copy;\r\n    }\r\n    case ADD_ELEMENT: {\r\n      copy.widget.elements.push({\r\n        ...action.data,\r\n        ...elementsConfig[action.data.element],\r\n      });\r\n      copy.elementId = action.data.elementId;\r\n      return copy;\r\n    }\r\n\r\n    case DELETE_ELEMENT: {\r\n      copy.widget.elements = copy.widget.elements.filter(\r\n        (item) => item.elementId !== action.id\r\n      );\r\n      if (action.id === copy.elementId) {\r\n        copy.elementId = \"\";\r\n      }\r\n      return copy;\r\n    }\r\n\r\n    case MODIFY_ELEMENT: {\r\n      const index = copy.widget.elements.findIndex(\r\n        (item) => item.elementId === action.data.elementId\r\n      );\r\n      if (index !== -1) {\r\n        copy.widget.elements[index] = { ...action.data } as IElement;\r\n        copy.elementId = action.data.elementId;\r\n      }\r\n      return copy;\r\n    }\r\n\r\n    case SELECT_ELEMENT: {\r\n      copy.elementId = action.id;\r\n      return copy;\r\n    }\r\n    default: {\r\n      console.log(\"你访问的类型不对，请自行检查\");\r\n    }\r\n  }\r\n};\r\n","import { IWidget } from \"@src/service\";\r\n\r\n// 获取微件\r\nexport const WIDGET = \"WIDGET\";\r\nexport type WIDGET_TYPE = typeof WIDGET;\r\n\r\n// 修改微件\r\nexport const MODIFY_WIDGET = \"MODIFY_WIDGET\";\r\nexport type MODIFY_WIDGET_TYPE = typeof MODIFY_WIDGET;\r\n\r\n// 新增组件\r\nexport const ADD_ELEMENT = \"ADD_ELEMENT\";\r\nexport type ADD_ELEMENT_TYPE = typeof ADD_ELEMENT;\r\n\r\n// 删除组件\r\nexport const DELETE_ELEMENT = \"DELETE_ELEMENT\";\r\nexport type DELETE_ELEMENT_TYPE = typeof DELETE_ELEMENT;\r\n\r\n// 选中组件\r\nexport const SELECT_ELEMENT = \"SELECT_ELEMENT\";\r\nexport type SELECT_ELEMENT_TYPE = typeof SELECT_ELEMENT;\r\n\r\n// 修改组件\r\nexport const MODIFY_ELEMENT = \"MODIFY_ELEMENT\";\r\nexport type MODIFY_ELEMENT_TYPE = typeof MODIFY_ELEMENT;\r\n\r\nexport interface ALL_STATE {\r\n  widget: IWidget;\r\n  elementId: string | undefined;\r\n  widgetId: string | undefined;\r\n}\r\n"],"names":["dragStore","constructor","moveItem","Map","set","key","data","this","remove","delete","get","_ref","width","height","gap","column","row","x","y","style","children","maskStyle","useMemo","getItemSizeStyle","transform","React","className","memo","props","groupName","onResizeStart","onResizeing","onResizeEnd","onCloseHander","moveing","setMoveing","useState","resizeing","setResizeing","previewStyles","gridArea","opacity","onDragStart","useCallback","e","pageX","pageY","setTimeout","onDragEnd","onMouseDown","onMouseMove","preventDefault","onMouseUp","target","draggable","onClick","elementId","mask","field","onDropHandler","datas","onResizeEndHandler","renderPreview","useRef","clientRect","setClientRect","resizeEnd","setResizeEnd","current","setCuurent","getClientRect","_target$current","getBoundingClientRect","useEffect","resizeObserver","ResizeObserver","entries","Array","isArray","length","observe","disconnect","isPutDown","currentXy","p1","p2","every","item","booleanIntersects","booleanWithin","getX","num","parseInt","String","getY","getColumn","Math","max","ceil","getRow","onDragEnter","dragData","state","show","console","log","onDragOver","onDragLeave","undefined","onDrop","Boolean","guid","offsetWidth","offsetHeight","ref","display","gridTemplateColumns","gridTemplateRows","fill","map","_","index","PreviewItem","pointerEvents","MoveMask","background","BaseText","options","getStyles","name","open","onClose","pageType","modifyNameSuccessHander","Modal","onCancel","footer","title","PAGETYPENAME","destroyOnClose","Form","onFinish","values","message","success","initialValues","autoComplete","Item","rules","required","Input","placeholder","Button","type","htmlType","block","ConfigLayoutHeader","logo","navigate","useNavigate","isModalNameOpen","setIsModalNameOpen","dangerouslySetInnerHTML","__html","ModifyNameDialog","Ruler","arr","from","keys","ConfigLayoutMain","Rule","CloseOutlined","ALLTABS","icon","ConfigLayoutLeftAside","render","navs","setCurrent","tabs","setTabs","filter","includes","Tooltip","placement","borderRight","Box","ALLELEMENTS","ConfigLayoutLeftAsideElements","_elementsList$filter","_elementsList$filter2","getElements","elementsList","elementsLoading","elements","ELEMETSTYPE","DragItem","id","Image","src","url","preview","Empty","image","PRESENTED_IMAGE_SIMPLE","ConfigLayoutRightAside","borderLeft","ConfigLayoutRightAsideLayer","widgetId","onSelected","widget","FolderOpenOutlined","element","FolderOutlined","header","body","ConfigLayout","location","useLocation","layout","dispatch","useReducer","widgetReducer","initialState","URLSearchParams","search","size","createTime","count","configuration","position","isAdd","capitalizeFirstLetter","configureValue","rightAside","WidgetLayout","DragContent","baseText","code","styleDisplay","styleTextShadowX","styleTextShadowY","styleTextShadowF","styleTextShadowC","styleBoxInset","styleBoxShadowX","styleBoxShadowY","styleBoxShadowF","styleBoxShadowC","styleBorderStyle","styleBorderWidth","styleBorderColor","styleBorderTopLeftRadius","styleBorderTopRightRadius","styleBorderBottomLeftRadius","styleBorderBottomRightRadius","styleFontSize","styleLetterSpacing","styleFontWeight","styleTextAlign","styleBackgroundColor","styleFontFamily","styleLineHeight","styleColor","coordinateValue","left","top","dataValue","useInterface","dataType","mock","value","method","arguments","action","copy","JSON","parse","stringify","WIDGET","MODIFY_WIDGET","ADD_ELEMENT","push","elementsConfig","DELETE_ELEMENT","MODIFY_ELEMENT","findIndex","SELECT_ELEMENT"],"sourceRoot":""}