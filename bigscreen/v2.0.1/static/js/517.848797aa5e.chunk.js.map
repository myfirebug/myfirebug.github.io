{"version":3,"file":"static/js/517.848797aa5e.chunk.js","mappings":"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","sources":["webpack://large-screen-configuration/./src/compoents/echarts/index.tsx","webpack://large-screen-configuration/./src/compoents/dragdrop/drag.ts","webpack://large-screen-configuration/./src/compoents/dragdrop/moveMask/index.tsx","webpack://large-screen-configuration/./src/compoents/dragdrop/previewItem/index.tsx","webpack://large-screen-configuration/./src/compoents/dragdrop/dragContent/index.tsx","webpack://large-screen-configuration/./src/elements/index.ts","webpack://large-screen-configuration/./src/elements/text/base/index.tsx","webpack://large-screen-configuration/./src/elements/line/index.tsx","webpack://large-screen-configuration/./src/layout/configLayout/components/header/components/modifyNameDialog/index.tsx","webpack://large-screen-configuration/./src/layout/configLayout/components/header/index.tsx","webpack://large-screen-configuration/./src/layout/configLayout/components/main/components/rule/index.tsx","webpack://large-screen-configuration/./src/layout/configLayout/components/main/index.tsx","webpack://large-screen-configuration/./src/layout/configLayout/components/box/index.tsx","webpack://large-screen-configuration/./src/layout/configLayout/components/leftAside/index.tsx","webpack://large-screen-configuration/./src/compoents/dragdrop/dragItem/index.tsx","webpack://large-screen-configuration/./src/layout/configLayout/components/leftAside/components/elements/index.tsx","webpack://large-screen-configuration/./src/layout/configLayout/components/rightAside/index.tsx","webpack://large-screen-configuration/./src/layout/configLayout/components/rightAside/components/layer/index.tsx","webpack://large-screen-configuration/./src/layout/configLayout/components/rightAside/components/baseForm/index.tsx","webpack://large-screen-configuration/./src/layout/configLayout/components/rightAside/components/dynamicForm/index.tsx","webpack://large-screen-configuration/./src/layout/configLayout/components/rightAside/components/widget/index.tsx","webpack://large-screen-configuration/./src/core/config/classification/index.ts","webpack://large-screen-configuration/./src/core/config/classification/text/base.ts","webpack://large-screen-configuration/./src/core/config/classification/line/index.ts","webpack://large-screen-configuration/./src/layout/configLayout/components/rightAside/components/element/index.tsx","webpack://large-screen-configuration/./src/layout/widgetLayout/index.tsx","webpack://large-screen-configuration/./src/pages/widgets/edit/index.tsx"],"sourcesContent":["import React, { memo, useCallback, useEffect, useRef } from \"react\";\r\nimport * as echarts from \"echarts\";\r\nimport { init as initChart } from \"echarts/core\";\r\nimport data from \"./infographic.json\";\r\nimport {\r\n  Option,\r\n  Theme,\r\n  InitOptions,\r\n  UpdateOptions,\r\n  AutoresizeProp,\r\n  LoadingOptions,\r\n  EChartsType,\r\n} from \"./types\";\r\necharts.registerTheme(\"infographic\", data);\r\n\r\ninterface IEchartsProps {\r\n  option: Option;\r\n  theme?: Theme;\r\n  initOptions?: InitOptions;\r\n  updateOptions?: UpdateOptions;\r\n  group?: string;\r\n  autoresize?: AutoresizeProp;\r\n  loading?: boolean;\r\n  loadingOptions?: LoadingOptions;\r\n}\r\n\r\nconst Echarts = memo(\r\n  (props: IEchartsProps) => {\r\n    const {\r\n      theme,\r\n      group,\r\n      initOptions,\r\n      option,\r\n      updateOptions,\r\n      loading = false,\r\n      loadingOptions,\r\n      autoresize = {},\r\n    } = props;\r\n    const dom = useRef<HTMLDivElement>(null);\r\n    const chart = useRef<EChartsType>();\r\n    const timmer = useRef<any>(0);\r\n    // tooltip auto play current index\r\n    const currentIndex = useRef<number>(-1);\r\n\r\n    const autoPlayHandler = useCallback(() => {\r\n      if (!option.series || !(option.series as echarts.SeriesOption[]).length) {\r\n        return false;\r\n      }\r\n\r\n      if (chart.current) {\r\n        if (timmer.current) {\r\n          clearInterval(timmer.current);\r\n        }\r\n        timmer.current = setInterval(() => {\r\n          const dataLen =\r\n            option.series && (option.series as echarts.SeriesOption[]).length\r\n              ? (\r\n                  (option.series as echarts.SeriesOption[])[0]\r\n                    ?.data as Array<any>\r\n                ).length\r\n              : 0;\r\n\r\n          // 取消之前高亮的图形\r\n          chart?.current?.dispatchAction({\r\n            type: \"downplay\",\r\n            seriesIndex: 0,\r\n          });\r\n          currentIndex.current = (currentIndex.current + 1) % dataLen;\r\n          // 高亮当前图形\r\n          chart?.current?.dispatchAction({\r\n            type: \"highlight\",\r\n            seriesIndex: 0,\r\n            dataIndex: currentIndex.current,\r\n          });\r\n          // 显示 tooltip\r\n          chart?.current?.dispatchAction({\r\n            type: \"showTip\",\r\n            seriesIndex: 0,\r\n            dataIndex: currentIndex.current,\r\n          });\r\n        }, 3000);\r\n      }\r\n    }, [chart, timmer, option, currentIndex]);\r\n\r\n    // 鼠标移入事件\r\n    const mouseHander = useCallback((e: any) => {\r\n      clearInterval(timmer.current);\r\n      currentIndex.current = e.dataIndex;\r\n      // 取消之前高亮的图形\r\n      chart?.current?.dispatchAction({\r\n        type: \"downplay\",\r\n        seriesIndex: 0,\r\n      });\r\n      // 高亮当前图形\r\n      chart?.current?.dispatchAction({\r\n        type: \"highlight\",\r\n        seriesIndex: 0,\r\n        dataIndex: currentIndex.current,\r\n      });\r\n    }, []);\r\n\r\n    const init = useCallback(() => {\r\n      if (!dom.current) {\r\n        return;\r\n      }\r\n      if (!chart.current) {\r\n        chart.current = initChart(\r\n          dom.current,\r\n          theme || \"infographic\",\r\n          initOptions\r\n        );\r\n      }\r\n      if (group) {\r\n        chart.current.group = group;\r\n      }\r\n\r\n      if (loading) {\r\n        chart.current.showLoading(loadingOptions);\r\n      } else {\r\n        chart.current.hideLoading();\r\n      }\r\n\r\n      if (option) {\r\n        chart.current.setOption(\r\n          {\r\n            ...option,\r\n            tooltip: {\r\n              trigger: \"axis\",\r\n              backgroundColor: \"rgba(0,0,0,.6)\",\r\n              borderColor: \"rgba(255,255,255,.2)\",\r\n              padding: [8, 8],\r\n              textStyle: {\r\n                color: \"#fff\",\r\n                fontSize: 12,\r\n              },\r\n              ...option.tooltip,\r\n            },\r\n          },\r\n          updateOptions\r\n        );\r\n        autoPlayHandler();\r\n      }\r\n    }, [\r\n      initOptions,\r\n      option,\r\n      theme,\r\n      group,\r\n      loading,\r\n      loadingOptions,\r\n      updateOptions,\r\n      autoPlayHandler,\r\n    ]);\r\n\r\n    const cleanup = useCallback(() => {\r\n      if (chart.current) {\r\n        chart.current.off(\"mouseover\", mouseHander);\r\n        chart.current.off(\"mouseout\", autoPlayHandler);\r\n        chart.current.dispose();\r\n        chart.current = undefined;\r\n      }\r\n    }, [autoPlayHandler, mouseHander]);\r\n\r\n    useEffect(() => {\r\n      init();\r\n      const { onResize } = autoresize;\r\n      const callback = () => {\r\n        chart.current?.resize();\r\n        onResize?.();\r\n      };\r\n      if (chart.current) {\r\n        chart.current.on(\"mouseover\", mouseHander);\r\n        chart.current.on(\"mouseout\", autoPlayHandler);\r\n      }\r\n      const resizeObserver = new ResizeObserver((entries) => {\r\n        if (!Array.isArray(entries) || !entries.length) {\r\n          return;\r\n        }\r\n        callback();\r\n      });\r\n\r\n      resizeObserver.observe(dom.current as HTMLDivElement);\r\n      return () => {\r\n        cleanup();\r\n        resizeObserver.disconnect();\r\n      };\r\n    }, [cleanup, init, autoresize, chart, mouseHander, autoPlayHandler]);\r\n\r\n    console.log(123);\r\n\r\n    return (\r\n      <div\r\n        className=\"cms-echarts\"\r\n        ref={dom}\r\n        style={{ width: \"100%\", height: \"100%\" }}\r\n      ></div>\r\n    );\r\n  },\r\n  (prevProps, nextProps) => {\r\n    if (JSON.stringify(prevProps) === JSON.stringify(nextProps)) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n);\r\n\r\nexport default Echarts;\r\n","class DragStore<T extends IAnyObject> {\r\n  moveItem = new Map<string, T>();\r\n\r\n  set(key: string, data: T) {\r\n    this.moveItem.set(key, data);\r\n  }\r\n\r\n  remove(key: string) {\r\n    this.moveItem.delete(key);\r\n  }\r\n\r\n  get(key: string): undefined | T {\r\n    return this.moveItem.get(key);\r\n  }\r\n}\r\n\r\n/**\r\n * 拖拽临时数据\r\n */\r\nexport const dragStore = new DragStore<IAnyObject>();\r\n\r\n/**\r\n * 判断是否在当前四边形内\r\n * @param {*} p1 父容器\r\n * @param {*} p2\r\n * @returns\r\n *  对应是 左上角坐标 和 右下角坐标\r\n *  [0,0,1,1]  => 左上角坐标 0,0  右下角 1,1\r\n */\r\nexport const booleanWithin = (\r\n  p1: [number, number, number, number],\r\n  p2: [number, number, number, number]\r\n) => {\r\n  return p1[0] <= p2[0] && p1[1] <= p2[1] && p1[2] >= p2[2] && p1[3] >= p2[3];\r\n};\r\n\r\n/**\r\n * 判断是两四边形是否相交\r\n * @param {*} p1 父容器\r\n * @param {*} p2\r\n * @returns\r\n *  对应是 左上角坐标 和 右下角坐标\r\n *  [0,0,1,1]  => 左上角坐标 0,0  右下角 1,1\r\n */\r\nexport const booleanIntersects = (\r\n  p1: [number, number, number, number],\r\n  p2: [number, number, number, number]\r\n) => {\r\n  return !(\r\n    p1[2] <= p2[0] || // p1 在 p2 左边\r\n    p2[2] <= p1[0] || // p1 在 p2 右边\r\n    p1[3] <= p2[1] || // p1 在 p2 上边\r\n    // p1 在 p2 下边\r\n    p2[3] <= p1[1]\r\n  );\r\n};\r\n\r\n/**\r\n * 获取元素位置信息\r\n * @param {*} width 格子宽\r\n * @param {*} height 格子高\r\n * @param {*} x x 坐标\r\n * @param {*} y y 坐标\r\n * @param {*} gap 间隔\r\n * @param {*} column 元素占列数\r\n * @param {*} row 元素占行数\r\n * @returns\r\n */\r\nexport const getItemSizeStyle = (\r\n  width: number,\r\n  height: number,\r\n  x: number,\r\n  y: number,\r\n  gap: number,\r\n  column: number,\r\n  row: number\r\n) => {\r\n  return {\r\n    width: `${width * column + (column - 1) * gap}px`,\r\n    height: `${height * row + (row - 1) * gap}px`,\r\n    transform: `translate(${(width + gap) * (x - 1)}px,${\r\n      (height + gap) * (y - 1)\r\n    }px)`,\r\n  };\r\n};\r\n","import React, { FC, HtmlHTMLAttributes, ReactNode, useMemo } from \"react\";\r\nimport { getItemSizeStyle } from \"../drag\";\r\nimport \"./index.scss\";\r\n\r\ninterface IMoveMask extends HtmlHTMLAttributes<HTMLDivElement> {\r\n  /** 容器格子宽 */\r\n  width: number;\r\n  /** 容器格子高 */\r\n  height: number;\r\n  /** 格子间隔 */\r\n  gap: number;\r\n  /** 拖拽元素列数 */\r\n  column: number;\r\n  /** 拖拽元素行数 */\r\n  row: number;\r\n  /** 拖拽元素 x 坐标 */\r\n  x: number;\r\n  /** 拖拽元素 y 坐标 */\r\n  y: number;\r\n  children: ReactNode;\r\n}\r\n\r\nconst MoveMask: FC<IMoveMask> = ({\r\n  width = 0,\r\n  height = 0,\r\n  gap = 0,\r\n  column = 0,\r\n  row = 0,\r\n  x = 0,\r\n  y = 0,\r\n  style,\r\n  children,\r\n}) => {\r\n  // 获取遮罩层样式\r\n  const maskStyle = useMemo(() => {\r\n    return getItemSizeStyle(width, height, x, y, gap, column, row);\r\n  }, [column, gap, height, row, width, x, y]);\r\n  return (\r\n    <div className=\"cms-drag__moveMask\" style={{ ...maskStyle, ...style }}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MoveMask;\r\n","import React, {\r\n  HtmlHTMLAttributes,\r\n  useCallback,\r\n  useMemo,\r\n  useState,\r\n  memo,\r\n  ReactNode,\r\n} from \"react\";\r\nimport \"./index.scss\";\r\nimport { dragStore } from \"../drag\";\r\ninterface IPreviewItem extends HtmlHTMLAttributes<HTMLDivElement> {\r\n  data: IAnyObject;\r\n  onResizeStart?: () => void;\r\n  onResizeing?: (e: React.DragEvent<HTMLDivElement>) => void;\r\n  onResizeEnd?: () => void;\r\n  groupName?: string;\r\n  /**\r\n   * @param id 刪除的数据ID\r\n   * @returns\r\n   */\r\n  onCloseHander?: (id: string) => void;\r\n  children: ReactNode;\r\n  isShowCloseBtn?: boolean;\r\n}\r\n\r\nconst PreviewItem = memo((props: IPreviewItem) => {\r\n  const {\r\n    data,\r\n    style,\r\n    groupName,\r\n    onResizeStart,\r\n    onResizeing,\r\n    onResizeEnd,\r\n    onCloseHander,\r\n    children,\r\n    isShowCloseBtn,\r\n  } = props;\r\n  const [moveing, setMoveing] = useState(false);\r\n  const [resizeing, setResizeing] = useState(false);\r\n  const previewStyles = useMemo(() => {\r\n    return {\r\n      gridArea: `${data.y} / ${data.x} / ${data.y + data.row}/ ${\r\n        data.x + data.column\r\n      }`,\r\n      ...(moveing\r\n        ? {\r\n            opacity: 0,\r\n            // 将当前元素移出容器外,将元素占位空置出来\r\n            transform: `translate(-999999999px, -9999999999px)`,\r\n          }\r\n        : {}),\r\n      ...(resizeing ? { opacity: 0.5 } : {}),\r\n    };\r\n  }, [data.column, data.row, data.x, data.y, moveing, resizeing]);\r\n  // 移动开始\r\n  const onDragStart = useCallback(\r\n    (e: React.DragEvent<HTMLDivElement>) => {\r\n      dragStore.set(groupName as string, {\r\n        ...data,\r\n        pageX: e.pageX,\r\n        pageY: e.pageY,\r\n      });\r\n      setTimeout(() => {\r\n        setMoveing(true);\r\n      }, 0);\r\n      setResizeing(false);\r\n    },\r\n    [data, groupName]\r\n  );\r\n  // 移动结束\r\n  const onDragEnd = useCallback(\r\n    (e: React.DragEvent<HTMLDivElement>) => {\r\n      setMoveing(false);\r\n      dragStore.remove(groupName as string);\r\n    },\r\n    [groupName]\r\n  );\r\n\r\n  const onMouseDown = useCallback(\r\n    (e: React.DragEvent<HTMLDivElement>) => {\r\n      dragStore.set(groupName as string, data);\r\n      setResizeing(true);\r\n      onResizeStart?.();\r\n    },\r\n    [data, groupName, onResizeStart]\r\n  );\r\n\r\n  const onMouseMove = useCallback(\r\n    (e: React.DragEvent<HTMLDivElement>) => {\r\n      e.preventDefault();\r\n      onResizeing?.(e);\r\n    },\r\n    [onResizeing]\r\n  );\r\n\r\n  const onMouseUp = useCallback(\r\n    (e: any) => {\r\n      onResizeEnd?.();\r\n      e.target.style.width = \"100%\";\r\n      e.target.style.height = \"100%\";\r\n      setResizeing(false);\r\n    },\r\n    [onResizeEnd]\r\n  );\r\n  return (\r\n    <div\r\n      className=\"cms-drag__preview--item\"\r\n      style={{ ...previewStyles, ...style }}\r\n      onDragStart={onDragStart}\r\n      draggable\r\n      onDragEnd={onDragEnd}\r\n      onMouseDown={onMouseDown}\r\n      onMouseMove={onMouseMove}\r\n      onMouseUp={onMouseUp}\r\n    >\r\n      {children}\r\n      {isShowCloseBtn ? (\r\n        <div\r\n          className=\"close\"\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            onCloseHander?.(data.elementId);\r\n          }}\r\n        ></div>\r\n      ) : (\r\n        \"none\"\r\n      )}\r\n      {/* <div className=\"resize\"></div> */}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default PreviewItem;\r\n","import React, {\r\n  memo,\r\n  ReactNode,\r\n  useCallback,\r\n  useEffect,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport \"./index.scss\";\r\nimport { booleanIntersects, booleanWithin, dragStore } from \"../drag\";\r\nimport MoveMask from \"../moveMask\";\r\nimport { guid } from \"@src/utils\";\r\nimport PreviewItem from \"../previewItem\";\r\n\r\ninterface IDragContent {\r\n  // 辅助线配置\r\n  auxiliaryLineConfig?: IAnyObject;\r\n  datas: IAnyObject[];\r\n  /** 拖拽分组标识 */\r\n  groupName?: string;\r\n  /** 容器需要分隔列数 */\r\n  column: number;\r\n  /** 容器需要分隔行数 */\r\n  row: number;\r\n  /** 容器格子间隔 */\r\n  gap: number;\r\n  /** 是否显示拖拽预占位层 */\r\n  mask?: boolean;\r\n  /** drop时对比的id字段 */\r\n  field?: string;\r\n  /**\r\n   * @param isAdd 是否新增\r\n   * @param data 数据\r\n   * @returns\r\n   */\r\n  onDropHandler?: (isAdd: boolean, data: IAnyObject) => void;\r\n  /**\r\n   * @param data 改变的数据\r\n   * @returns\r\n   */\r\n  onResizeEndHandler?: (data: IAnyObject) => void;\r\n  /**\r\n   * @param id 刪除的数据ID\r\n   * @returns\r\n   */\r\n  onCloseHander?: (id: string) => void;\r\n\r\n  renderPreview?: (data: IAnyObject) => ReactNode;\r\n}\r\n\r\nconst DragContent = memo((props: IDragContent) => {\r\n  const {\r\n    groupName,\r\n    column,\r\n    row,\r\n    gap,\r\n    mask = true,\r\n    field = \"id\",\r\n    onDropHandler,\r\n    datas,\r\n    onResizeEndHandler,\r\n    onCloseHander,\r\n    renderPreview,\r\n    auxiliaryLineConfig,\r\n  } = props;\r\n  // 目标元素\r\n  const target = useRef<HTMLDivElement>(null);\r\n  // 宽高\r\n  const [clientRect, setClientRect] = useState({\r\n    width: 0,\r\n    height: 0,\r\n    x: 0,\r\n    y: 0,\r\n  });\r\n  const [resizeEnd, setResizeEnd] = useState(false);\r\n  // 拖拽中的元素\r\n  const [current, setCuurent] = useState<IAnyObject>({});\r\n  // 动态计算目标元素的宽高\r\n  const getClientRect = useCallback(() => {\r\n    if (!target.current) return;\r\n    const { width, height, x, y } = (\r\n      target.current as HTMLDivElement\r\n    )?.getBoundingClientRect();\r\n    setClientRect({\r\n      width: (width - (column - 1) * gap) / column,\r\n      height: (height - (row - 1) * gap) / row,\r\n      x: x,\r\n      y: y,\r\n    });\r\n  }, [column, gap, row]);\r\n  useEffect(() => {\r\n    getClientRect();\r\n    const resizeObserver = new ResizeObserver((entries) => {\r\n      if (!Array.isArray(entries) || !entries.length) {\r\n        return;\r\n      }\r\n      getClientRect();\r\n    });\r\n\r\n    resizeObserver.observe(target.current as HTMLDivElement);\r\n    return () => {\r\n      resizeObserver.disconnect();\r\n    };\r\n  }, [getClientRect]);\r\n  // 判断是否可放置\r\n  const isPutDown = useMemo(() => {\r\n    const currentXy: [number, number, number, number] = [\r\n      current.x,\r\n      current.y,\r\n      current.x + current.column - 1,\r\n      current.y + current.row - 1,\r\n    ];\r\n    return (\r\n      booleanWithin([0, 0, column, row], currentXy) &&\r\n      datas.every(\r\n        (item) =>\r\n          item[field] === current[field] ||\r\n          !booleanIntersects(\r\n            [item.x - 1, item.y - 1, item.x + item.column, item.y + item.row],\r\n            currentXy\r\n          )\r\n      )\r\n    );\r\n  }, [column, current, datas, field, row]);\r\n\r\n  // 计算 x 坐标\r\n  const getX = useCallback(\r\n    (num: number) =>\r\n      parseInt(String((num - clientRect.x) / (clientRect.width + gap))) + 1,\r\n    [clientRect.width, clientRect.x, gap]\r\n  );\r\n  // 计算 y 坐标\r\n  const getY = useCallback(\r\n    (num: number) =>\r\n      parseInt(String((num - clientRect.y) / (clientRect.height + gap))) + 1,\r\n    [clientRect.height, clientRect.y, gap]\r\n  );\r\n  // 计算列数\r\n  const getColumn = useCallback(\r\n    (num: number) => Math.max(1, Math.ceil(num / (clientRect.width + gap))),\r\n    [clientRect.width, gap]\r\n  );\r\n  // 计算行数\r\n  const getRow = useCallback(\r\n    (num: number) => Math.max(1, Math.ceil(num / (clientRect.height + gap))),\r\n    [clientRect.height, gap]\r\n  );\r\n  // 进入放置目标\r\n  const onDragEnter = useCallback(\r\n    (e: React.DragEvent<HTMLDivElement>) => {\r\n      e.preventDefault();\r\n      const dragData = dragStore.get(groupName as string);\r\n      if (dragData) {\r\n        setCuurent((state) => ({\r\n          ...state,\r\n          ...dragData,\r\n          x: getX(e.pageX),\r\n          y: getY(e.pageY),\r\n          show: true,\r\n        }));\r\n      }\r\n      console.log(\"onDragEnter\");\r\n    },\r\n    [getX, getY, groupName]\r\n  );\r\n  // 在目标中移动\r\n  const onDragOver = useCallback(\r\n    (e: React.DragEvent<HTMLDivElement>) => {\r\n      e.preventDefault();\r\n      const dragData = dragStore.get(groupName as string);\r\n      if (dragData) {\r\n        setCuurent((state) => ({\r\n          ...state,\r\n          ...dragData,\r\n          x: getX(e.pageX),\r\n          y: getY(e.pageY),\r\n          show: true,\r\n        }));\r\n      }\r\n      console.log(\"onDragOver\");\r\n    },\r\n    [getX, getY, groupName]\r\n  );\r\n  // 离开目标\r\n  const onDragLeave = useCallback(\r\n    (e: React.DragEvent<HTMLDivElement>) => {\r\n      e.preventDefault();\r\n      setCuurent((state) => ({\r\n        ...state,\r\n        show: false,\r\n        [field]: undefined,\r\n      }));\r\n      console.log(\"onDragLeave\");\r\n    },\r\n    [field]\r\n  );\r\n  // 放置在目标上\r\n  const onDrop = useCallback(\r\n    (e: React.DragEvent<HTMLDivElement>) => {\r\n      const dragData = dragStore.get(groupName as string);\r\n      e.preventDefault();\r\n      setCuurent((state) => ({\r\n        ...state,\r\n        show: false,\r\n      }));\r\n      if (isPutDown) {\r\n        onDropHandler &&\r\n          onDropHandler(!Boolean(dragData && dragData[field]), {\r\n            ...dragData,\r\n            ...current,\r\n            [field]: dragData && dragData[field] ? dragData[field] : guid(),\r\n          });\r\n      }\r\n      console.log(\"onDrop\");\r\n    },\r\n    [current, field, groupName, isPutDown, onDropHandler]\r\n  );\r\n  // 调整大小开始\r\n  const onResizeStart = useCallback(() => {\r\n    const dragData = dragStore.get(groupName as string);\r\n    if (dragData) {\r\n      setResizeEnd(false);\r\n      setCuurent((state) => ({\r\n        ...state,\r\n        ...dragData,\r\n        show: true,\r\n      }));\r\n    }\r\n  }, [groupName]);\r\n  // 调正大小时\r\n  const onResizeing = useCallback(\r\n    (e: any) => {\r\n      setResizeEnd(false);\r\n      setCuurent((state) => ({\r\n        ...state,\r\n        column: getColumn(e.target.offsetWidth),\r\n        row: getRow(e.target.offsetHeight),\r\n      }));\r\n    },\r\n    [getColumn, getRow]\r\n  );\r\n  // 调整大小结束\r\n  const onResizeEnd = useCallback(() => {\r\n    setResizeEnd(true);\r\n    setCuurent((state) => ({\r\n      ...state,\r\n      show: false,\r\n    }));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const dragData = dragStore.get(groupName as string);\r\n    if (resizeEnd && isPutDown) {\r\n      if (\r\n        dragData?.column !== current.column ||\r\n        dragData?.row !== current.row\r\n      ) {\r\n        console.log(dragData, current, groupName, \"update onResizeEndHandler\");\r\n        onResizeEndHandler?.(current);\r\n        setResizeEnd(false);\r\n      }\r\n    }\r\n  }, [onResizeEndHandler, current, groupName, resizeEnd, isPutDown]);\r\n\r\n  return (\r\n    <div\r\n      ref={target}\r\n      className=\"cms-drag__content\"\r\n      onDragEnter={onDragEnter}\r\n      onDragOver={onDragOver}\r\n      onDragLeave={onDragLeave}\r\n      onDrop={onDrop}\r\n    >\r\n      <div\r\n        className=\"cms-drag__content--container\"\r\n        style={{\r\n          display: auxiliaryLineConfig?.show ? \"grid\" : \"none\",\r\n          gap: `${gap}px`,\r\n          gridTemplateColumns: `repeat(${column}, ${clientRect.width}px)`,\r\n          gridTemplateRows: `repeat(${row},  ${clientRect.height}px)`,\r\n          width: \"100%\",\r\n          height: \"100%\",\r\n        }}\r\n      >\r\n        {new Array(column * row).fill(null).map((_, index) => (\r\n          <div\r\n            key={index}\r\n            style={{\r\n              borderColor:\r\n                auxiliaryLineConfig?.borderColor || \"rgba(255, 255, 255, 0.2)\",\r\n            }}\r\n          ></div>\r\n        ))}\r\n      </div>\r\n      <div\r\n        className=\"cms-drag__preview\"\r\n        style={{\r\n          display: \"grid\",\r\n          gap: `${gap}px`,\r\n          gridTemplateColumns: `repeat(${column}, ${clientRect.width}px)`,\r\n          gridTemplateRows: `repeat(${row},  ${clientRect.height}px)`,\r\n          width: \"100%\",\r\n          height: \"100%\",\r\n        }}\r\n      >\r\n        {datas.map((item) => (\r\n          <PreviewItem\r\n            key={item[field]}\r\n            data={item}\r\n            groupName={groupName}\r\n            style={{\r\n              pointerEvents:\r\n                current.show && item[field] !== current[field] ? \"none\" : \"all\",\r\n              resize: auxiliaryLineConfig?.show ? \"both\" : \"none\",\r\n            }}\r\n            onResizeStart={onResizeStart}\r\n            onResizeing={onResizeing}\r\n            onResizeEnd={onResizeEnd}\r\n            onCloseHander={onCloseHander}\r\n            isShowCloseBtn={auxiliaryLineConfig?.show}\r\n          >\r\n            {renderPreview?.(item)}\r\n          </PreviewItem>\r\n        ))}\r\n\r\n        {mask ? (\r\n          <MoveMask\r\n            style={{\r\n              display: current?.show ? \"flex\" : \"none\",\r\n              background: isPutDown\r\n                ? \"var(--cms-divider-color)\"\r\n                : \"var(--cms-color-help)\",\r\n            }}\r\n            width={clientRect.width}\r\n            height={clientRect.height}\r\n            gap={gap}\r\n            column={current?.column}\r\n            row={current?.row}\r\n            x={current?.x}\r\n            y={current?.y}\r\n          >\r\n            {isPutDown ? \"可放置\" : \"不可放置\"}\r\n          </MoveMask>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default DragContent;\r\n","import { BaseText } from \"./text\";\r\nimport Line from \"./line\";\r\n\r\nconst elements: any = {\r\n  BaseText,\r\n  Line,\r\n};\r\nexport default elements;\r\n","import { getStyles } from \"@src/utils\";\r\nimport React, { FC, useMemo } from \"react\";\r\nimport \"./index.scss\";\r\n\r\ninterface IBaseText {\r\n  data: any;\r\n  field: string;\r\n  options: any;\r\n}\r\n// 基础文本框\r\nexport const BaseText: FC<IBaseText> = ({ data, field, options }) => {\r\n  const baseTextStyle = useMemo(() => {\r\n    return getStyles(options);\r\n  }, [options]);\r\n  const iconStyle = useMemo(() => {\r\n    return getStyles(options, \"iconStyle\");\r\n  }, [options]);\r\n  return (\r\n    <div className=\"cms-base-text\" style={baseTextStyle}>\r\n      {options.iconStyleSelect ? (\r\n        <span\r\n          className=\"cms-icon\"\r\n          style={iconStyle}\r\n          dangerouslySetInnerHTML={{ __html: options.iconStyleSelect }}\r\n        ></span>\r\n      ) : null}\r\n\r\n      {data && data[field] ? data[field] : \"文本框\"}\r\n    </div>\r\n  );\r\n};\r\n","import React, { memo, useMemo } from \"react\";\r\nimport Echarts from \"@src/compoents/echarts\";\r\nimport { getStyles, handleData, handleEchartsOption } from \"@src/utils\";\r\ninterface ILine {\r\n  options: ILine;\r\n  data: any;\r\n  field: string;\r\n}\r\n\r\nconst Line = memo((props: ILine) => {\r\n  const { options, data, field } = props;\r\n  // 处理echarts数据\r\n  const getOption = useMemo(() => {\r\n    const configuration = handleEchartsOption(options);\r\n    const currentData = data && data[field] ? data[field] : [];\r\n    const { legendData, xAxisData, yAxisData, series } =\r\n      handleData(currentData);\r\n    return {\r\n      ...configuration,\r\n      legend: {\r\n        ...configuration.legend,\r\n        data: legendData,\r\n      },\r\n      xAxis: {\r\n        ...configuration.xAxis,\r\n        data: xAxisData,\r\n      },\r\n      yAxis: {\r\n        ...configuration.yAxis,\r\n        data: yAxisData,\r\n      },\r\n      series: series\r\n        ? series.map((item) => ({\r\n            ...configuration.line.series,\r\n            ...item,\r\n          }))\r\n        : [],\r\n    };\r\n  }, [data, field, options]);\r\n  const style = useMemo(() => {\r\n    return getStyles(options);\r\n  }, [options]);\r\n  console.log(getOption, \"123\");\r\n  return (\r\n    <div style={{ ...style, width: \"100%\", height: \"100%\" }}>\r\n      <Echarts option={getOption} />\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Line;\r\n","import React, { FC } from \"react\";\r\nimport {\r\n  Modal,\r\n  ModalProps,\r\n  Form,\r\n  type FormProps,\r\n  Input,\r\n  Button,\r\n  message,\r\n} from \"antd\";\r\nimport { PAGETYPENAME } from \"@src/core/enums/access.enums\";\r\n\r\ninterface ImodifyNameDialog extends ModalProps {\r\n  onClose: () => void;\r\n  // 名称\r\n  name: string;\r\n  // 类型\r\n  pageType: PageType;\r\n  // 修改名称成功函数\r\n  modifyNameSuccessHander?: (name: string) => void;\r\n}\r\n\r\ntype FieldType = {\r\n  name: string;\r\n};\r\n\r\nconst modifyNameDialog: FC<ImodifyNameDialog> = ({\r\n  name,\r\n  open,\r\n  onClose,\r\n  pageType,\r\n  modifyNameSuccessHander,\r\n}) => {\r\n  const onFinish: FormProps<FieldType>[\"onFinish\"] = (values) => {\r\n    modifyNameSuccessHander?.(values.name);\r\n    message.success(\"修改成功\");\r\n    onClose();\r\n  };\r\n  return (\r\n    <Modal\r\n      open={open}\r\n      onClose={onClose}\r\n      onCancel={onClose}\r\n      footer={null}\r\n      title={`修改${PAGETYPENAME[pageType]}名称`}\r\n      destroyOnClose\r\n    >\r\n      <Form\r\n        onFinish={onFinish}\r\n        initialValues={{ name: name || \"\" }}\r\n        autoComplete=\"off\"\r\n      >\r\n        <Form.Item<FieldType>\r\n          name=\"name\"\r\n          rules={[\r\n            { required: true, message: `请输入${PAGETYPENAME[pageType]}名称` },\r\n          ]}\r\n        >\r\n          <Input placeholder={`请输入${PAGETYPENAME[pageType]}名称`} />\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\" block>\r\n            保存\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default modifyNameDialog;\r\n","import React, { FC, useState } from \"react\";\r\nimport \"./index.scss\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport ModifyNameDialog from \"./components/modifyNameDialog\";\r\n\r\ninterface IConfigLayoutHeader {\r\n  // 类型\r\n  pageType: PageType;\r\n  // 名称\r\n  name?: string;\r\n  // 页面logo\r\n  logo?: string;\r\n  // 预览函数\r\n  previewHandler?: () => void;\r\n  // 发布函数\r\n  publishHandler?: () => void;\r\n  // 修改名称成功函数\r\n  modifyNameSuccessHander?: (name: string) => void;\r\n}\r\n\r\nexport const ConfigLayoutHeader: FC<IConfigLayoutHeader> = ({\r\n  name,\r\n  logo,\r\n  pageType,\r\n  modifyNameSuccessHander,\r\n}) => {\r\n  const navigate = useNavigate();\r\n  const [isModalNameOpen, setIsModalNameOpen] = useState(false);\r\n  return (\r\n    <>\r\n      <div className=\"cms-config-layout__header\">\r\n        <div className=\"cms-config-layout__header--left\">\r\n          <span\r\n            className=\"cms-icon logo\"\r\n            dangerouslySetInnerHTML={{ __html: logo || \"&#xe625;\" }}\r\n          ></span>\r\n          <h1 className=\"name\">{name}</h1>\r\n          <span\r\n            className=\"cms-icon edit\"\r\n            onClick={() => setIsModalNameOpen(true)}\r\n          >\r\n            &#xec88;\r\n          </span>\r\n        </div>\r\n        <div className=\"cms-config-layout__header--right\">\r\n          <div className=\"preview\">\r\n            <i className=\"cms-icon\">&#xe668;</i>预览\r\n          </div>\r\n          <div className=\"publish\">\r\n            <i className=\"cms-icon\">&#xe620;</i>发布\r\n          </div>\r\n          <div className=\"preview\" onClick={() => navigate(-1)}>\r\n            <i className=\"cms-icon\">&#xe720;</i>返回\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <ModifyNameDialog\r\n        name={name || \"\"}\r\n        pageType={pageType}\r\n        open={isModalNameOpen}\r\n        onClose={() => setIsModalNameOpen(false)}\r\n        modifyNameSuccessHander={modifyNameSuccessHander}\r\n      ></ModifyNameDialog>\r\n    </>\r\n  );\r\n};\r\n","import React, { FC } from \"react\";\r\nimport \"./index.scss\";\r\n\r\ninterface IRulerProps {}\r\n\r\nconst Ruler: FC<IRulerProps> = () => {\r\n  const arr = Array.from(new Array(100).keys());\r\n\r\n  return (\r\n    <div className=\"cms-config-layout__ruler\">\r\n      <div className=\"cms-config-layout__ruler--hwrapper\">\r\n        <div className=\"cms-config-layout__ruler--h\">\r\n          <span className=\"ruler-h-50\">\r\n            <b>50</b>\r\n            <i></i>\r\n            <i></i>\r\n            <i></i>\r\n            <i></i>\r\n            <i></i>\r\n            <i></i>\r\n            <i></i>\r\n            <i></i>\r\n            <i></i>\r\n            <i></i>\r\n          </span>\r\n          {arr.map((item: any, index: number) => (\r\n            <span className=\"ruler-h-50\" key={index}>\r\n              <b>{index * 50}</b>\r\n              <i></i>\r\n              <i></i>\r\n              <i></i>\r\n              <i></i>\r\n              <i></i>\r\n              <i></i>\r\n              <i></i>\r\n              <i></i>\r\n              <i></i>\r\n              <i></i>\r\n            </span>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className=\"cms-config-layout__ruler--vwrapper\">\r\n        <div className=\"cms-config-layout__ruler--v\">\r\n          <span className=\"ruler-h-50\">\r\n            <b>50</b>\r\n            <i></i>\r\n            <i></i>\r\n            <i></i>\r\n            <i></i>\r\n            <i></i>\r\n            <i></i>\r\n            <i></i>\r\n            <i></i>\r\n            <i></i>\r\n            <i></i>\r\n          </span>\r\n          {arr.map((item: any, index: number) => (\r\n            <span className=\"ruler-h-50\" key={index}>\r\n              <b>{index * 50}</b>\r\n              <i></i>\r\n              <i></i>\r\n              <i></i>\r\n              <i></i>\r\n              <i></i>\r\n              <i></i>\r\n              <i></i>\r\n              <i></i>\r\n              <i></i>\r\n              <i></i>\r\n            </span>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Ruler;\r\n","import React, { FC, ReactNode } from \"react\";\r\nimport Rule from \"./components/rule\";\r\nimport \"./index.scss\";\r\ninterface IConfigLayoutMain {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const ConfigLayoutMain: FC<IConfigLayoutMain> = ({ children }) => {\r\n  return (\r\n    <div className=\"cms-config-layout__main\">\r\n      <div className=\"cms-config-layout__center\">\r\n        <Rule />\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { FC, ReactNode } from \"react\";\r\nimport \"./index.scss\";\r\nimport { CloseOutlined } from \"@ant-design/icons\";\r\ninterface IBox {\r\n  title: string;\r\n  children: ReactNode;\r\n  onClose: () => void;\r\n}\r\n\r\nconst Box: FC<IBox> = ({ title, children, onClose }) => {\r\n  return (\r\n    <div className=\"cms-box\" style={{ display: title ? \"flex\" : \"none\" }}>\r\n      <div className=\"cms-box__header\">\r\n        <div className=\"name\">{title}</div>\r\n        <CloseOutlined onClick={onClose} />\r\n      </div>\r\n      <div className=\"cms-box__body\">{children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Box;\r\n","import React, { FC, ReactNode, useEffect, useState } from \"react\";\r\nimport { PAGETYPENAME } from \"@src/core/enums/access.enums\";\r\nimport { Tooltip } from \"antd\";\r\nimport Box from \"../box\";\r\nimport \"./index.scss\";\r\ninterface IConfigLayoutLeftAside {\r\n  navs: PageType[];\r\n  render: (data: PageType | \"\") => ReactNode;\r\n}\r\n\r\ninterface ITabItem {\r\n  icon: string;\r\n  type: PageType;\r\n}\r\n\r\nconst ALLTABS: ITabItem[] = [\r\n  {\r\n    icon: \"&#xe652;\",\r\n    type: \"element\",\r\n  },\r\n  {\r\n    icon: \"&#xe634;\",\r\n    type: \"widget\",\r\n  },\r\n  {\r\n    icon: \"&#xe652;\",\r\n    type: \"page\",\r\n  },\r\n];\r\n\r\nexport const ConfigLayoutLeftAside: FC<IConfigLayoutLeftAside> = ({\r\n  render,\r\n  navs,\r\n}) => {\r\n  const [current, setCurrent] = useState<PageType | \"\">(\"element\");\r\n  const [tabs, setTabs] = useState<ITabItem[]>([]);\r\n\r\n  useEffect(() => {\r\n    setTabs(() => {\r\n      return ALLTABS.filter((item) => navs.includes(item.type));\r\n    });\r\n    setCurrent(navs[0]);\r\n  }, [navs, setTabs, setCurrent]);\r\n  return (\r\n    <div className=\"cms-config-layout__leftAside\">\r\n      <ul className=\"cms-config-layout__leftAside--tabs\">\r\n        {tabs.map((item) => (\r\n          <li\r\n            className={`cms-config-layout__leftAside--tabItem ${\r\n              current === item.type ? \"is-active\" : \"\"\r\n            }`}\r\n            onClick={() => setCurrent(item.type)}\r\n            key={item.type}\r\n          >\r\n            <Tooltip placement=\"left\" title={PAGETYPENAME[item.type]}>\r\n              <i\r\n                className=\"cms-icon\"\r\n                dangerouslySetInnerHTML={{ __html: item.icon }}\r\n              ></i>\r\n            </Tooltip>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <div\r\n        className=\"cms-config-layout__leftAside--tabContent\"\r\n        style={{\r\n          borderRight: current ? \"1px solid var(--cms-divider-color)\" : \"none\",\r\n        }}\r\n      >\r\n        <Box\r\n          title={current ? PAGETYPENAME[current] : \"\"}\r\n          onClose={() => setCurrent(\"\")}\r\n        >\r\n          {render(current)}\r\n        </Box>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { FC, ReactNode } from \"react\";\r\nimport { dragStore } from \"../drag\";\r\nimport \"./index.scss\";\r\n\r\ninterface IDragItem {\r\n  data: IAnyObject;\r\n  title: string;\r\n  children: ReactNode;\r\n  /** 拖拽分组标识 */\r\n  groupName?: string;\r\n}\r\n\r\nconst DragItem: FC<IDragItem> = ({\r\n  title,\r\n  children,\r\n  data,\r\n  groupName = \"DrapDrop\",\r\n}) => {\r\n  const onDragStart = (e: React.DragEvent<HTMLDivElement>) => {\r\n    dragStore.set(groupName, data);\r\n  };\r\n  const onDragEnd = (e: React.DragEvent<HTMLDivElement>) => {\r\n    dragStore.remove(groupName);\r\n  };\r\n  return (\r\n    <div\r\n      className=\"cms-drag__item\"\r\n      draggable\r\n      onDragStart={onDragStart}\r\n      onDragEnd={onDragEnd}\r\n    >\r\n      <div className=\"cms-drag__item--body\">{children}</div>\r\n      <div className=\"cms-drag__item--footer\">{title}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DragItem;\r\n","import React, { FC, useEffect, useState } from \"react\";\r\nimport { ELEMETSTYPE } from \"@src/core/enums/access.enums\";\r\nimport { elements } from \"@src/core/hook\";\r\nimport { Empty, Image } from \"antd\";\r\nimport DragItem from \"@src/compoents/dragdrop/dragItem\";\r\nimport \"./index.scss\";\r\ninterface IConfigLayoutLeftAsideElements {}\r\n\r\nconst ALLELEMENTS: elementsType[] = [\r\n  \"text\",\r\n  \"image\",\r\n  \"table\",\r\n  \"line\",\r\n  \"bar\",\r\n  \"pie\",\r\n];\r\n\r\nexport const ConfigLayoutLeftAsideElements: FC<\r\n  IConfigLayoutLeftAsideElements\r\n> = () => {\r\n  const [current, setCurrent] = useState<elementsType>(\"text\");\r\n  const { getElements, elementsList, elementsLoading } = elements();\r\n  useEffect(() => {\r\n    getElements();\r\n  }, [getElements]);\r\n  return (\r\n    <div className=\"cms-config-layout__elements\">\r\n      <ul className=\"cms-config-layout__elements--left\">\r\n        {ALLELEMENTS.map((item) => (\r\n          <div\r\n            key={item}\r\n            className={current === item ? \"is-active\" : \"\"}\r\n            onClick={() => setCurrent(item)}\r\n          >\r\n            {ELEMETSTYPE[item]}\r\n          </div>\r\n        ))}\r\n      </ul>\r\n      <div className=\"cms-config-layout__elements--right\">\r\n        {elementsList\r\n          .filter((item) => item.type === current)\r\n          ?.map((item) => (\r\n            <DragItem\r\n              key={item.code}\r\n              title={item.name}\r\n              data={item}\r\n              groupName=\"elements\"\r\n            >\r\n              <Image\r\n                width={174}\r\n                height={86}\r\n                src={`./elements/${item.code}.png`}\r\n                preview={false}\r\n              />\r\n            </DragItem>\r\n          ))}\r\n        {!elementsLoading &&\r\n          !elementsList.filter((item) => item.type === current)?.length && (\r\n            <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n          )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { FC, ReactNode, useEffect, useState } from \"react\";\r\nimport { PAGETYPENAME } from \"@src/core/enums/access.enums\";\r\nimport { Tooltip } from \"antd\";\r\nimport Box from \"../box\";\r\nimport \"./index.scss\";\r\ninterface IConfigLayoutRightAside {\r\n  render: (data: PageType | \"\") => ReactNode;\r\n  navs: PageType[];\r\n}\r\n\r\ninterface ITabItem {\r\n  icon: string;\r\n  type: PageType;\r\n}\r\n\r\nconst ALLTABS: ITabItem[] = [\r\n  {\r\n    icon: \"&#xe63c;\",\r\n    type: \"layer\",\r\n  },\r\n  {\r\n    icon: \"&#xe652;\",\r\n    type: \"element\",\r\n  },\r\n  {\r\n    icon: \"&#xe634;\",\r\n    type: \"widget\",\r\n  },\r\n  {\r\n    icon: \"&#xe62e;\",\r\n    type: \"data\",\r\n  },\r\n  {\r\n    icon: \"&#xe652;\",\r\n    type: \"page\",\r\n  },\r\n  {\r\n    icon: \"&#xe61c;\",\r\n    type: \"linkage\",\r\n  },\r\n];\r\n\r\nexport const ConfigLayoutRightAside: FC<IConfigLayoutRightAside> = ({\r\n  render,\r\n  navs,\r\n}) => {\r\n  const [current, setCurrent] = useState<PageType | \"\">(\"element\");\r\n  const [tabs, setTabs] = useState<ITabItem[]>([]);\r\n\r\n  useEffect(() => {\r\n    setTabs(() => {\r\n      return ALLTABS.filter((item) => navs.includes(item.type));\r\n    });\r\n    setCurrent(navs[0]);\r\n  }, [navs, setTabs, setCurrent]);\r\n  return (\r\n    <div className=\"cms-config-layout__rightAside\">\r\n      <div\r\n        className=\"cms-config-layout__rightAside--tabContent\"\r\n        style={{\r\n          borderLeft: current ? \"1px solid var(--cms-divider-color)\" : \"none\",\r\n        }}\r\n      >\r\n        <Box\r\n          title={`${current ? PAGETYPENAME[current] + \"配置\" : \"\"}`}\r\n          onClose={() => setCurrent(\"\")}\r\n        >\r\n          {render(current)}\r\n        </Box>\r\n      </div>\r\n      <ul className=\"cms-config-layout__rightAside--tabs\">\r\n        {tabs.map((item) => (\r\n          <li\r\n            className={`cms-config-layout__rightAside--tabItem ${\r\n              current === item.type ? \"is-active\" : \"\"\r\n            }`}\r\n            onClick={() => setCurrent(item.type)}\r\n            key={item.type}\r\n          >\r\n            <Tooltip placement=\"left\" title={`${PAGETYPENAME[item.type]}配置`}>\r\n              <i\r\n                className=\"cms-icon\"\r\n                dangerouslySetInnerHTML={{ __html: item.icon }}\r\n              ></i>\r\n            </Tooltip>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n","import { FolderOpenOutlined, FolderOutlined } from \"@ant-design/icons\";\r\nimport { IWidget } from \"@src/service\";\r\nimport React, { FC } from \"react\";\r\nimport \"./index.scss\";\r\n\r\ninterface IConfigLayoutRightAsideLayer {\r\n  datas: IWidget[];\r\n  widgetId?: string;\r\n  elementId?: string;\r\n  onSelected: (widgetId: string, elementId?: string) => void;\r\n}\r\n\r\nexport const ConfigLayoutRightAsideLayer: FC<IConfigLayoutRightAsideLayer> = ({\r\n  datas,\r\n  widgetId,\r\n  elementId,\r\n  onSelected,\r\n}) => {\r\n  return (\r\n    <div className=\"cms-config-layout__layer\">\r\n      {datas.map((widget, index) => (\r\n        <div\r\n          key={widget.widgetId || index}\r\n          className=\"cms-config-layout__layer--item\"\r\n        >\r\n          <div\r\n            className={`name ${\r\n              widgetId === widget.widgetId ? \"is-active\" : \"\"\r\n            }`}\r\n            onClick={() => onSelected(widget.widgetId)}\r\n          >\r\n            <FolderOpenOutlined /> {widget.name}\r\n          </div>\r\n          <div className=\"content\">\r\n            {widget.elements.map((element) => (\r\n              <div\r\n                key={element.elementId}\r\n                className={`${\r\n                  elementId === element.elementId ? \"is-active\" : \"\"\r\n                }`}\r\n                onClick={() => onSelected(widget.widgetId, element.elementId)}\r\n              >\r\n                <FolderOutlined /> {element.name}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React, { FC } from \"react\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  InputNumber,\r\n  Select,\r\n  Slider,\r\n  Switch,\r\n  ColorPicker,\r\n} from \"antd\";\r\nimport TextArea from \"antd/es/input/TextArea\";\r\n\r\nconst { Option } = Select;\r\n\r\ninterface IBaseForm {\r\n  item: any;\r\n}\r\n\r\nconst BaseForm: FC<IBaseForm> = ({ item }) => {\r\n  return (\r\n    <>\r\n      {item.componentName === \"Input\" && (\r\n        <Form.Item\r\n          label={item.label}\r\n          name={item.name}\r\n          tooltip={item.tooltip}\r\n          rules={[{ required: item.require }]}\r\n          validateTrigger=\"onBlur\"\r\n        >\r\n          <Input\r\n            size=\"small\"\r\n            allowClear\r\n            disabled={item.disabled}\r\n            placeholder={item.placeholder}\r\n          />\r\n        </Form.Item>\r\n      )}\r\n      {item.componentName === \"InputNumber\" && (\r\n        <Form.Item\r\n          label={item.label}\r\n          name={item.name}\r\n          tooltip={item.tooltip}\r\n          validateTrigger=\"onBlur\"\r\n          rules={[{ required: item.require }]}\r\n        >\r\n          <InputNumber\r\n            size=\"small\"\r\n            disabled={item.disabled}\r\n            min={item.min}\r\n            max={item.max}\r\n            style={{ width: \"100%\" }}\r\n            addonAfter={item.addonAfter || \"\"}\r\n            placeholder={item.placeholder}\r\n          />\r\n        </Form.Item>\r\n      )}\r\n      {item.componentName === \"TextArea\" && (\r\n        <Form.Item\r\n          label={item.label}\r\n          name={item.name}\r\n          tooltip={item.tooltip}\r\n          rules={[{ required: item.require }]}\r\n          validateTrigger=\"onBlur\"\r\n        >\r\n          <TextArea\r\n            size=\"small\"\r\n            allowClear\r\n            disabled={item.disabled}\r\n            rows={8}\r\n            placeholder={item.placeholder}\r\n          />\r\n        </Form.Item>\r\n      )}\r\n      {item.componentName === \"Switch\" && (\r\n        <Form.Item\r\n          label={item.label}\r\n          name={item.name}\r\n          tooltip={item.tooltip}\r\n          valuePropName=\"checked\"\r\n          rules={[{ required: item.require }]}\r\n        >\r\n          <Switch size=\"small\" />\r\n        </Form.Item>\r\n      )}\r\n      {item.componentName === \"Slider\" && (\r\n        <Form.Item\r\n          label={item.label}\r\n          name={item.name}\r\n          tooltip={item.tooltip}\r\n          rules={[{ required: item.require }]}\r\n        >\r\n          <Slider\r\n            min={item.min || 0}\r\n            max={item.max || 100}\r\n            disabled={item.disabled}\r\n            step={item.step || 1}\r\n          />\r\n        </Form.Item>\r\n      )}\r\n      {item.componentName === \"Select\" && (\r\n        <Form.Item\r\n          label={item.label}\r\n          name={item.name}\r\n          tooltip={item.tooltip}\r\n          rules={[{ required: item.require }]}\r\n        >\r\n          <Select\r\n            size=\"small\"\r\n            allowClear\r\n            disabled={item.disabled}\r\n            placeholder={item.placeholder}\r\n          >\r\n            {item.options.map((subItem: any) => (\r\n              <Option key={subItem.code} value={subItem.code}>\r\n                <div\r\n                  className={`${\r\n                    item.name === \"iconStyleSelect\" ? \"cms-icon\" : \"\"\r\n                  }`}\r\n                  dangerouslySetInnerHTML={{ __html: subItem.name }}\r\n                ></div>\r\n              </Option>\r\n            ))}\r\n          </Select>\r\n        </Form.Item>\r\n      )}\r\n      {item.componentName === \"SketchPicker\" && (\r\n        <Form.Item label={item.label} name={item.name}>\r\n          <ColorPicker size=\"small\" allowClear format=\"hex\" showText />\r\n        </Form.Item>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BaseForm;\r\n","import { Collapse, Form } from \"antd\";\r\nimport React, { FC } from \"react\";\r\nimport BaseForm from \"../baseForm\";\r\n\r\nconst { Panel } = Collapse;\r\n\r\ninterface IDynamicForm {\r\n  datas: any;\r\n}\r\n\r\n// 判断数据是Array 或者 object\r\nconst judgeType = (data: any, type: string) => {\r\n  return Object.prototype.toString.call(data) === type;\r\n};\r\n\r\nconst DynamicForm: FC<IDynamicForm> = ({ datas }) => {\r\n  return datas.map((item: any, index: number) => {\r\n    if (judgeType(item, \"[object Object]\")) {\r\n      const relationFields =\r\n        item.relationFields !== undefined ? item.relationFields.split(\",\") : [];\r\n      return (\r\n        <div key={index}>\r\n          {!relationFields.length ? (\r\n            <BaseForm item={item} />\r\n          ) : (\r\n            <Form.Item noStyle shouldUpdate>\r\n              {({ getFieldValue }) => {\r\n                if (\r\n                  relationFields.every((subItem: string) =>\r\n                    item.relationValues.includes(String(getFieldValue(subItem)))\r\n                  )\r\n                ) {\r\n                  return <BaseForm item={item} />;\r\n                }\r\n              }}\r\n            </Form.Item>\r\n          )}\r\n        </div>\r\n      );\r\n    }\r\n    if (judgeType(item, \"[object Array]\")) {\r\n      return (\r\n        <div key={index}>\r\n          {item.map((subItem: any, subIndex: number) => {\r\n            const relationFields =\r\n              subItem.relationFields !== undefined\r\n                ? subItem.relationFields.split(\",\")\r\n                : [];\r\n            return (\r\n              <Collapse\r\n                key={subIndex}\r\n                size=\"small\"\r\n                defaultActiveKey={[\"0-0\"]}\r\n                bordered={false}\r\n              >\r\n                {subItem.relationFields === undefined ? (\r\n                  <Panel header={subItem.name} key={`${index}-${subIndex}`}>\r\n                    <DynamicForm datas={subItem.list} />\r\n                  </Panel>\r\n                ) : (\r\n                  <Form.Item noStyle shouldUpdate>\r\n                    {({ getFieldValue }) => {\r\n                      if (\r\n                        relationFields.every((subbItem: string) =>\r\n                          subItem.relationValues.includes(\r\n                            String(getFieldValue(subbItem))\r\n                          )\r\n                        )\r\n                      ) {\r\n                        return (\r\n                          <Collapse\r\n                            key={subIndex}\r\n                            size=\"small\"\r\n                            bordered={false}\r\n                          >\r\n                            <Panel\r\n                              header={subItem.name}\r\n                              key={`${index}-${subIndex}`}\r\n                            >\r\n                              <DynamicForm datas={subItem.list} />\r\n                            </Panel>\r\n                          </Collapse>\r\n                        );\r\n                      }\r\n                    }}\r\n                  </Form.Item>\r\n                )}\r\n              </Collapse>\r\n            );\r\n          })}\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  });\r\n};\r\n\r\nexport default DynamicForm;\r\n","import React, { FC, useCallback, useEffect } from \"react\";\r\nimport { Form } from \"antd\";\r\nimport DynamicForm from \"../dynamicForm\";\r\nimport { widgetConfig } from \"@src/core/config/base\";\r\n\r\ninterface IConfigLayoutRightAsideWidget {\r\n  configureValue: IAnyObject;\r\n  onFinish: (data: IAnyObject) => void;\r\n}\r\n\r\nexport const ConfigLayoutRightAsideWidget: FC<\r\n  IConfigLayoutRightAsideWidget\r\n> = ({ configureValue, onFinish }) => {\r\n  const [form] = Form.useForm();\r\n\r\n  useEffect(() => {\r\n    form.setFieldsValue(configureValue);\r\n  }, [configureValue, form]);\r\n\r\n  const onValuesChange = useCallback(\r\n    (changedValues: any, allValues: IAnyObject) => {\r\n      // 所有变化的值\r\n      let fields = { ...allValues };\r\n      for (let filed in fields) {\r\n        if (typeof fields[filed] === \"object\") {\r\n          fields[filed] = `#${fields[filed].toHex()}`;\r\n        }\r\n      }\r\n      onFinish(fields);\r\n    },\r\n    [onFinish]\r\n  );\r\n  return (\r\n    <div className=\"cms-config-layout__widget\">\r\n      <Form\r\n        labelCol={{ flex: \"110px\" }}\r\n        labelAlign=\"left\"\r\n        form={form}\r\n        onValuesChange={onValuesChange}\r\n      >\r\n        <DynamicForm datas={widgetConfig.configure || []} />\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n","import { baseText } from \"./text\";\r\nimport { line } from \"./line\";\r\n\r\nconst elementsConfig: any = {\r\n  baseText,\r\n  line,\r\n};\r\n\r\nexport default elementsConfig;\r\n","import { boxConfig, fontConfig, dataConfig } from \"../../base\";\r\n\r\nexport const baseText = {\r\n  // 配置名称\r\n  code: \"baseText\",\r\n  // 基础配置项\r\n  configure: [\r\n    [\r\n      {\r\n        name: \"基础设置\",\r\n        list: [\r\n          ...fontConfig.configure,\r\n          [\r\n            {\r\n              name: \"文字阴影\",\r\n              list: [\r\n                {\r\n                  componentName: \"InputNumber\",\r\n                  label: \"X轴偏移\",\r\n                  name: \"styleTextShadowX\",\r\n                  required: false,\r\n                  placeholder: \"请输入X轴偏移\",\r\n                  addonAfter: \"px\",\r\n                },\r\n                {\r\n                  componentName: \"InputNumber\",\r\n                  label: \"Y轴偏移\",\r\n                  name: \"styleTextShadowY\",\r\n                  required: false,\r\n                  placeholder: \"请输入Y轴偏移\",\r\n                  addonAfter: \"px\",\r\n                },\r\n                {\r\n                  componentName: \"InputNumber\",\r\n                  label: \"模糊值\",\r\n                  name: \"styleTextShadowF\",\r\n                  required: false,\r\n                  placeholder: \"请输入模糊值\",\r\n                  addonAfter: \"px\",\r\n                },\r\n                {\r\n                  componentName: \"SketchPicker\",\r\n                  label: \"颜色\",\r\n                  name: \"styleTextShadowC\",\r\n                  required: false,\r\n                  placeholder: \"请选择颜色\",\r\n                },\r\n              ],\r\n            },\r\n            ...boxConfig.configure,\r\n          ],\r\n        ],\r\n      },\r\n      {\r\n        name: \"icon图标\",\r\n        list: [\r\n          {\r\n            componentName: \"Select\",\r\n            label: \"图标\",\r\n            name: \"iconStyleSelect\",\r\n            required: false,\r\n            placeholder: \"\",\r\n            options: [\r\n              { code: \"&#xe62e\", name: \"&#xe62e\" },\r\n              { code: \"&#xeb04\", name: \"&#xeb04\" },\r\n              { code: \"&#xec89\", name: \"&#xec89\" },\r\n              { code: \"&#xe668\", name: \"&#xe668\" },\r\n              { code: \"&#xe620\", name: \"&#xe620\" },\r\n              { code: \"&#xe652\", name: \"&#xe652\" },\r\n              { code: \"&#xe63d\", name: \"&#xe63d\" },\r\n              { code: \"&#xe65a\", name: \"&#xe65a\" },\r\n              { code: \"&#xe7de\", name: \"&#xe7de\" },\r\n              { code: \"&#xe7b0\", name: \"&#xe7b0\" },\r\n              { code: \"&#xe7b1\", name: \"&#xe7b1\" },\r\n            ],\r\n          },\r\n          {\r\n            componentName: \"InputNumber\",\r\n            label: \"字体大小\",\r\n            name: \"iconStyleFontSize\",\r\n            required: false,\r\n            min: 12,\r\n            placeholder: \"\",\r\n            addonAfter: \"px\",\r\n          },\r\n          {\r\n            componentName: \"SketchPicker\",\r\n            label: \"字体颜色\",\r\n            name: \"iconStyleColor\",\r\n            required: false,\r\n            placeholder: \"请选择字体颜色\",\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  ],\r\n  data: dataConfig.configure,\r\n};\r\n","import { echartsConfig, animateConfig, dataConfig } from \"../../base\";\r\n\r\nexport const line = {\r\n  configure: [\r\n    [\r\n      {\r\n        name: \"基础设置\",\r\n        list: [\r\n          ...echartsConfig.line,\r\n          ...echartsConfig.seriesStack,\r\n          echartsConfig.seriesLabel,\r\n          echartsConfig.symbol,\r\n        ],\r\n      },\r\n      {\r\n        name: \"标题\",\r\n        list: echartsConfig.title,\r\n      },\r\n      {\r\n        name: \"图例\",\r\n        list: echartsConfig.legend,\r\n      },\r\n      {\r\n        name: \"网格\",\r\n        list: echartsConfig.grid,\r\n      },\r\n      {\r\n        name: \"X轴\",\r\n        list: echartsConfig.xAxis,\r\n      },\r\n      {\r\n        name: \"y轴\",\r\n        list: echartsConfig.yAxis,\r\n      },\r\n      {\r\n        name: \"自定义颜色\",\r\n        list: echartsConfig.echartColor,\r\n      },\r\n      ...animateConfig.configure,\r\n    ],\r\n  ],\r\n  data: dataConfig.configure,\r\n};\r\n","import React, { FC, useCallback, useEffect } from \"react\";\r\nimport { Form } from \"antd\";\r\nimport DynamicForm from \"../dynamicForm\";\r\nimport elements from \"@src/core/config/classification\";\r\n\r\ninterface IConfigLayoutRightAsideElement {\r\n  element?: elementsNameType;\r\n  configureValue: IAnyObject;\r\n  onFinish: (data: IAnyObject) => void;\r\n}\r\n\r\nexport const ConfigLayoutRightAsideElement: FC<\r\n  IConfigLayoutRightAsideElement\r\n> = ({ configureValue, onFinish, element }) => {\r\n  const [form] = Form.useForm();\r\n\r\n  const onValuesChange = useCallback(\r\n    (changedValues: any, allValues: IAnyObject) => {\r\n      // 所有变化的值\r\n      let fields = { ...allValues };\r\n      for (let filed in fields) {\r\n        if (typeof fields[filed] === \"object\") {\r\n          fields[filed] = `#${fields[filed].toHex()}`;\r\n        }\r\n      }\r\n      onFinish(fields);\r\n    },\r\n    [onFinish]\r\n  );\r\n\r\n  useEffect(() => {\r\n    form.setFieldsValue(configureValue);\r\n  }, [configureValue, form]);\r\n  return (\r\n    <div className=\"cms-config-layout__element\">\r\n      <Form\r\n        labelCol={{ flex: \"110px\" }}\r\n        labelAlign=\"left\"\r\n        form={form}\r\n        onValuesChange={onValuesChange}\r\n      >\r\n        <DynamicForm\r\n          datas={elements?.[element as elementsNameType]?.configure || []}\r\n        />\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n","import React, { FC, HtmlHTMLAttributes, ReactNode } from \"react\";\r\nimport \"./index.scss\";\r\ninterface IWidgetLayout extends HtmlHTMLAttributes<HTMLDivElement> {\r\n  header: ReactNode;\r\n  body: ReactNode;\r\n  headerStyles: IAnyObject;\r\n  bodyStyles: IAnyObject;\r\n}\r\n\r\nconst WidgetLayout: FC<IWidgetLayout> = ({\r\n  header,\r\n  body,\r\n  style,\r\n  headerStyles,\r\n  bodyStyles,\r\n}) => {\r\n  return (\r\n    <div className=\"cms-widget\" style={style}>\r\n      <div className=\"cms-widget__header\" style={headerStyles}>\r\n        {header}\r\n      </div>\r\n      <div className=\"cms-widget__body\" style={bodyStyles}>\r\n        {body}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WidgetLayout;\r\n","import React, { FC, useCallback, useEffect, useMemo, useReducer } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport DragContent from \"@src/compoents/dragdrop/dragContent\";\r\nimport elements from \"@src/elements\";\r\nimport {\r\n  ConfigLayoutHeader,\r\n  ConfigLayoutMain,\r\n  ConfigLayoutLeftAside,\r\n  ConfigLayoutRightAside,\r\n  ConfigLayoutLeftAsideElements,\r\n  ConfigLayoutRightAsideLayer,\r\n  ConfigLayoutRightAsideWidget,\r\n  ConfigLayoutRightAsideElement,\r\n} from \"@src/layout/configLayout\";\r\n\r\nimport \"@src/layout/configLayout/index.scss\";\r\nimport WidgetLayout from \"@src/layout/widgetLayout\";\r\nimport { initialState, widgetReducer } from \"./store/reducers\";\r\nimport { IElement } from \"@src/service\";\r\nimport { capitalizeFirstLetter, guid, getStyles } from \"@src/utils\";\r\nimport \"animate.css\";\r\ninterface IConfigLayout {}\r\n\r\nconst ConfigLayout: FC<IConfigLayout> = () => {\r\n  let location = useLocation();\r\n  const [layout, dispatch] = useReducer(widgetReducer, initialState);\r\n\r\n  useEffect(() => {\r\n    const queryParams = new URLSearchParams(location.search);\r\n    // 编辑\r\n    if (queryParams.size) {\r\n    } else {\r\n      // 新增\r\n      dispatch({\r\n        type: \"WIDGET\",\r\n        data: {\r\n          name: \"未命名微件\",\r\n          url: \"\",\r\n          id: \"\",\r\n          createTime: \"\",\r\n          type: \"text\",\r\n          count: 0,\r\n          x: 0,\r\n          y: 0,\r\n          column: 1,\r\n          row: 1,\r\n          widgetId: guid(),\r\n          configuration: {},\r\n          elements: [],\r\n        },\r\n      });\r\n    }\r\n  }, [location]);\r\n\r\n  const onDropHandler = (\r\n    position: \"header\" | \"body\",\r\n    isAdd: boolean,\r\n    data: IAnyObject\r\n  ) => {\r\n    // 新增\r\n    if (isAdd) {\r\n      dispatch({\r\n        type: \"ADD_ELEMENT\",\r\n        data: {\r\n          ...data,\r\n          position: position,\r\n        } as IElement,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: \"MODIFY_ELEMENT\",\r\n        data: {\r\n          ...data,\r\n          position: position,\r\n        } as IElement,\r\n      });\r\n    }\r\n  };\r\n\r\n  const onResizeEndHandler = useCallback((data: IAnyObject) => {\r\n    dispatch({\r\n      type: \"MODIFY_ELEMENT\",\r\n      data: { ...data },\r\n    });\r\n  }, []);\r\n\r\n  const onCloseHander = useCallback((id: string) => {\r\n    console.log(id, \"onCloseHander\");\r\n    dispatch({\r\n      type: \"DELETE_ELEMENT\",\r\n      id,\r\n    });\r\n  }, []);\r\n\r\n  const renderPreview = useCallback((data: IAnyObject) => {\r\n    if (data.element && elements[capitalizeFirstLetter(data.element)]) {\r\n      return React.createElement(\r\n        elements[capitalizeFirstLetter(data.element)],\r\n        {\r\n          options: data.configuration.configureValue,\r\n          data: data.configuration.dataValue.mock,\r\n          field: data.configuration.dataValue.field,\r\n        }\r\n      );\r\n    }\r\n    return <div>你访问的组件不存在请联系售后人员</div>;\r\n  }, []);\r\n  // 判断右侧边栏所需模块\r\n  const rightAside = useMemo(() => {\r\n    let arr: PageType[] = [];\r\n    if (layout?.widgetId) {\r\n      if (layout?.elementId) {\r\n        arr = [\"layer\", \"element\", \"widget\", \"data\", \"linkage\"];\r\n      } else {\r\n        arr = [\"layer\", \"widget\", \"data\", \"linkage\"];\r\n      }\r\n    } else {\r\n      arr = [\"layer\"];\r\n    }\r\n    return arr;\r\n  }, [layout?.elementId, layout?.widgetId]);\r\n\r\n  const onSelected = useCallback(\r\n    (widgetId: string, elementId: string | undefined) => {\r\n      if (elementId && layout?.elementId !== elementId) {\r\n        dispatch({\r\n          type: \"SELECT_ELEMENT\",\r\n          id: elementId,\r\n        });\r\n      }\r\n    },\r\n    [layout?.elementId]\r\n  );\r\n\r\n  const currentElement = useMemo(() => {\r\n    return layout?.widget.elements.find(\r\n      (item) => item.elementId === layout?.elementId\r\n    );\r\n  }, [layout?.elementId, layout?.widget.elements]);\r\n\r\n  return (\r\n    <div className=\"cms-config-layout\">\r\n      <ConfigLayoutHeader\r\n        name={layout?.widget.name}\r\n        pageType=\"widget\"\r\n        modifyNameSuccessHander={(name) => {\r\n          dispatch({\r\n            type: \"MODIFY_WIDGET\",\r\n            data: {\r\n              name: name,\r\n            },\r\n          });\r\n        }}\r\n      />\r\n      <div className=\"cms-config-layout__content\">\r\n        <ConfigLayoutLeftAside\r\n          navs={[\"element\"]}\r\n          render={(data) => {\r\n            if (data === \"element\") {\r\n              return <ConfigLayoutLeftAsideElements />;\r\n            }\r\n            return null;\r\n          }}\r\n        />\r\n        <ConfigLayoutMain>\r\n          <WidgetLayout\r\n            style={getStyles(\r\n              layout?.widget?.configuration?.configureValue || {}\r\n            )}\r\n            headerStyles={getStyles(\r\n              layout?.widget?.configuration?.configureValue || {},\r\n              \"headerStyle\"\r\n            )}\r\n            bodyStyles={getStyles(\r\n              layout?.widget?.configuration?.configureValue || {},\r\n              \"bodyStyle\"\r\n            )}\r\n            header={\r\n              <DragContent\r\n                auxiliaryLineConfig={{\r\n                  show: layout?.widget?.configuration?.configureValue\r\n                    ?.isShowAuxiliaryLine,\r\n                  borderColor:\r\n                    layout?.widget?.configuration?.configureValue\r\n                      ?.auxiliaryLineBorderColor,\r\n                }}\r\n                column={8}\r\n                row={1}\r\n                gap={4}\r\n                groupName=\"elements\"\r\n                field=\"elementId\"\r\n                datas={\r\n                  layout?.widget.elements.filter(\r\n                    (item) => item.position === \"header\"\r\n                  ) || []\r\n                }\r\n                onDropHandler={(isAdd, data) =>\r\n                  onDropHandler(\"header\", isAdd, data)\r\n                }\r\n                onResizeEndHandler={onResizeEndHandler}\r\n                onCloseHander={onCloseHander}\r\n                renderPreview={renderPreview}\r\n              />\r\n            }\r\n            body={\r\n              <DragContent\r\n                auxiliaryLineConfig={{\r\n                  show: layout?.widget?.configuration?.configureValue\r\n                    ?.isShowAuxiliaryLine,\r\n                  borderColor:\r\n                    layout?.widget?.configuration?.configureValue\r\n                      ?.auxiliaryLineBorderColor,\r\n                }}\r\n                column={8}\r\n                row={8}\r\n                gap={4}\r\n                groupName=\"elements\"\r\n                field=\"elementId\"\r\n                datas={\r\n                  layout?.widget.elements.filter(\r\n                    (item) => item.position === \"body\"\r\n                  ) || []\r\n                }\r\n                onDropHandler={(isAdd, data) =>\r\n                  onDropHandler(\"body\", isAdd, data)\r\n                }\r\n                onResizeEndHandler={onResizeEndHandler}\r\n                onCloseHander={onCloseHander}\r\n                renderPreview={renderPreview}\r\n              />\r\n            }\r\n          />\r\n        </ConfigLayoutMain>\r\n        <ConfigLayoutRightAside\r\n          navs={rightAside}\r\n          render={(data) => {\r\n            if (data === \"layer\") {\r\n              return (\r\n                <ConfigLayoutRightAsideLayer\r\n                  datas={layout?.widget ? [layout?.widget] : []}\r\n                  widgetId={layout?.widgetId}\r\n                  elementId={layout?.elementId}\r\n                  onSelected={onSelected}\r\n                />\r\n              );\r\n            } else if (data === \"widget\") {\r\n              return (\r\n                <ConfigLayoutRightAsideWidget\r\n                  configureValue={\r\n                    (layout?.widget?.configuration\r\n                      ?.configureValue as IAnyObject) || {}\r\n                  }\r\n                  onFinish={(data: IAnyObject) => {\r\n                    const configuration = JSON.parse(\r\n                      JSON.stringify(layout?.widget?.configuration)\r\n                    );\r\n                    dispatch({\r\n                      type: \"MODIFY_WIDGET\",\r\n                      data: {\r\n                        configuration: {\r\n                          ...configuration,\r\n                          configureValue: {\r\n                            ...configuration.configureValue,\r\n                            ...data,\r\n                          },\r\n                        },\r\n                      },\r\n                    });\r\n                  }}\r\n                />\r\n              );\r\n            } else if (data === \"element\") {\r\n              return (\r\n                <ConfigLayoutRightAsideElement\r\n                  element={currentElement?.element}\r\n                  configureValue={\r\n                    currentElement?.configuration.configureValue || {}\r\n                  }\r\n                  onFinish={(data: IAnyObject) => {\r\n                    const currentElement = JSON.parse(\r\n                      JSON.stringify(\r\n                        layout?.widget?.elements.find(\r\n                          (item) => item.elementId === layout.elementId\r\n                        )\r\n                      )\r\n                    );\r\n                    if (currentElement) {\r\n                      dispatch({\r\n                        type: \"MODIFY_ELEMENT\",\r\n                        data: {\r\n                          ...currentElement,\r\n                          configuration: {\r\n                            ...currentElement.configuration,\r\n                            configureValue: {\r\n                              ...currentElement.configuration.configureValue,\r\n                              ...data,\r\n                            },\r\n                          },\r\n                        },\r\n                      });\r\n                    }\r\n                  }}\r\n                />\r\n              );\r\n            }\r\n            return <div>{data}</div>;\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConfigLayout;\r\n"],"names":["echarts","data","memo","props","theme","group","initOptions","option","updateOptions","loading","loadingOptions","autoresize","dom","useRef","chart","timmer","currentIndex","autoPlayHandler","useCallback","series","length","current","clearInterval","setInterval","_","_chart$current","_chart$current2","_chart$current3","dataLen","dispatchAction","type","seriesIndex","dataIndex","mouseHander","e","_chart$current4","_chart$current5","init","initChart","showLoading","hideLoading","setOption","tooltip","trigger","backgroundColor","borderColor","padding","textStyle","color","fontSize","cleanup","off","dispose","undefined","useEffect","onResize","on","resizeObserver","ResizeObserver","entries","callback","_chart$current6","Array","isArray","resize","observe","disconnect","console","log","React","className","ref","style","width","height","prevProps","nextProps","JSON","stringify","dragStore","constructor","moveItem","Map","set","key","this","remove","delete","get","_ref","gap","column","row","x","y","children","maskStyle","useMemo","getItemSizeStyle","transform","groupName","onResizeStart","onResizeing","onResizeEnd","onCloseHander","isShowCloseBtn","moveing","setMoveing","useState","resizeing","setResizeing","previewStyles","gridArea","opacity","onDragStart","pageX","pageY","setTimeout","onDragEnd","onMouseDown","onMouseMove","preventDefault","onMouseUp","target","draggable","onClick","elementId","mask","field","onDropHandler","datas","onResizeEndHandler","renderPreview","auxiliaryLineConfig","clientRect","setClientRect","resizeEnd","setResizeEnd","setCuurent","getClientRect","_target$current","getBoundingClientRect","isPutDown","currentXy","p1","p2","every","item","booleanIntersects","booleanWithin","getX","num","parseInt","String","getY","getColumn","Math","max","ceil","getRow","onDragEnter","dragData","state","show","onDragOver","onDragLeave","onDrop","Boolean","guid","offsetWidth","offsetHeight","display","gridTemplateColumns","gridTemplateRows","fill","map","index","PreviewItem","pointerEvents","MoveMask","background","BaseText","options","baseTextStyle","getStyles","iconStyle","iconStyleSelect","dangerouslySetInnerHTML","__html","Line","getOption","configuration","handleEchartsOption","currentData","legendData","xAxisData","yAxisData","handleData","legend","xAxis","yAxis","line","Echarts","name","open","onClose","pageType","modifyNameSuccessHander","Modal","onCancel","footer","title","PAGETYPENAME","destroyOnClose","Form","onFinish","values","message","success","initialValues","autoComplete","Item","rules","required","Input","placeholder","Button","htmlType","block","ConfigLayoutHeader","logo","navigate","useNavigate","isModalNameOpen","setIsModalNameOpen","ModifyNameDialog","Ruler","arr","from","keys","ConfigLayoutMain","Rule","CloseOutlined","ALLTABS","icon","ConfigLayoutLeftAside","render","navs","setCurrent","tabs","setTabs","filter","includes","Tooltip","placement","borderRight","Box","ALLELEMENTS","ConfigLayoutLeftAsideElements","_elementsList$filter","_elementsList$filter2","getElements","elementsList","elementsLoading","elements","ELEMETSTYPE","DragItem","code","Image","src","preview","Empty","image","PRESENTED_IMAGE_SIMPLE","ConfigLayoutRightAside","borderLeft","ConfigLayoutRightAsideLayer","widgetId","onSelected","widget","FolderOpenOutlined","element","FolderOutlined","Option","Select","componentName","label","require","validateTrigger","size","allowClear","disabled","InputNumber","min","addonAfter","TextArea","rows","valuePropName","Switch","Slider","step","subItem","value","ColorPicker","format","showText","Panel","Collapse","judgeType","Object","prototype","toString","call","DynamicForm","relationFields","split","noStyle","shouldUpdate","_ref2","getFieldValue","relationValues","BaseForm","subIndex","defaultActiveKey","bordered","header","list","_ref3","subbItem","ConfigLayoutRightAsideWidget","configureValue","form","useForm","setFieldsValue","onValuesChange","changedValues","allValues","fields","filed","toHex","labelCol","flex","labelAlign","widgetConfig","configure","baseText","fontConfig","boxConfig","dataConfig","echartsConfig","seriesStack","seriesLabel","symbol","grid","echartColor","animateConfig","ConfigLayoutRightAsideElement","_elements","body","headerStyles","bodyStyles","ConfigLayout","_layout$widget","_layout$widget$config","_layout$widget2","_layout$widget2$confi","_layout$widget3","_layout$widget3$confi","_layout$widget4","_layout$widget4$confi","_layout$widget4$confi2","_layout$widget5","_layout$widget5$confi","_layout$widget5$confi2","_layout$widget6","_layout$widget6$confi","_layout$widget6$confi2","_layout$widget7","_layout$widget7$confi","_layout$widget7$confi2","location","useLocation","layout","dispatch","useReducer","widgetReducer","initialState","URLSearchParams","search","url","id","createTime","count","position","isAdd","capitalizeFirstLetter","dataValue","mock","rightAside","currentElement","find","WidgetLayout","DragContent","isShowAuxiliaryLine","auxiliaryLineBorderColor","_layout$widget8","_layout$widget8$confi","_layout$widget9","parse","_layout$widget10"],"sourceRoot":""}