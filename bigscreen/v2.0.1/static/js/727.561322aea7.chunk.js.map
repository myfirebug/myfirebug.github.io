{"version":3,"file":"static/js/727.561322aea7.chunk.js","mappings":"uSAUO,MAAMA,EAAkBC,iBAA8B,IAAvBC,EAAYC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,IACnD,OAAO,IAAIG,SAASC,IAClBC,YAAW,KACTD,GAAQ,EAAK,GACZL,EAAK,GAEZ,EAEaO,EAAWR,iBAA8B,IAAvBC,EAAYC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,UACtCH,EAAgBE,EACxB,EAkHA,UAhHyBQ,KACvB,MAAMC,GAAYC,EAAAA,EAAAA,UACZC,GAAWC,EAAAA,EAAAA,MAEXC,EAAiC,CACrC,CACEC,MAAO,KACPC,UAAW,QAEb,CACED,MAAO,KACPC,UAAW,MACXC,QAAQ,EACRC,OAAQA,CAACC,EAAMC,EAAQC,EAAGC,IACjBC,EAAAA,cAAA,OAAKC,IAAKL,EAAgBM,IAAI,MAGzC,CACEV,MAAO,KACPC,UAAW,OACXU,UAAU,EACVC,UAAU,EACVC,UAAW,SACXC,UAAW,CACTC,IAAK,CAAEX,KAAM,MACbY,KAAM,CACJZ,KAAM,OACNa,OAAQ,cAId,CACEjB,MAAO,OACPC,UAAW,QACXC,QAAQ,GAEV,CACEF,MAAO,OACPC,UAAW,aACXY,UAAW,OACXK,cAAc,GAEhB,CACElB,MAAO,OACPC,UAAW,aACXY,UAAW,YACXM,aAAa,GAEf,CACEnB,MAAO,KACPa,UAAW,SACXO,IAAK,SACLjB,OAAQA,CAACC,EAAMC,EAAQC,EAAGC,IAAW,CACnCC,EAAAA,cAAA,KACEY,IAAI,WACJC,QAASA,KACPxB,EAAU,6BAA4BQ,EAAOiB,KAAK,GAErD,MAGDd,EAAAA,cAAA,KACEe,KAAMlB,EAAOmB,IACbC,OAAO,SACPC,IAAI,sBACJN,IAAI,QACL,SAOP,OACEZ,EAAAA,cAAA,OAAKmB,UAAU,eACbnB,EAAAA,cAACoB,EAAAA,EAAQ,CACP7B,QAASA,EACTJ,UAAWA,EACXkC,QAAS5C,gBACDQ,EAAS,KACRqC,EAAAA,GAAIC,eAAeC,QAAQ,CAAEC,WAAUC,MAAMC,IAClDC,QAAQC,IAAIF,EAAK,OACVA,MAGXG,OAAO,KACPC,QAAS,CACPC,QAAS,CACPC,YAAa,MAGjBC,WAAY,CACVC,SAAU,GACVC,SAAWC,GAAST,QAAQC,IAAIQ,IAElCC,cAAc,SACdC,YAAY,OACZC,cAAeA,IAAM,CACnBxC,EAAAA,cAACyC,EAAAA,GAAM,CACL7B,IAAI,SACJ8B,KAAM1C,EAAAA,cAAC2C,EAAAA,EAAY,MACnB9B,QAASA,IAAMxB,EAAS,0BACxBuD,KAAK,WACN,SAKD,C","sources":["webpack://large-screen-configuration/./src/pages/widgets/index.tsx"],"sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport type { ActionType, ProColumns } from \"@ant-design/pro-components\";\r\nimport { ProTable } from \"@ant-design/pro-components\";\r\nimport React, { useRef, FC } from \"react\";\r\nimport { API, IWidget } from \"@src/service\";\r\nimport \"./index.scss\";\r\nimport { Button } from \"antd\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport const waitTimePromise = async (time: number = 100) => {\r\n  return new Promise((resolve) => {\r\n    setTimeout(() => {\r\n      resolve(true);\r\n    }, time);\r\n  });\r\n};\r\n\r\nexport const waitTime = async (time: number = 100) => {\r\n  await waitTimePromise(time);\r\n};\r\n\r\nconst Widgets: FC<any> = () => {\r\n  const actionRef = useRef<ActionType>();\r\n  const navigate = useNavigate();\r\n\r\n  const columns: ProColumns<IWidget>[] = [\r\n    {\r\n      title: \"名称\",\r\n      dataIndex: \"name\",\r\n    },\r\n    {\r\n      title: \"图片\",\r\n      dataIndex: \"url\",\r\n      search: false,\r\n      render: (text, record, _, action) => {\r\n        return <img src={text as string} alt=\"\" />;\r\n      },\r\n    },\r\n    {\r\n      title: \"类型\",\r\n      dataIndex: \"type\",\r\n      onFilter: true,\r\n      ellipsis: true,\r\n      valueType: \"select\",\r\n      valueEnum: {\r\n        all: { text: \"全部\" },\r\n        open: {\r\n          text: \"基础文本\",\r\n          status: \"baseText\",\r\n        },\r\n      },\r\n    },\r\n    {\r\n      title: \"使用次数\",\r\n      dataIndex: \"count\",\r\n      search: false,\r\n    },\r\n    {\r\n      title: \"创建时间\",\r\n      dataIndex: \"createTime\",\r\n      valueType: \"date\",\r\n      hideInSearch: true,\r\n    },\r\n    {\r\n      title: \"创建时间\",\r\n      dataIndex: \"createTime\",\r\n      valueType: \"dateRange\",\r\n      hideInTable: true,\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      valueType: \"option\",\r\n      key: \"option\",\r\n      render: (text, record, _, action) => [\r\n        <a\r\n          key=\"editable\"\r\n          onClick={() => {\r\n            navigate(`/widgets/configuration?id=${record.id}`);\r\n          }}\r\n        >\r\n          编辑\r\n        </a>,\r\n        <a\r\n          href={record.url}\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          key=\"view\"\r\n        >\r\n          查看\r\n        </a>,\r\n      ],\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"cms-widgets\">\r\n      <ProTable<IWidget>\r\n        columns={columns}\r\n        actionRef={actionRef}\r\n        request={async (params) => {\r\n          await waitTime(2000);\r\n          return API.widgetsService.widgets({ params }).then((res) => {\r\n            console.log(res, \"res\");\r\n            return res;\r\n          });\r\n        }}\r\n        rowKey=\"id\"\r\n        options={{\r\n          setting: {\r\n            listsHeight: 400,\r\n          },\r\n        }}\r\n        pagination={{\r\n          pageSize: 20,\r\n          onChange: (page) => console.log(page),\r\n        }}\r\n        dateFormatter=\"string\"\r\n        headerTitle=\"微件列表\"\r\n        toolBarRender={() => [\r\n          <Button\r\n            key=\"button\"\r\n            icon={<PlusOutlined />}\r\n            onClick={() => navigate(\"/widgets/configuration\")}\r\n            type=\"primary\"\r\n          >\r\n            新建\r\n          </Button>,\r\n        ]}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Widgets;\r\n"],"names":["waitTimePromise","async","time","arguments","length","undefined","Promise","resolve","setTimeout","waitTime","Widgets","actionRef","useRef","navigate","useNavigate","columns","title","dataIndex","search","render","text","record","_","action","React","src","alt","onFilter","ellipsis","valueType","valueEnum","all","open","status","hideInSearch","hideInTable","key","onClick","id","href","url","target","rel","className","ProTable","request","API","widgetsService","widgets","params","then","res","console","log","rowKey","options","setting","listsHeight","pagination","pageSize","onChange","page","dateFormatter","headerTitle","toolBarRender","Button","icon","PlusOutlined","type"],"sourceRoot":""}