{"version":3,"file":"static/js/59.baa29de39c.chunk.js","mappings":"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","sources":["webpack://cli/./node_modules/@ant-design/pro-components/node_modules/@ant-design/pro-table/es/components/Dropdown/index.js","webpack://cli/./src/pages/widgets/index.tsx"],"sourcesContent":["import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nvar _excluded = [\"key\", \"name\"];\nimport { DownOutlined, EllipsisOutlined } from '@ant-design/icons';\nimport { menuOverlayCompatible } from '@ant-design/pro-utils';\nimport { Button, ConfigProvider, Dropdown } from 'antd';\nimport classnames from 'classnames';\nimport React, { useContext } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n/**\n * 一个简单的下拉菜单\n *\n * @param param0\n */\nvar DropdownButton = function DropdownButton(_ref) {\n  var children = _ref.children,\n    menus = _ref.menus,\n    onSelect = _ref.onSelect,\n    className = _ref.className,\n    style = _ref.style;\n  var _useContext = useContext(ConfigProvider.ConfigContext),\n    getPrefixCls = _useContext.getPrefixCls;\n  var tempClassName = getPrefixCls('pro-table-dropdown');\n  var dropdownProps = menuOverlayCompatible({\n    onClick: function onClick(params) {\n      return onSelect && onSelect(params.key);\n    },\n    items: menus === null || menus === void 0 ? void 0 : menus.map(function (item) {\n      return {\n        label: item.name,\n        key: item.key\n      };\n    })\n  });\n  return /*#__PURE__*/_jsx(Dropdown, _objectSpread(_objectSpread({}, dropdownProps), {}, {\n    className: classnames(tempClassName, className),\n    children: /*#__PURE__*/_jsxs(Button, {\n      style: style,\n      children: [children, \" \", /*#__PURE__*/_jsx(DownOutlined, {})]\n    })\n  }));\n};\nvar TableDropdown = function TableDropdown(_ref2) {\n  var propsClassName = _ref2.className,\n    style = _ref2.style,\n    onSelect = _ref2.onSelect,\n    _ref2$menus = _ref2.menus,\n    menus = _ref2$menus === void 0 ? [] : _ref2$menus,\n    children = _ref2.children;\n  var _useContext2 = useContext(ConfigProvider.ConfigContext),\n    getPrefixCls = _useContext2.getPrefixCls;\n  var className = getPrefixCls('pro-table-dropdown');\n  var dropdownProps = menuOverlayCompatible({\n    onClick: function onClick(params) {\n      onSelect === null || onSelect === void 0 || onSelect(params.key);\n    },\n    items: menus.map(function (_ref3) {\n      var key = _ref3.key,\n        name = _ref3.name,\n        rest = _objectWithoutProperties(_ref3, _excluded);\n      return _objectSpread(_objectSpread({\n        key: key\n      }, rest), {}, {\n        title: rest.title,\n        label: name\n      });\n    })\n  });\n  return /*#__PURE__*/_jsx(Dropdown, _objectSpread(_objectSpread({}, dropdownProps), {}, {\n    className: classnames(className, propsClassName),\n    children: /*#__PURE__*/_jsx(\"a\", {\n      style: style,\n      children: children || /*#__PURE__*/_jsx(EllipsisOutlined, {})\n    })\n  }));\n};\nTableDropdown.Button = DropdownButton;\nexport default TableDropdown;","import { EllipsisOutlined, PlusOutlined } from \"@ant-design/icons\";\r\nimport type { ActionType, ProColumns } from \"@ant-design/pro-components\";\r\nimport { ProTable, TableDropdown } from \"@ant-design/pro-components\";\r\nimport { Button, Dropdown, Space, Tag } from \"antd\";\r\nimport React, { useRef, FC } from \"react\";\r\nimport \"./index.scss\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport const waitTimePromise = async (time: number = 100) => {\r\n  return new Promise((resolve) => {\r\n    setTimeout(() => {\r\n      resolve(true);\r\n    }, time);\r\n  });\r\n};\r\n\r\nexport const waitTime = async (time: number = 100) => {\r\n  await waitTimePromise(time);\r\n};\r\n\r\ntype GithubIssueItem = {\r\n  url: string;\r\n  id: number;\r\n  number: number;\r\n  title: string;\r\n  labels: {\r\n    name: string;\r\n    color: string;\r\n  }[];\r\n  state: string;\r\n  comments: number;\r\n  created_at: string;\r\n  updated_at: string;\r\n  closed_at?: string;\r\n};\r\n\r\nconst columns: ProColumns<GithubIssueItem>[] = [\r\n  {\r\n    dataIndex: \"index\",\r\n    valueType: \"indexBorder\",\r\n    width: 48,\r\n  },\r\n  {\r\n    title: \"标题\",\r\n    dataIndex: \"title\",\r\n    copyable: true,\r\n    ellipsis: true,\r\n    tooltip: \"标题过长会自动收缩\",\r\n    formItemProps: {\r\n      rules: [\r\n        {\r\n          required: true,\r\n          message: \"此项为必填项\",\r\n        },\r\n      ],\r\n    },\r\n  },\r\n  {\r\n    disable: true,\r\n    title: \"状态\",\r\n    dataIndex: \"state\",\r\n    filters: true,\r\n    onFilter: true,\r\n    ellipsis: true,\r\n    valueType: \"select\",\r\n    valueEnum: {\r\n      all: { text: \"超长\".repeat(50) },\r\n      open: {\r\n        text: \"未解决\",\r\n        status: \"Error\",\r\n      },\r\n      closed: {\r\n        text: \"已解决\",\r\n        status: \"Success\",\r\n        disabled: true,\r\n      },\r\n      processing: {\r\n        text: \"解决中\",\r\n        status: \"Processing\",\r\n      },\r\n    },\r\n  },\r\n  {\r\n    disable: true,\r\n    title: \"标签\",\r\n    dataIndex: \"labels\",\r\n    search: false,\r\n    renderFormItem: (_, { defaultRender }) => {\r\n      return defaultRender(_);\r\n    },\r\n    render: (_, record) => (\r\n      <Space>\r\n        {record.labels.map(({ name, color }) => (\r\n          <Tag color={color} key={name}>\r\n            {name}\r\n          </Tag>\r\n        ))}\r\n      </Space>\r\n    ),\r\n  },\r\n  {\r\n    title: \"创建时间\",\r\n    key: \"showTime\",\r\n    dataIndex: \"created_at\",\r\n    valueType: \"date\",\r\n    sorter: true,\r\n    hideInSearch: true,\r\n  },\r\n  {\r\n    title: \"创建时间\",\r\n    dataIndex: \"created_at\",\r\n    valueType: \"dateRange\",\r\n    hideInTable: true,\r\n    search: {\r\n      transform: (value) => {\r\n        return {\r\n          startTime: value[0],\r\n          endTime: value[1],\r\n        };\r\n      },\r\n    },\r\n  },\r\n  {\r\n    title: \"操作\",\r\n    valueType: \"option\",\r\n    key: \"option\",\r\n    render: (text, record, _, action) => [\r\n      // eslint-disable-next-line jsx-a11y/anchor-is-valid\r\n      <a\r\n        key=\"editable\"\r\n        onClick={() => {\r\n          action?.startEditable?.(record.id);\r\n        }}\r\n      >\r\n        编辑\r\n      </a>,\r\n      <a href={record.url} target=\"_blank\" rel=\"noopener noreferrer\" key=\"view\">\r\n        查看\r\n      </a>,\r\n      <TableDropdown\r\n        key=\"actionGroup\"\r\n        onSelect={() => action?.reload()}\r\n        menus={[\r\n          { key: \"copy\", name: \"复制\" },\r\n          { key: \"delete\", name: \"删除\" },\r\n        ]}\r\n      />,\r\n    ],\r\n  },\r\n];\r\n\r\nconst Widgets: FC<any> = () => {\r\n  const actionRef = useRef<ActionType>();\r\n  const navigate = useNavigate();\r\n  return (\r\n    <div className=\"cms-elements\">\r\n      <ProTable<GithubIssueItem>\r\n        columns={columns}\r\n        actionRef={actionRef}\r\n        cardBordered\r\n        // request={async (params, sort, filter) => {\r\n        //   console.log(sort, filter);\r\n        //   await waitTime(2000);\r\n        //   return request<{\r\n        //     data: GithubIssueItem[];\r\n        //   }>(\"https://proapi.azurewebsites.net/github/issues\", {\r\n        //     params,\r\n        //   });\r\n        // }}\r\n        editable={{\r\n          type: \"multiple\",\r\n        }}\r\n        columnsState={{\r\n          persistenceKey: \"pro-table-singe-demos\",\r\n          persistenceType: \"localStorage\",\r\n          defaultValue: {\r\n            option: { fixed: \"right\", disable: true },\r\n          },\r\n          onChange(value) {\r\n            console.log(\"value: \", value);\r\n          },\r\n        }}\r\n        rowKey=\"id\"\r\n        search={{\r\n          labelWidth: \"auto\",\r\n        }}\r\n        options={{\r\n          setting: {\r\n            listsHeight: 400,\r\n          },\r\n        }}\r\n        form={{\r\n          // 由于配置了 transform，提交的参数与定义的不同这里需要转化一下\r\n          syncToUrl: (values, type) => {\r\n            if (type === \"get\") {\r\n              return {\r\n                ...values,\r\n                created_at: [values.startTime, values.endTime],\r\n              };\r\n            }\r\n            return values;\r\n          },\r\n        }}\r\n        pagination={{\r\n          pageSize: 5,\r\n          onChange: (page) => console.log(page),\r\n        }}\r\n        dateFormatter=\"string\"\r\n        headerTitle=\"高级表格\"\r\n        toolBarRender={() => [\r\n          <Button\r\n            key=\"button\"\r\n            icon={<PlusOutlined />}\r\n            onClick={() => {\r\n              // actionRef.current?.reload();\r\n              navigate(\"/widgets/configuration\");\r\n            }}\r\n            type=\"primary\"\r\n          >\r\n            新建\r\n          </Button>,\r\n          <Dropdown\r\n            key=\"menu\"\r\n            menu={{\r\n              items: [\r\n                {\r\n                  label: \"1st item\",\r\n                  key: \"1\",\r\n                },\r\n                {\r\n                  label: \"2nd item\",\r\n                  key: \"2\",\r\n                },\r\n                {\r\n                  label: \"3rd item\",\r\n                  key: \"3\",\r\n                },\r\n              ],\r\n            }}\r\n          >\r\n            <Button>\r\n              <EllipsisOutlined />\r\n            </Button>\r\n          </Dropdown>,\r\n        ]}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Widgets;\r\n"],"names":["_excluded","TableDropdown","_ref2","propsClassName","className","style","onSelect","_ref2$menus","menus","children","getPrefixCls","useContext","dropdownProps","menuOverlayCompatible","onClick","params","key","items","map","_ref3","name","rest","title","label","EllipsisOutlined","Button","_ref","tempClassName","item","DownOutlined","waitTimePromise","async","time","arguments","length","undefined","Promise","resolve","setTimeout","waitTime","columns","dataIndex","valueType","width","copyable","ellipsis","tooltip","formItemProps","rules","required","message","disable","filters","onFilter","valueEnum","all","text","repeat","open","status","closed","disabled","processing","search","renderFormItem","_","defaultRender","render","record","React","Space","labels","color","Tag","sorter","hideInSearch","hideInTable","transform","value","startTime","endTime","action","_action$startEditable","startEditable","call","id","href","url","target","rel","reload","Widgets","actionRef","useRef","navigate","useNavigate","ProTable","cardBordered","editable","type","columnsState","persistenceKey","persistenceType","defaultValue","option","fixed","onChange","console","log","rowKey","labelWidth","options","setting","listsHeight","form","syncToUrl","values","created_at","pagination","pageSize","page","dateFormatter","headerTitle","toolBarRender","icon","PlusOutlined","Dropdown","menu"],"sourceRoot":""}